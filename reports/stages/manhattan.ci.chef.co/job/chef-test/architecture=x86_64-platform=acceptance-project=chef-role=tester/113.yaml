---
result: FAILURE
failure_category: code
failure_cause: chef_acceptance
failed_in:
  chef_acceptance:
  - basics::verify
  - data-collector::verify
  - top-cookbooks::provision
  - fips::verify
  step: CHEF-ACCEPTANCE
timestamp: 2016-08-03 01:56:48 UTC
url: http://manhattan.ci.chef.co/job/chef-test/architecture=x86_64,platform=acceptance,project=chef,role=tester/113/
trigger_url: http://manhattan.ci.chef.co/job/chef-trigger-ad_hoc/135/
duration: 9m56s
logs:
  consoleText:
    8010: |
      BASICS::VERIFY::[2016-08-03 02:01:45 +0000]

            ================================================================================
            Error executing action `run` on resource 'ruby_block[copy_kitchen_logs_to_data_path]'
            ================================================================================

            Mixlib::ShellOut::ShellCommandFailed
            ------------------------------------
            Expected process to exit with [0], but received '20'
            ---- Begin output of bundle exec kitchen verify  -c -l debug ----
            STDOUT: -----> Starting Kitchen (v1.10.2)
            -----> Setting up <chef-current-install-ubuntu-1404>...
                   Finished setting up <chef-current-install-ubuntu-1404> (0m0.00s).
            -----> Verifying <chef-current-install-ubuntu-1404>...
                   Preparing files for transfer
            D      Creating local sandbox in /tmp/cheftest/chef-current-install-ubuntu-1404-sandbox-20160803-483-ygcdwt
            D      [SSH] ubuntu@10.194.13.99<{:user_known_hosts_file=>"/dev/null", :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>["/home/jenkins/.ssh/jenkins.pem"], :auth_methods=>["publickey"]}> (sh -c '
            BUSSER_ROOT="/tmp/verifier"; export BUSSER_ROOT
            GEM_HOME="/tmp/verifier/gems"; export GEM_HOME
            GEM_PATH="/tmp/verifier/gems"; export GEM_PATH
            GEM_CACHE="/tmp/verifier/gems/cache"; export GEM_CACHE
            ruby="/opt/chef/embedded/bin/ruby"
      BASICS::VERIFY::[2016-08-03 02:01:45 +0000]       gem="/opt/chef/embedded/bin/gem"
            version="busser"
    8100: "             Fetching: serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem
      ( 41%)\rFetching: serverspec-2.36.0.gem ( 83%)\rFetching: serverspec-2.36.0.gem
      (100%)\rFetching: serverspec-2.36.0.gem (100%)\n      -----> serverspec installed
      (version 2.36.0)\n             /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n               from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n               from /tmp/verifier/gems/gems/busser-serverspec-0.5.9\n"
    8209: |2
            Cookbook Trace:
            ---------------
            /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in `block (3 levels) in <class:Kitchen>'

            Resource Declaration:
    8264: "\nBASICS::VERIFY::[2016-08-03 02:01:45 +0000]\n    ================================================================================\n
      \   Error executing action `run` on resource 'kitchen[verify]'\n    ================================================================================\n\n
      \   Mixlib::ShellOut::ShellCommandFailed\n    ------------------------------------\n
      \   ruby_block[copy_kitchen_logs_to_data_path] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb
      line 39) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process
      to exit with [0], but received '20'\n    ---- Begin output of bundle exec kitchen
      verify  -c -l debug ----\n    STDOUT: -----> Starting Kitchen (v1.10.2)\n    ----->
      Setting up <chef-current-install-ubuntu-1404>...\n           Finished setting
      up <chef-current-install-ubuntu-1404> (0m0.00s).\n    -----> Verifying <chef-current-install-ubuntu-1404>...\n
      \          Preparing files for transfer\n    D      Creating local sandbox in
      /tmp/cheftest/chef-current-install-ubuntu-1404-sandbox-20160803-483-ygcdwt\n
      \   D      [SSH] ubuntu@10.194.13.99<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n
      \   ruby=\"/opt/chef/embedded/bin/ruby\"\n    gem=\"/opt/chef/embedded/bin/gem\"\n
      \   version=\"busser\"\n    gem_install_args=\"busser --no-rdoc --no-ri --no-format-executable
      -n /tmp/verifier/bin --no-user-install\"\n    busser=\"sudo -E /tmp/verifier/bin/busser\"\n
      \   plugins=\"busser-serverspec\"\n\n    $gem list busser -i 2>&1 >/dev/null\n
      \   if test $? -ne 0; then\n      echo \"-----> Installing Busser ($version)\"\n
      \     $gem install $gem_install_args\n    else\n      echo \"-----> Busser installation
      detected ($version)\"\n    fi\n\n    if test ! -f \"$BUSSER_ROOT/bin/busser\";
      then\n      $busser setup\n    fi\n\n    echo \"       Installing Busser plugins:
      $plugins\"\n    $busser plugin install $plugins\n    ')\n    D      [SSH] opening
      connection to ubuntu@10.194.13.99<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n    -----> Installing Busser (busser)\n           Fetching:
      thor-0.19.0.gem\rFetching: thor-0.19.0.gem (  3%)\rFetching: thor-0.19.0.gem
      (  6%)\rFetching: thor-0.19.0.gem (  9%)\rFetching: thor-0.19.0.gem ( 12%)\rFetching:
      thor-0.19.0.gem ( 15%)\rFetching: thor-0.19.0.gem ( 18%)\rFetching: thor-0.19.0.gem
      ( 21%)\rFetching: thor-0.19.0.gem ( 24%)\rFetching: thor-0.19.0.gem ( 27%)\rFetching:
      thor-0.19.0.gem ( 30%)\rFetching: thor-0.19.0.gem ( 33%)\rFetching: thor-0.19.0.gem
      ( 35%)\rFetching: thor-0.19.0.gem ( 53%)\rFetching: thor-0.19.0.gem ( 71%)\rFetching:
      thor-0.19.0.gem ( 89%)\rFetching: thor-0.19.0.gem (100%)\rFetching: thor-0.19.0.gem
      (100%)\n           Successfully installed thor-0.19.0\n           Fetching:
      busser-0.7.1.gem\rFetching: busser-0.7.1.gem ( 64%)\rFetching: busser-0.7.1.gem
      (100%)\rFetching: busser-0.7.1.gem (100%)\n           Successfully installed
      busser-0.7.1\n           2 gems installed\n           Installing Busser plugins:
      busser-serverspec\n           Plugin serverspec installed (version 0.5.9)\n
      \   -----> Running postinstall for serverspec plugin\n    D      [SSH] ubuntu@10.194.13.99<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/veri\nBASICS::VERIFY::[2016-08-03
      02:01:45 +0000] fier\"; export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\";
      export GEM_HOME\n"
    8355: "           Fetching: serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem
      ( 41%)\rFetching: serverspec-2.36.0.gem ( 83%)\rFetching: serverspec-2.36.0.gem
      (100%)\rFetching: serverspec-2.36.0.gem (100%)\n    -----> serverspec installed
      (version 2.36.0)\n           /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n             from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n             from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n"
    8464: |2
          Cookbook Trace:
          ---------------
          /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in `block (3 levels) in <class:Kitchen>'

          Resource Declaration:
    8503: |2

      Running handlers:
      [2016-08-03T02:01:46+00:00] ERROR: Running exception handlers
      Running handlers complete
      [2016-08-03T02:01:46+00:00] ERROR: Exception handlers complete
      Chef Client failed. 0 resources updated in 20 seconds
      BASICS::VERIFY::[2016-08-03 02:01:46 +0000] [2016-08-03T02:01:46+00:00] ERROR: Failed to post audit report to server. Saving report to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/failed-audit-data.json
      [2016-08-03T02:01:46+00:00] FATAL: Stacktrace dumped to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/chef-stacktrace.out
      [2016-08-03T02:01:46+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
      [2016-08-03T02:01:46+00:00] ERROR: Found 1 errors, they are stored in the backtrace
      BASICS::VERIFY::[2016-08-03 02:01:47 +0000] [2016-08-03T02:01:47+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
      CHEF-ACCEPTANCE::[2016-08-03 02:01:47 +0000] Encountered an error running the recipe verify: Expected process to exit with [0], but received '1'
      ---- Begin output of chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/dna.json -o acceptance-cookbook::verify --no-color ----
    8609: "       Fetching: serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem
      ( 41%)\rFetching: serverspec-2.36.0.gem ( 83%)\rFetching: serverspec-2.36.0.gem
      (100%)\rFetching: serverspec-2.36.0.gem (100%)\n-----> serverspec installed
      (version 2.36.0)\n       /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n         from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n         from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n"
    8712: "\n\n      ================================================================================\n
      \     Error executing action `run` on resource 'ruby_block[copy_kitchen_logs_to_data_path]'\n
      \     ================================================================================\n\n
      \     Mixlib::ShellOut::ShellCommandFailed\n      ------------------------------------\n
      \     Expected process to exit with [0], but received '20'\n      ---- Begin
      output of bundle exec kitchen verify  -c -l debug ----\n      STDOUT: ----->
      Starting Kitchen (v1.10.2)\n      -----> Setting up <chef-current-install-ubuntu-1404>...\n
      \            Finished setting up <chef-current-install-ubuntu-1404> (0m0.00s).\n
      \     -----> Verifying <chef-current-install-ubuntu-1404>...\n             Preparing
      files for transfer\n      D      Creating local sandbox in /tmp/cheftest/chef-current-install-ubuntu-1404-sandbox-20160803-483-ygcdwt\n
      \     D      [SSH] ubuntu@10.194.13.99<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n      ruby=\"/opt/chef/embedded/bin/ruby\"\n      gem=\"/opt/chef/embedded/bin/gem\"\n
      \     version=\"busser\"\n      gem_install_args=\"busser --no-rdoc --no-ri
      --no-format-executable -n /tmp/verifier/bin --no-user-install\"\n      busser=\"sudo
      -E /tmp/verifier/bin/busser\"\n      plugins=\"busser-serverspec\"\n\n      $gem
      list busser -i 2>&1 >/dev/null\n      if test $? -ne 0; then\n        echo \"----->
      Installing Busser ($version)\"\n        $gem install $gem_install_args\n      else\n
      \       echo \"-----> Busser installation detected ($version)\"\n      fi\n\n
      \     if test ! -f \"$BUSSER_ROOT/bin/busser\"; then\n        $busser setup\n
      \     fi\n\n      echo \"       Installing Busser plugins: $plugins\"\n      $busser
      plugin install $plugins\n      ')\n      D      [SSH] opening connection to
      ubuntu@10.194.13.99<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n      -----> Installing Busser (busser)\n
      \            Fetching: thor-0.19.0.gem\rFetching: thor-0.19.0.gem (  3%)\rFetching:
      thor-0.19.0.gem (  6%)\rFetching: thor-0.19.0.gem (  9%)\rFetching: thor-0.19.0.gem
      ( 12%)\rFetching: thor-0.19.0.gem ( 15%)\rFetching: thor-0.19.0.gem ( 18%)\rFetching:
      thor-0.19.0.gem ( 21%)\rFetching: thor-0.19.0.gem ( 24%)\rFetching: thor-0.19.0.gem
      ( 27%)\rFetching: thor-0.19.0.gem ( 30%)\rFetching: thor-0.19.0.gem ( 33%)\rFetching:
      thor-0.19.0.gem ( 35%)\rFetching: thor-0.19.0.gem ( 53%)\rFetching: thor-0.19.0.gem
      ( 71%)\rFetching: thor-0.19.0.gem ( 89%)\rFetching: thor-0.19.0.gem (100%)\rFetching:
      thor-0.19.0.gem (100%)\n             Successfully installed thor-0.19.0\n             Fetching:
      busser-0.7.1.gem\rFetching: busser-0.7.1.gem ( 64%)\rFetching: busser-0.7.1.gem
      (100%)\rFetching: busser-0.7.1.gem (100%)\n             Successfully installed
      busser-0.7.1\n             2 gems installed\n             Installing Busser
      plugins: busser-serverspec\n             Plugin serverspec installed (version
      0.5.9)\n      -----> Running postinstall for serverspec plugin\n      D      [SSH]
      ubuntu@10.194.13.99<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser suite cleanup\n      ')\n
      \            Suite path directory /tmp/verifier/suites does not exist, skipping.\n
      \            Transferring files to <chef-current-install-ubuntu-1404>\n      D
      \     TIMING: scp async upload (Kitchen::Transport::Ssh)\n      D      TIMING:
      scp async upload (Kitchen::Transport::Ssh) took (0m0.10s)\n      D      Transfer
      complete\n      D      [SSH] ubuntu@10.194.13.99<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser test\n      ')\n
      \     -----> Running serverspec test suite\n      -----> Installing Serverspec..\n
      \            Fetching: rspec-support-3.5.0.gem\rFetching: rspec-support-3.5.0.gem
      (  7%)\rFetching: rspec-support-3.5.0.gem ( 15%)\rFetching: rspec-support-3.5.0.gem
      ( 23%)\rFetching: rspec-support-3.5.0.gem ( 32%)\rFetching: rspec-support-3.5.0.gem
      ( 40%)\rFetching: rspec-support-3.5.0.gem ( 48%)\rFetching: rspec-support-3.5.0.gem
      ( 56%)\rFetching: rspec-support-3.5.0.gem ( 64%)\rFetching: rspec-support-3.5.0.gem
      ( 72%)\rFetching: rspec-support-3.5.0.gem ( 81%)\rFetching: rspec-support-3.5.0.gem
      ( 89%)\rFetching: rspec-support-3.5.0.gem ( 97%)\rFetching: rspec-support-3.5.0.gem
      (100%)\rFetching: rspec-support-3.5.0.gem (100%)\n             Fetching: rspec-core-3.5.2.gem\rFetching:
      rspec-core-3.5.2.gem (  2%)\rFetching: rspec-core-3.5.2.gem (  4%)\rFetching:
      rspec-core-3.5.2.gem (  5%)\rFetching: rspec-core-3.5.2.gem (  7%)\rFetching:
      rspec-core-3.5.2.gem (  9%)\rFetching: rspec-core-3.5.2.gem ( 11%)\rFetching:
      rspec-core-3.5.2.gem ( 13%)\rFetching: rspec-core-3.5.2.gem ( 14%)\rFetching:
      rspec-core-3.5.2.gem ( 16%)\rFetching: rspec-core-3.5.2.gem ( 18%)\rFetching:
      rspec-core-3.5.2.gem ( 20%)\rFetching: rspec-core-3.5.2.gem ( 22%)\rFetching:
      rspec-core-3.5.2.gem ( 32%)\rFetching: rspec-core-3.5.2.gem ( 43%)\rFetching:
      rspec-core-3.5.2.gem ( 54%)\rFetching: rspec-core-3.5.2.gem ( 65%)\rFetching:
      rspec-core-3.5.2.gem ( 76%)\rFetching: rspec-core-3.5.2.gem ( 87%)\rFetching:
      rspec-core-3.5.2.gem ( 97%)\rFetching: rspec-core-3.5.2.gem (100%)\rFetching:
      rspec-core-3.5.2.gem (100%)\n             Fetching: diff-lcs-1.2.5.gem\rFetching:
      diff-lcs-1.2.5.gem ( 32%)\rFetching: diff-lcs-1.2.5.gem ( 66%)\rFetching: diff-lcs-1.2.5.gem
      ( 99%)\rFetching: diff-lcs-1.2.5.gem (100%)\rFetching: diff-lcs-1.2.5.gem (100%)\n
      \            Fetching: rspec-expectations-3.5.0.gem\rFetching: rspec-expectations-3.5.0.gem
      ( 21%)\rFetching: rspec-expectations-3.5.0.gem ( 42%)\rFetching: rspec-expectations-3.5.0.gem
      ( 63%)\rFetching: rspec-expectations-3.5.0.gem ( 84%)\rFetching: rspec-expectations-3.5.0.gem
      (100%)\rFetching: rspec-expectations-3.5.0.gem (100%)\n             Fetching:
      rspec-mocks-3.5.0.gem\rFetching: rspec-mocks-3.5.0.gem ( 21%)\rFetching: rspec-mocks-3.5.0.gem
      ( 42%)\rFetching: rspec-mocks-3.5.0.gem ( 64%)\rFetching: rspec-mocks-3.5.0.gem
      ( 85%)\rFetching: rspec-mocks-3.5.0.gem (100%)\rFetching: rspec-mocks-3.5.0.gem
      (100%)\n             Fetching: rspec-3.5.0.gem\rFetching: rspec-3.5.0.gem (100%)\rFetching:
      rspec-3.5.0.gem (100%)\n             Fetching: rspec-its-1.2.0.gem\rFetching:
      rspec-its-1.2.0.gem (100%)\rFetching: rspec-its-1.2.0.gem (100%)\n             Fetching:
      multi_json-1.12.1.gem\rFetching: multi_json-1.12.1.gem ( 61%)\rFetching: multi_json-1.12.1.gem
      (100%)\rFetching: multi_json-1.12.1.gem (100%)\n             Fetching: net-ssh-3.2.0.gem\rFetching:
      net-ssh-3.2.0.gem (  9%)\rFetching: net-ssh-3.2.0.gem ( 18%)\rFetching: net-ssh-3.2.0.gem
      ( 27%)\rFetching: net-ssh-3.2.0.gem ( 35%)\rFetching: net-ssh-3.2.0.gem ( 44%)\rFetching:
      net-ssh-3.2.0.gem ( 53%)\rFetching: net-ssh-3.2.0.gem ( 62%)\rFetching: net-ssh-3.2.0.gem
      ( 71%)\rFetching: net-ssh-3.2.0.gem ( 80%)\rFetching: net-ssh-3.2.0.gem ( 89%)\rFetching:
      net-ssh-3.2.0.gem ( 97%)\rFetching: net-ssh-3.2.0.gem (100%)\rFetching: net-ssh-3.2.0.gem
      (100%)\n             Fetching: net-scp-1.2.1.gem\rFetching: net-scp-1.2.1.gem
      ( 48%)\rFetching: net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem (100%)\rFetching:
      net-scp-1.2.1.gem (100%)\n             Fetching: net-telnet-0.1.1.gem\rFetching:
      net-telnet-0.1.1.gem ( 93%)\rFetching: net-telnet-0.1.1.gem (100%)\rFetching:
      net-telnet-0.1.1.gem (100%)\n             Fetching: sfl-2.2.gem\rFetching: sfl-2.2.gem
      (100%)\rFetching: sfl-2.2.gem (100%)\n             Fetching: specinfra-2.60.2.gem\rFetching:
      specinfra-2.60.2.gem ( 20%)\rFetching: specinfra-2.60.2.gem ( 40%)\rFetching:
      specinfra-2.60.2.gem ( 61%)\rFetching: specinfra-2.60.2.gem ( 81%)\rFetching:
      specinfra-2.60.2.gem (100%)\rFetching: specinfra-2.60.2.gem (100%)\n             Fetching:
      serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem ( 41%)\rFetching: serverspec-2.36.0.gem
      ( 83%)\rFetching: serverspec-2.36.0.gem (100%)\rFetching: serverspec-2.36.0.gem
      (100%)\n      -----> serverspec installed (version 2.36.0)\n             /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n               from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n               from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n             !!!!!! Ruby Script [/tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      /tmp/verifier/suites/serverspec] exit code was 1\n      D      Cleaning up local
      sandbox in /tmp/cheftest/chef-current-install-ubuntu-1404-sandbox-20160803-483-ygcdwt\n
      \     D      ------Exception-------\n      D      Class: Kitchen::ActionFailed\n
      \     D      Message: 1 actions failed.\n      >>>>>>     Verify failed on instance
      <chef-current-install-ubuntu-1404>.  Please see .kitchen/logs/chef-current-install-ubuntu-1404.log
      for more details\n      D      ----------------------\n      D      ------Backtrace-------\n
      \     D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:187:in
      `report_errors'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:178:in
      `run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:39:in
      `block in call'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:37:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:56:in
      `perform'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:184:in
      `block (2 levels) in <class:CLI>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/command.rb:27:in
      `run'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/invocation.rb:126:in
      `invoke_command'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:325:in
      `invoke_task'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor.rb:359:in
      `dispatch'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/base.rb:440:in
      `start'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `block in <top (required)>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/errors.rb:174:in
      `with_friendly_errors'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `<top (required)>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `load'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `<top (required)>'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `load'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `kernel_load'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:24:in
      `run'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:304:in
      `exec'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/command.rb:27:in
      `run'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in
      `invoke_command'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor.rb:359:in
      `dispatch'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/base.rb:440:in
      `start'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:11:in
      `start'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:27:in
      `block in <top (required)>'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/friendly_errors.rb:98:in
      `with_friendly_errors'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:19:in
      `<top (required)>'\n      D      /opt/chefdk/embedded/bin/bundle:22:in `load'\n
      \     D      /opt/chefdk/embedded/bin/bundle:22:in `<main>'\n      D      ----End
      Backtrace-----\n      D      -Composite Exception--\n      D      Class: Kitchen::InstanceFailure\n
      \     D      Message: Verify failed on instance <chef-current-install-ubuntu-1404>.
      \ Please see .kitchen/logs/chef-current-install-ubuntu-1404.log for more details\n
      \     D      ----------------------\n      D      ------Backtrace-------\n      D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      ----End Backtrace-----\n      D
      \     ---Nested Exception---\n      D      Class: Kitchen::ActionFailed\n      D
      \     Message: SSH exited (1) for command: [sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser test\n      ']\n
      \     D      ----------------------\n      D      ------Backtrace-------\n      D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      ----End Backtrace-----\n      STDERR:
      >>>>>> ------Exception-------\n      >>>>>> Class: Kitchen::ActionFailed\n      >>>>>>
      Message: 1 actions failed.\n      >>>>>>     Verify failed on instance <chef-current-install-ubuntu-1404>.
      \ Please see .kitchen/logs/chef-current-install-ubuntu-1404.log for more details\n
      \     >>>>>> ----------------------\n      >>>>>> Please see .kitchen/logs/kitchen.log
      for more details\n      >>>>>> Also try running `kitchen diagnose --all` for
      configuration\n      ---- End output of bundle exec kitchen verify  -c -l debug
      ----\n      Ran bundle exec kitchen verify  -c -l debug returned 20\n\n      Cookbook
      Trace:\n      ---------------\n      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in
      `block (3 levels) in <class:Kitchen>'\n\n      Resource Declaration:\n      ---------------------\n
      \     # In /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb\n\n
      \      39:       ruby_block \"copy_kitchen_logs_to_data_path\" do\n       40:
      \        block do\n       41:           cmd_env = {\n       42:             \"KITCHEN_DRIVER\"
      => driver,\n       43:             \"KITCHEN_INSTANCES\" => instances,\n       44:
      \            \"KITCHEN_LOCAL_YAML\" => ::File.expand_path(\"../../.kitchen.#{driver}.yml\",
      __FILE__),\n       45:             \"KITCHEN_CHEF_PRODUCT\" => chef_product,\n
      \      46:             \"KITCHEN_CHEF_CHANNEL\" => chef_channel,\n       47:
      \            \"KITCHEN_CHEF_VERSION\" => chef_version,\n       48:             \"ARTIFACTORY_USERNAME\"
      => artifactory_username,\n       49:             \"ARTIFACTORY_PASSWORD\" =>
      artifactory_password\n       50:           }.merge(new_resource.env)\n       51:
      \          suite = kitchen_dir.split(\"/\").last\n       52:           kitchen_log_path
      = ENV[\"WORKSPACE\"] ? \"#{ENV[\"WORKSPACE\"]}/chef-acceptance-data/logs\" :
      \"#{kitchen_dir}/../.acceptance_data/logs/\"\n       53:\n       54:           begin\n
      \      55:             shell_out!(\"bundle exec kitchen #{command}#{instances
      ? \" #{instances}\" : \"\"}#{kitchen_options ? \" #{kitchen_options}\" : \"\"}\",\n
      \      56:                        env: cmd_env,\n       57:                        timeout:
      60 * 30,\n       58:                        live_stream: STDOUT,\n       59:
      \                       cwd: kitchen_dir)\n       60:           ensure\n       61:
      \            FileUtils.mkdir_p(\"#{kitchen_log_path}/#{suite}/#{command}\")\n
      \      62:             FileUtils.cp_r(\"#{kitchen_dir}/.kitchen/logs/.\", \"#{kitchen_log_path}/#{suite}/#{command}\")\n
      \      63:           end\n       64:         end\n       65:       end\n\n      Compiled
      Resource:\n      ------------------\n      # Declared in /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:39:in
      `block in <class:Kitchen>'\n\n      ruby_block(\"copy_kitchen_logs_to_data_path\")
      do\n        action [:run]\n        retries 0\n        retry_delay 2\n        default_guard_interpreter
      :default\n        block_name \"copy_kitchen_logs_to_data_path\"\n        declared_type
      :ruby_block\n        cookbook_name \"acceptance-cookbook\"\n        block #<Proc:0x0000000510af68@/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:40>\n
      \     end\n\n      Platform:\n      ---------\n      x86_64-linux\n\n\n    ================================================================================\n
      \   Error executing action `run` on resource 'kitchen[verify]'\n    ================================================================================\n\n
      \   Mixlib::ShellOut::ShellCommandFailed\n    ------------------------------------\n
      \   ruby_block[copy_kitchen_logs_to_data_path] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb
      line 39) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process
      to exit with [0], but received '20'\n    ---- Begin output of bundle exec kitchen
      verify  -c -l debug ----\n    STDOUT: -----> Starting Kitchen (v1.10.2)\n    ----->
      Setting up <chef-current-install-ubuntu-1404>...\n           Finished setting
      up <chef-current-install-ubuntu-1404> (0m0.00s).\n    -----> Verifying <chef-current-install-ubuntu-1404>...\n
      \          Preparing files for transfer\n    D      Creating local sandbox in
      /tmp/cheftest/chef-current-install-ubuntu-1404-sandbox-20160803-483-ygcdwt\n
      \   D      [SSH] ubuntu@10.194.13.99<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n
      \   ruby=\"/opt/chef/embedded/bin/ruby\"\n    gem=\"/opt/chef/embedded/bin/gem\"\n
      \   version=\"busser\"\n    gem_install_args=\"busser --no-rdoc --no-ri --no-format-executable
      -n /tmp/verifier/bin --no-user-install\"\n    busser=\"sudo -E /tmp/verifier/bin/busser\"\n
      \   plugins=\"busser-serverspec\"\n\n    $gem list busser -i 2>&1 >/dev/null\n
      \   if test $? -ne 0; then\n      echo \"-----> Installing Busser ($version)\"\n
      \     $gem install $gem_install_args\n    else\n      echo \"-----> Busser installation
      detected ($version)\"\n    fi\n\n    if test ! -f \"$BUSSER_ROOT/bin/busser\";
      then\n      $busser setup\n    fi\n\n    echo \"       Installing Busser plugins:
      $plugins\"\n    $busser plugin install $plugins\n    ')\n    D      [SSH] opening
      connection to ubuntu@10.194.13.99<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n    -----> Installing Busser (busser)\n           Fetching:
      thor-0.19.0.gem\rFetching: thor-0.19.0.gem (  3%)\rFetching: thor-0.19.0.gem
      (  6%)\rFetching: thor-0.19.0.gem (  9%)\rFetching: thor-0.19.0.gem ( 12%)\rFetching:
      thor-0.19.0.gem ( 15%)\rFetching: thor-0.19.0.gem ( 18%)\rFetching: thor-0.19.0.gem
      ( 21%)\rFetching: thor-0.19.0.gem ( 24%)\rFetching: thor-0.19.0.gem ( 27%)\rFetching:
      thor-0.19.0.gem ( 30%)\rFetching: thor-0.19.0.gem ( 33%)\rFetching: thor-0.19.0.gem
      ( 35%)\rFetching: thor-0.19.0.gem ( 53%)\rFetching: thor-0.19.0.gem ( 71%)\rFetching:
      thor-0.19.0.gem ( 89%)\rFetching: thor-0.19.0.gem (100%)\rFetching: thor-0.19.0.gem
      (100%)\n           Successfully installed thor-0.19.0\n           Fetching:
      busser-0.7.1.gem\rFetching: busser-0.7.1.gem ( 64%)\rFetching: busser-0.7.1.gem
      (100%)\rFetching: busser-0.7.1.gem (100%)\n           Successfully installed
      busser-0.7.1\n           2 gems installed\n           Installing Busser plugins:
      busser-serverspec\n           Plugin serverspec installed (version 0.5.9)\n
      \   -----> Running postinstall for serverspec plugin\n    D      [SSH] ubuntu@10.194.13.99<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser suite cleanup\n    ')\n           Suite
      path directory /tmp/verifier/suites does not exist, skipping.\n           Transferring
      files to <chef-current-install-ubuntu-1404>\n    D      TIMING: scp async upload
      (Kitchen::Transport::Ssh)\n    D      TIMING: scp async upload (Kitchen::Transport::Ssh)
      took (0m0.10s)\n    D      Transfer complete\n    D      [SSH] ubuntu@10.194.13.99<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser test\n    ')\n    -----> Running serverspec
      test suite\n    -----> Installing Serverspec..\n           Fetching: rspec-support-3.5.0.gem\rFetching:
      rspec-support-3.5.0.gem (  7%)\rFetching: rspec-support-3.5.0.gem ( 15%)\rFetching:
      rspec-support-3.5.0.gem ( 23%)\rFetching: rspec-support-3.5.0.gem ( 32%)\rFetching:
      rspec-support-3.5.0.gem ( 40%)\rFetching: rspec-support-3.5.0.gem ( 48%)\rFetching:
      rspec-support-3.5.0.gem ( 56%)\rFetching: rspec-support-3.5.0.gem ( 64%)\rFetching:
      rspec-support-3.5.0.gem ( 72%)\rFetching: rspec-support-3.5.0.gem ( 81%)\rFetching:
      rspec-support-3.5.0.gem ( 89%)\rFetching: rspec-support-3.5.0.gem ( 97%)\rFetching:
      rspec-support-3.5.0.gem (100%)\rFetching: rspec-support-3.5.0.gem (100%)\n           Fetching:
      rspec-core-3.5.2.gem\rFetching: rspec-core-3.5.2.gem (  2%)\rFetching: rspec-core-3.5.2.gem
      (  4%)\rFetching: rspec-core-3.5.2.gem (  5%)\rFetching: rspec-core-3.5.2.gem
      (  7%)\rFetching: rspec-core-3.5.2.gem (  9%)\rFetching: rspec-core-3.5.2.gem
      ( 11%)\rFetching: rspec-core-3.5.2.gem ( 13%)\rFetching: rspec-core-3.5.2.gem
      ( 14%)\rFetching: rspec-core-3.5.2.gem ( 16%)\rFetching: rspec-core-3.5.2.gem
      ( 18%)\rFetching: rspec-core-3.5.2.gem ( 20%)\rFetching: rspec-core-3.5.2.gem
      ( 22%)\rFetching: rspec-core-3.5.2.gem ( 32%)\rFetching: rspec-core-3.5.2.gem
      ( 43%)\rFetching: rspec-core-3.5.2.gem ( 54%)\rFetching: rspec-core-3.5.2.gem
      ( 65%)\rFetching: rspec-core-3.5.2.gem ( 76%)\rFetching: rspec-core-3.5.2.gem
      ( 87%)\rFetching: rspec-core-3.5.2.gem ( 97%)\rFetching: rspec-core-3.5.2.gem
      (100%)\rFetching: rspec-core-3.5.2.gem (100%)\n           Fetching: diff-lcs-1.2.5.gem\rFetching:
      diff-lcs-1.2.5.gem ( 32%)\rFetching: diff-lcs-1.2.5.gem ( 66%)\rFetching: diff-lcs-1.2.5.gem
      ( 99%)\rFetching: diff-lcs-1.2.5.gem (100%)\rFetching: diff-lcs-1.2.5.gem (100%)\n
      \          Fetching: rspec-expectations-3.5.0.gem\rFetching: rspec-expectations-3.5.0.gem
      ( 21%)\rFetching: rspec-expectations-3.5.0.gem ( 42%)\rFetching: rspec-expectations-3.5.0.gem
      ( 63%)\rFetching: rspec-expectations-3.5.0.gem ( 84%)\rFetching: rspec-expectations-3.5.0.gem
      (100%)\rFetching: rspec-expectations-3.5.0.gem (100%)\n           Fetching:
      rspec-mocks-3.5.0.gem\rFetching: rspec-mocks-3.5.0.gem ( 21%)\rFetching: rspec-mocks-3.5.0.gem
      ( 42%)\rFetching: rspec-mocks-3.5.0.gem ( 64%)\rFetching: rspec-mocks-3.5.0.gem
      ( 85%)\rFetching: rspec-mocks-3.5.0.gem (100%)\rFetching: rspec-mocks-3.5.0.gem
      (100%)\n           Fetching: rspec-3.5.0.gem\rFetching: rspec-3.5.0.gem (100%)\rFetching:
      rspec-3.5.0.gem (100%)\n           Fetching: rspec-its-1.2.0.gem\rFetching:
      rspec-its-1.2.0.gem (100%)\rFetching: rspec-its-1.2.0.gem (100%)\n           Fetching:
      multi_json-1.12.1.gem\rFetching: multi_json-1.12.1.gem ( 61%)\rFetching: multi_json-1.12.1.gem
      (100%)\rFetching: multi_json-1.12.1.gem (100%)\n           Fetching: net-ssh-3.2.0.gem\rFetching:
      net-ssh-3.2.0.gem (  9%)\rFetching: net-ssh-3.2.0.gem ( 18%)\rFetching: net-ssh-3.2.0.gem
      ( 27%)\rFetching: net-ssh-3.2.0.gem ( 35%)\rFetching: net-ssh-3.2.0.gem ( 44%)\rFetching:
      net-ssh-3.2.0.gem ( 53%)\rFetching: net-ssh-3.2.0.gem ( 62%)\rFetching: net-ssh-3.2.0.gem
      ( 71%)\rFetching: net-ssh-3.2.0.gem ( 80%)\rFetching: net-ssh-3.2.0.gem ( 89%)\rFetching:
      net-ssh-3.2.0.gem ( 97%)\rFetching: net-ssh-3.2.0.gem (100%)\rFetching: net-ssh-3.2.0.gem
      (100%)\n           Fetching: net-scp-1.2.1.gem\rFetching: net-scp-1.2.1.gem
      ( 48%)\rFetching: net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem (100%)\rFetching:
      net-scp-1.2.1.gem (100%)\n           Fetching: net-telnet-0.1.1.gem\rFetching:
      net-telnet-0.1.1.gem ( 93%)\rFetching: net-telnet-0.1.1.gem (100%)\rFetching:
      net-telnet-0.1.1.gem (100%)\n           Fetching: sfl-2.2.gem\rFetching: sfl-2.2.gem
      (100%)\rFetching: sfl-2.2.gem (100%)\n           Fetching: specinfra-2.60.2.gem\rFetching:
      specinfra-2.60.2.gem ( 20%)\rFetching: specinfra-2.60.2.gem ( 40%)\rFetching:
      specinfra-2.60.2.gem ( 61%)\rFetching: specinfra-2.60.2.gem ( 81%)\rFetching:
      specinfra-2.60.2.gem (100%)\rFetching: specinfra-2.60.2.gem (100%)\n           Fetching:
      serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem ( 41%)\rFetching: serverspec-2.36.0.gem
      ( 83%)\rFetching: serverspec-2.36.0.gem (100%)\rFetching: serverspec-2.36.0.gem
      (100%)\n    -----> serverspec installed (version 2.36.0)\n           /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n             from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n             from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n           !!!!!! Ruby Script [/tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      /tmp/verifier/suites/serverspec] exit code was 1\n    D      Cleaning up local
      sandbox in /tmp/cheftest/chef-current-install-ubuntu-1404-sandbox-20160803-483-ygcdwt\n
      \   D      ------Exception-------\n    D      Class: Kitchen::ActionFailed\n
      \   D      Message: 1 actions failed.\n    >>>>>>     Verify failed on instance
      <chef-current-install-ubuntu-1404>.  Please see .kitchen/logs/chef-current-install-ubuntu-1404.log
      for more details\n    D      ----------------------\n    D      ------Backtrace-------\n
      \   D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:187:in
      `report_errors'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:178:in
      `run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:39:in
      `block in call'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:37:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:56:in
      `perform'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:184:in
      `block (2 levels) in <class:CLI>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/command.rb:27:in
      `run'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/invocation.rb:126:in
      `invoke_command'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:325:in
      `invoke_task'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor.rb:359:in
      `dispatch'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/base.rb:440:in
      `start'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `block in <top (required)>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/errors.rb:174:in
      `with_friendly_errors'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `<top (required)>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `load'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `<top (required)>'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `load'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `kernel_load'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:24:in
      `run'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:304:in
      `exec'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/command.rb:27:in
      `run'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in
      `invoke_command'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor.rb:359:in
      `dispatch'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/base.rb:440:in
      `start'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:11:in
      `start'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:27:in
      `block in <top (required)>'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/friendly_errors.rb:98:in
      `with_friendly_errors'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:19:in
      `<top (required)>'\n    D      /opt/chefdk/embedded/bin/bundle:22:in `load'\n
      \   D      /opt/chefdk/embedded/bin/bundle:22:in `<main>'\n    D      ----End
      Backtrace-----\n    D      -Composite Exception--\n    D      Class: Kitchen::InstanceFailure\n
      \   D      Message: Verify failed on instance <chef-current-install-ubuntu-1404>.
      \ Please see .kitchen/logs/chef-current-install-ubuntu-1404.log for more details\n
      \   D      ----------------------\n    D      ------Backtrace-------\n    D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      ----End Backtrace-----\n    D      ---Nested
      Exception---\n    D      Class: Kitchen::ActionFailed\n    D      Message: SSH
      exited (1) for command: [sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\"; export
      BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser test\n    ']\n    D      ----------------------\n
      \   D      ------Backtrace-------\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      ----End Backtrace-----\n    STDERR:
      >>>>>> ------Exception-------\n    >>>>>> Class: Kitchen::ActionFailed\n    >>>>>>
      Message: 1 actions failed.\n    >>>>>>     Verify failed on instance <chef-current-install-ubuntu-1404>.
      \ Please see .kitchen/logs/chef-current-install-ubuntu-1404.log for more details\n
      \   >>>>>> ----------------------\n    >>>>>> Please see .kitchen/logs/kitchen.log
      for more details\n    >>>>>> Also try running `kitchen diagnose --all` for configuration\n
      \   ---- End output of bundle exec kitchen verify  -c -l debug ----\n    Ran
      bundle exec kitchen verify  -c -l debug returned 20\n\n    Cookbook Trace:\n
      \   ---------------\n    /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in
      `block (3 levels) in <class:Kitchen>'\n\n    Resource Declaration:\n    ---------------------\n
      \   # In /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/cookbooks/acceptance-cookbook/recipes/verify.rb\n\n
      \     1: kitchen \"verify\"\n\n    Compiled Resource:\n    ------------------\n
      \   # Declared in /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/cookbooks/acceptance-cookbook/recipes/verify.rb:1:in
      `from_file'\n\n    kitchen(\"verify\") do\n      action [:run]\n      retries
      0\n      retry_delay 2\n      default_guard_interpreter :default\n      declared_type
      :kitchen\n      cookbook_name \"acceptance-cookbook\"\n      recipe_name \"verify\"\n
      \     chef_product \"chef\"\n      kitchen_dir \"/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/basics\"\n
      \     command \"verify\"\n      kitchen_options \"-c -l debug\"\n    end\n\n
      \   Platform:\n    ---------\n    x86_64-linux\n\nStarting audit phase\n"
    9193: |2

      Running handlers:
      [2016-08-03T02:01:46+00:00] ERROR: Running exception handlers
      Running handlers complete
      [2016-08-03T02:01:46+00:00] ERROR: Exception handlers complete
      Chef Client failed. 0 resources updated in 20 seconds
      [2016-08-03T02:01:46+00:00] ERROR: Failed to post audit report to server. Saving report to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/failed-audit-data.json
      [2016-08-03T02:01:46+00:00] FATAL: Stacktrace dumped to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/cache/chef-stacktrace.out
      [2016-08-03T02:01:46+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
      [2016-08-03T02:01:46+00:00] ERROR: Found 1 errors, they are stored in the backtrace
      [2016-08-03T02:01:47+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
      STDERR:
      ---- End output of chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/dna.json -o acceptance-cookbook::verify --no-color ----
      Ran chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/basics/verify/dna.json -o acceptance-cookbook::verify --no-color returned 1
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:289:in `invalid!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:276:in `error!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/chef_runner.rb:53:in `block in run!'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:237:in `block in with_clean_env'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:447:in `with_env'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:237:in `with_clean_env'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/chef_runner.rb:42:in `run!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:149:in `run_command'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:116:in `block in run_suite'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:114:in `each'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:114:in `run_suite'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:76:in `block (2 levels) in start_worker'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:74:in `loop'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:74:in `block in start_worker'
      CHEF-ACCEPTANCE::[2016-08-03 02:01:47 +0000] --force-destroy specified so attempting to run the destroy recipe
      BASICS::DESTROY::[2016-08-03 02:01:47 +0000] Initialized [/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/logs/basics/destroy.log] logger...
    14414: "DATA-COLLECTOR::VERIFY::[2016-08-03 02:03:35 +0000]\n\n      ================================================================================\n
      \     Error executing action `run` on resource 'ruby_block[copy_kitchen_logs_to_data_path]'\n
      \     ================================================================================\n\n
      \     Mixlib::ShellOut::ShellCommandFailed\n      ------------------------------------\n
      \     Expected process to exit with [0], but received '20'\n      ---- Begin
      output of bundle exec kitchen verify  -c -l debug ----\n      STDOUT: ----->
      Starting Kitchen (v1.10.2)\n      D      Berksfile found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/data-collector/Berksfile,
      loading Berkshelf\n      D      Berkshelf 4.3.5 library loaded\n      ----->
      Setting up <default-ubuntu-1404>...\n             Finished setting up <default-ubuntu-1404>
      (0m0.00s).\n      -----> Verifying <default-ubuntu-1404>...\n             Preparing
      files for transfer\n      D      Creating local sandbox in /tmp/cheftest/default-ubuntu-1404-sandbox-20160803-1436-a607w7\n
      \     D      [SSH] ubuntu@10.194.15.116<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n      ruby=\"/opt/chef/embedded/bin/ruby\"\n      gem=\"/opt/chef/embedded/bin/gem\"\n
      \     version=\"busser\"\n      gem_install_args=\"busser --no-rdoc --no-ri
      --no-format-executable -n /tmp/verifier/bin --no-user-install\"\n      busser=\"sudo
      -E /tmp/verifier/bin/busser\"\n      plugins=\"busser-serverspec\"\n\n      $gem
      list busser -i 2>&1 >/dev/null\n      if test $? -ne 0; then\n        echo \"----->
      Installing Busser ($version)\"\n        $gem install $gem_install_args\n      else\n
      \       echo \"-----> Busser installation detected ($version)\"\n      fi\n\n
      \     if test ! -f \"$BUSSER_ROOT/bin/busser\"; then\n        $busser setup\n
      \     fi\n\n      echo \"       Installing Busser plugins: $plugins\"\n      $busser
      plugin install $plugins\n      ')\n      D      [SSH] opening connection to
      ubuntu@10.194.15.116<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n      -----> Installing Busser (busser)\n
      \            Fetching: thor-0.19.0.gem\rFetching: thor-0.19.0.gem (  3%)\rFetching:
      thor-0.19.0.gem (  6%)\rFetching: thor-0.19.0.gem (  9%)\rFetching: thor-0.19.0.gem
      ( 12%)\rFetching: thor-0.19.0.gem ( 15%)\rFetching: thor-0.19.0.gem ( 18%)\rFetching:
      thor-0.19.0.gem ( 21%)\rFetching: thor-0.19.0.gem ( 24%)\rFetching: thor-0.19.0.gem
      ( 27%)\rFetching: thor-0.19.0.gem ( 30%)\rFetching: thor-0.19.0.gem ( 33%)\rFetching:
      thor-0.19.0.gem ( 35%)\rFetching: thor-0.19.0.gem ( 53%)\rFetching: thor-0.19.0.gem
      ( 71%)\rFetching: thor-0.19.0.gem ( 89%)\rFetching: thor-0.19.0.gem (100%)\rFetching:
      thor-0.19.0.gem (100%)\n             Successfully installed thor-0.19.0\n             Fetching:
      busser-0.7.1.gem\rFetching: busser-0.7.1.gem ( 64%)\rFetching: busser-0.7.1.gem
      (100%)\rFetching: busser-0.7.1.gem (100%)\n             Successfully installed
      busser-0.7.1\n             2 gems installed\n             Installing Busser
      plugins: busser-serverspec\n             Plugin serverspec installed (version
      0.5.9)\n      -----> Running postinstall for serverspec plugin\n      D      [SSH]
      ubuntu@10.194.15.116<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n      BUSS\nDATA-COLLECTOR::VERIFY::[2016-08-03
      02:03:35 +0000] ER_ROOT=\"/tmp/verifier\"; export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\";
      export GEM_HOME\n"
    14507: "             Fetching: serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem
      ( 41%)\rFetching: serverspec-2.36.0.gem ( 83%)\rFetching: serverspec-2.36.0.gem
      (100%)\rFetching: serverspec-2.36.0.gem (100%)\n      -----> serverspec installed
      (version 2.36.0)\n             /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n               from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n               from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n"
    14616: |2
            Cookbook Trace:
            ---------------
            /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in `block (3 levels) in <class:Kitchen>'

            Resource Declaration:
    14770: "           Fetching: serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem
      ( 41%)\rFetching: serverspec-2.36.0.gem ( 83%)\rFetching: serverspec-2.36.0.gem
      (100%)\rFetching: serverspec-2.36.0.gem (100%)\n    -----> serverspec installed
      (version 2.36.0)\n           /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n             from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n             from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n"
    14879: |2
          Cookbook Trace:
          ---------------
          /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in `block (3 levels) in <class:Kitchen>'

          Resource Declaration:
    14917: |2

      Running handlers:
      [2016-08-03T02:03:35+00:00] ERROR: Running exception handlers
      Running handlers complete
      [2016-08-03T02:03:35+00:00] ERROR: Exception handlers complete
      Chef Client failed. 1 resources updated in 16 seconds
      DATA-COLLECTOR::VERIFY::[2016-08-03 02:03:35 +0000] [2016-08-03T02:03:35+00:00] ERROR: Failed to post audit report to server. Saving report to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/failed-audit-data.json
      DATA-COLLECTOR::VERIFY::[2016-08-03 02:03:35 +0000] [2016-08-03T02:03:35+00:00] FATAL: Stacktrace dumped to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/chef-stacktrace.out
      DATA-COLLECTOR::VERIFY::[2016-08-03 02:03:35 +0000] [2016-08-03T02:03:35+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
      DATA-COLLECTOR::VERIFY::[2016-08-03 02:03:35 +0000] [2016-08-03T02:03:35+00:00] ERROR: Found 1 errors, they are stored in the backtrace
      DATA-COLLECTOR::VERIFY::[2016-08-03 02:03:37 +0000] [2016-08-03T02:03:37+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
      CHEF-ACCEPTANCE::[2016-08-03 02:03:37 +0000] Encountered an error running the recipe verify: Expected process to exit with [0], but received '1'
      ---- Begin output of chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/dna.json -o acceptance-cookbook::verify --no-color ----
    15028: "       Fetching: serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem
      ( 41%)\rFetching: serverspec-2.36.0.gem ( 83%)\rFetching: serverspec-2.36.0.gem
      (100%)\rFetching: serverspec-2.36.0.gem (100%)\n-----> serverspec installed
      (version 2.36.0)\n       /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n         from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n         from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n"
    15131: "\n\n      ================================================================================\n
      \     Error executing action `run` on resource 'ruby_block[copy_kitchen_logs_to_data_path]'\n
      \     ================================================================================\n\n
      \     Mixlib::ShellOut::ShellCommandFailed\n      ------------------------------------\n
      \     Expected process to exit with [0], but received '20'\n      ---- Begin
      output of bundle exec kitchen verify  -c -l debug ----\n      STDOUT: ----->
      Starting Kitchen (v1.10.2)\n      D      Berksfile found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/data-collector/Berksfile,
      loading Berkshelf\n      D      Berkshelf 4.3.5 library loaded\n      ----->
      Setting up <default-ubuntu-1404>...\n             Finished setting up <default-ubuntu-1404>
      (0m0.00s).\n      -----> Verifying <default-ubuntu-1404>...\n             Preparing
      files for transfer\n      D      Creating local sandbox in /tmp/cheftest/default-ubuntu-1404-sandbox-20160803-1436-a607w7\n
      \     D      [SSH] ubuntu@10.194.15.116<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n      ruby=\"/opt/chef/embedded/bin/ruby\"\n      gem=\"/opt/chef/embedded/bin/gem\"\n
      \     version=\"busser\"\n      gem_install_args=\"busser --no-rdoc --no-ri
      --no-format-executable -n /tmp/verifier/bin --no-user-install\"\n      busser=\"sudo
      -E /tmp/verifier/bin/busser\"\n      plugins=\"busser-serverspec\"\n\n      $gem
      list busser -i 2>&1 >/dev/null\n      if test $? -ne 0; then\n        echo \"----->
      Installing Busser ($version)\"\n        $gem install $gem_install_args\n      else\n
      \       echo \"-----> Busser installation detected ($version)\"\n      fi\n\n
      \     if test ! -f \"$BUSSER_ROOT/bin/busser\"; then\n        $busser setup\n
      \     fi\n\n      echo \"       Installing Busser plugins: $plugins\"\n      $busser
      plugin install $plugins\n      ')\n      D      [SSH] opening connection to
      ubuntu@10.194.15.116<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n      -----> Installing Busser (busser)\n
      \            Fetching: thor-0.19.0.gem\rFetching: thor-0.19.0.gem (  3%)\rFetching:
      thor-0.19.0.gem (  6%)\rFetching: thor-0.19.0.gem (  9%)\rFetching: thor-0.19.0.gem
      ( 12%)\rFetching: thor-0.19.0.gem ( 15%)\rFetching: thor-0.19.0.gem ( 18%)\rFetching:
      thor-0.19.0.gem ( 21%)\rFetching: thor-0.19.0.gem ( 24%)\rFetching: thor-0.19.0.gem
      ( 27%)\rFetching: thor-0.19.0.gem ( 30%)\rFetching: thor-0.19.0.gem ( 33%)\rFetching:
      thor-0.19.0.gem ( 35%)\rFetching: thor-0.19.0.gem ( 53%)\rFetching: thor-0.19.0.gem
      ( 71%)\rFetching: thor-0.19.0.gem ( 89%)\rFetching: thor-0.19.0.gem (100%)\rFetching:
      thor-0.19.0.gem (100%)\n             Successfully installed thor-0.19.0\n             Fetching:
      busser-0.7.1.gem\rFetching: busser-0.7.1.gem ( 64%)\rFetching: busser-0.7.1.gem
      (100%)\rFetching: busser-0.7.1.gem (100%)\n             Successfully installed
      busser-0.7.1\n             2 gems installed\n             Installing Busser
      plugins: busser-serverspec\n             Plugin serverspec installed (version
      0.5.9)\n      -----> Running postinstall for serverspec plugin\n      D      [SSH]
      ubuntu@10.194.15.116<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser suite cleanup\n      ')\n
      \            Suite path directory /tmp/verifier/suites does not exist, skipping.\n
      \            Transferring files to <default-ubuntu-1404>\n      D      TIMING:
      scp async upload (Kitchen::Transport::Ssh)\n      D      TIMING: scp async upload
      (Kitchen::Transport::Ssh) took (0m0.05s)\n      D      Transfer complete\n      D
      \     [SSH] ubuntu@10.194.15.116<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser test\n      ')\n
      \     -----> Running serverspec test suite\n      -----> Installing Serverspec..\n
      \            Fetching: rspec-support-3.5.0.gem\rFetching: rspec-support-3.5.0.gem
      (  7%)\rFetching: rspec-support-3.5.0.gem ( 15%)\rFetching: rspec-support-3.5.0.gem
      ( 23%)\rFetching: rspec-support-3.5.0.gem ( 32%)\rFetching: rspec-support-3.5.0.gem
      ( 40%)\rFetching: rspec-support-3.5.0.gem ( 48%)\rFetching: rspec-support-3.5.0.gem
      ( 56%)\rFetching: rspec-support-3.5.0.gem ( 64%)\rFetching: rspec-support-3.5.0.gem
      ( 72%)\rFetching: rspec-support-3.5.0.gem ( 81%)\rFetching: rspec-support-3.5.0.gem
      ( 89%)\rFetching: rspec-support-3.5.0.gem ( 97%)\rFetching: rspec-support-3.5.0.gem
      (100%)\rFetching: rspec-support-3.5.0.gem (100%)\n             Fetching: rspec-core-3.5.2.gem\rFetching:
      rspec-core-3.5.2.gem (  2%)\rFetching: rspec-core-3.5.2.gem (  4%)\rFetching:
      rspec-core-3.5.2.gem (  5%)\rFetching: rspec-core-3.5.2.gem (  7%)\rFetching:
      rspec-core-3.5.2.gem (  9%)\rFetching: rspec-core-3.5.2.gem ( 11%)\rFetching:
      rspec-core-3.5.2.gem ( 13%)\rFetching: rspec-core-3.5.2.gem ( 14%)\rFetching:
      rspec-core-3.5.2.gem ( 16%)\rFetching: rspec-core-3.5.2.gem ( 18%)\rFetching:
      rspec-core-3.5.2.gem ( 20%)\rFetching: rspec-core-3.5.2.gem ( 22%)\rFetching:
      rspec-core-3.5.2.gem ( 32%)\rFetching: rspec-core-3.5.2.gem ( 43%)\rFetching:
      rspec-core-3.5.2.gem ( 54%)\rFetching: rspec-core-3.5.2.gem ( 65%)\rFetching:
      rspec-core-3.5.2.gem ( 76%)\rFetching: rspec-core-3.5.2.gem ( 87%)\rFetching:
      rspec-core-3.5.2.gem ( 97%)\rFetching: rspec-core-3.5.2.gem (100%)\rFetching:
      rspec-core-3.5.2.gem (100%)\n             Fetching: diff-lcs-1.2.5.gem\rFetching:
      diff-lcs-1.2.5.gem ( 32%)\rFetching: diff-lcs-1.2.5.gem ( 66%)\rFetching: diff-lcs-1.2.5.gem
      ( 99%)\rFetching: diff-lcs-1.2.5.gem (100%)\rFetching: diff-lcs-1.2.5.gem (100%)\n
      \            Fetching: rspec-expectations-3.5.0.gem\rFetching: rspec-expectations-3.5.0.gem
      ( 21%)\rFetching: rspec-expectations-3.5.0.gem ( 42%)\rFetching: rspec-expectations-3.5.0.gem
      ( 63%)\rFetching: rspec-expectations-3.5.0.gem ( 84%)\rFetching: rspec-expectations-3.5.0.gem
      (100%)\rFetching: rspec-expectations-3.5.0.gem (100%)\n             Fetching:
      rspec-mocks-3.5.0.gem\rFetching: rspec-mocks-3.5.0.gem ( 21%)\rFetching: rspec-mocks-3.5.0.gem
      ( 42%)\rFetching: rspec-mocks-3.5.0.gem ( 64%)\rFetching: rspec-mocks-3.5.0.gem
      ( 85%)\rFetching: rspec-mocks-3.5.0.gem (100%)\rFetching: rspec-mocks-3.5.0.gem
      (100%)\n             Fetching: rspec-3.5.0.gem\rFetching: rspec-3.5.0.gem (100%)\rFetching:
      rspec-3.5.0.gem (100%)\n             Fetching: rspec-its-1.2.0.gem\rFetching:
      rspec-its-1.2.0.gem (100%)\rFetching: rspec-its-1.2.0.gem (100%)\n             Fetching:
      multi_json-1.12.1.gem\rFetching: multi_json-1.12.1.gem ( 61%)\rFetching: multi_json-1.12.1.gem
      (100%)\rFetching: multi_json-1.12.1.gem (100%)\n             Fetching: net-ssh-3.2.0.gem\rFetching:
      net-ssh-3.2.0.gem (  9%)\rFetching: net-ssh-3.2.0.gem ( 18%)\rFetching: net-ssh-3.2.0.gem
      ( 27%)\rFetching: net-ssh-3.2.0.gem ( 35%)\rFetching: net-ssh-3.2.0.gem ( 44%)\rFetching:
      net-ssh-3.2.0.gem ( 53%)\rFetching: net-ssh-3.2.0.gem ( 62%)\rFetching: net-ssh-3.2.0.gem
      ( 71%)\rFetching: net-ssh-3.2.0.gem ( 80%)\rFetching: net-ssh-3.2.0.gem ( 89%)\rFetching:
      net-ssh-3.2.0.gem ( 97%)\rFetching: net-ssh-3.2.0.gem (100%)\rFetching: net-ssh-3.2.0.gem
      (100%)\n             Fetching: net-scp-1.2.1.gem\rFetching: net-scp-1.2.1.gem
      ( 48%)\rFetching: net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem (100%)\rFetching:
      net-scp-1.2.1.gem (100%)\n             Fetching: net-telnet-0.1.1.gem\rFetching:
      net-telnet-0.1.1.gem ( 93%)\rFetching: net-telnet-0.1.1.gem (100%)\rFetching:
      net-telnet-0.1.1.gem (100%)\n             Fetching: sfl-2.2.gem\rFetching: sfl-2.2.gem
      (100%)\rFetching: sfl-2.2.gem (100%)\n             Fetching: specinfra-2.60.2.gem\rFetching:
      specinfra-2.60.2.gem ( 20%)\rFetching: specinfra-2.60.2.gem ( 40%)\rFetching:
      specinfra-2.60.2.gem ( 61%)\rFetching: specinfra-2.60.2.gem ( 81%)\rFetching:
      specinfra-2.60.2.gem (100%)\rFetching: specinfra-2.60.2.gem (100%)\n             Fetching:
      serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem ( 41%)\rFetching: serverspec-2.36.0.gem
      ( 83%)\rFetching: serverspec-2.36.0.gem (100%)\rFetching: serverspec-2.36.0.gem
      (100%)\n      -----> serverspec installed (version 2.36.0)\n             /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n               from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n               from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n             !!!!!! Ruby Script [/tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      /tmp/verifier/suites/serverspec] exit code was 1\n      D      Cleaning up local
      sandbox in /tmp/cheftest/default-ubuntu-1404-sandbox-20160803-1436-a607w7\n
      \     D      ------Exception-------\n      D      Class: Kitchen::ActionFailed\n
      \     D      Message: 1 actions failed.\n      >>>>>>     Verify failed on instance
      <default-ubuntu-1404>.  Please see .kitchen/logs/default-ubuntu-1404.log for
      more details\n      D      ----------------------\n      D      ------Backtrace-------\n
      \     D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:187:in
      `report_errors'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:178:in
      `run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:39:in
      `block in call'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:37:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:56:in
      `perform'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:184:in
      `block (2 levels) in <class:CLI>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/command.rb:27:in
      `run'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/invocation.rb:126:in
      `invoke_command'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:325:in
      `invoke_task'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor.rb:359:in
      `dispatch'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/base.rb:440:in
      `start'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `block in <top (required)>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/errors.rb:174:in
      `with_friendly_errors'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `<top (required)>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `load'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `<top (required)>'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `load'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `kernel_load'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:24:in
      `run'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:304:in
      `exec'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/command.rb:27:in
      `run'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in
      `invoke_command'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor.rb:359:in
      `dispatch'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/base.rb:440:in
      `start'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:11:in
      `start'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:27:in
      `block in <top (required)>'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/friendly_errors.rb:98:in
      `with_friendly_errors'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:19:in
      `<top (required)>'\n      D      /opt/chefdk/embedded/bin/bundle:22:in `load'\n
      \     D      /opt/chefdk/embedded/bin/bundle:22:in `<main>'\n      D      ----End
      Backtrace-----\n      D      -Composite Exception--\n      D      Class: Kitchen::InstanceFailure\n
      \     D      Message: Verify failed on instance <default-ubuntu-1404>.  Please
      see .kitchen/logs/default-ubuntu-1404.log for more details\n      D      ----------------------\n
      \     D      ------Backtrace-------\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      ----End Backtrace-----\n      D
      \     ---Nested Exception---\n      D      Class: Kitchen::ActionFailed\n      D
      \     Message: SSH exited (1) for command: [sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser test\n      ']\n
      \     D      ----------------------\n      D      ------Backtrace-------\n      D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      ----End Backtrace-----\n      STDERR:
      >>>>>> ------Exception-------\n      >>>>>> Class: Kitchen::ActionFailed\n      >>>>>>
      Message: 1 actions failed.\n      >>>>>>     Verify failed on instance <default-ubuntu-1404>.
      \ Please see .kitchen/logs/default-ubuntu-1404.log for more details\n      >>>>>>
      ----------------------\n      >>>>>> Please see .kitchen/logs/kitchen.log for
      more details\n      >>>>>> Also try running `kitchen diagnose --all` for configuration\n
      \     ---- End output of bundle exec kitchen verify  -c -l debug ----\n      Ran
      bundle exec kitchen verify  -c -l debug returned 20\n\n      Cookbook Trace:\n
      \     ---------------\n      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in
      `block (3 levels) in <class:Kitchen>'\n\n      Resource Declaration:\n      ---------------------\n
      \     # In /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb\n\n
      \      39:       ruby_block \"copy_kitchen_logs_to_data_path\" do\n       40:
      \        block do\n       41:           cmd_env = {\n       42:             \"KITCHEN_DRIVER\"
      => driver,\n       43:             \"KITCHEN_INSTANCES\" => instances,\n       44:
      \            \"KITCHEN_LOCAL_YAML\" => ::File.expand_path(\"../../.kitchen.#{driver}.yml\",
      __FILE__),\n       45:             \"KITCHEN_CHEF_PRODUCT\" => chef_product,\n
      \      46:             \"KITCHEN_CHEF_CHANNEL\" => chef_channel,\n       47:
      \            \"KITCHEN_CHEF_VERSION\" => chef_version,\n       48:             \"ARTIFACTORY_USERNAME\"
      => artifactory_username,\n       49:             \"ARTIFACTORY_PASSWORD\" =>
      artifactory_password\n       50:           }.merge(new_resource.env)\n       51:
      \          suite = kitchen_dir.split(\"/\").last\n       52:           kitchen_log_path
      = ENV[\"WORKSPACE\"] ? \"#{ENV[\"WORKSPACE\"]}/chef-acceptance-data/logs\" :
      \"#{kitchen_dir}/../.acceptance_data/logs/\"\n       53:\n       54:           begin\n
      \      55:             shell_out!(\"bundle exec kitchen #{command}#{instances
      ? \" #{instances}\" : \"\"}#{kitchen_options ? \" #{kitchen_options}\" : \"\"}\",\n
      \      56:                        env: cmd_env,\n       57:                        timeout:
      60 * 30,\n       58:                        live_stream: STDOUT,\n       59:
      \                       cwd: kitchen_dir)\n       60:           ensure\n       61:
      \            FileUtils.mkdir_p(\"#{kitchen_log_path}/#{suite}/#{command}\")\n
      \      62:             FileUtils.cp_r(\"#{kitchen_dir}/.kitchen/logs/.\", \"#{kitchen_log_path}/#{suite}/#{command}\")\n
      \      63:           end\n       64:         end\n       65:       end\n\n      Compiled
      Resource:\n      ------------------\n      # Declared in /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:39:in
      `block in <class:Kitchen>'\n\n      ruby_block(\"copy_kitchen_logs_to_data_path\")
      do\n        action [:run]\n        retries 0\n        retry_delay 2\n        default_guard_interpreter
      :default\n        block_name \"copy_kitchen_logs_to_data_path\"\n        declared_type
      :ruby_block\n        cookbook_name \"acceptance-cookbook\"\n        block #<Proc:0x000000041e03f8@/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:40>\n
      \     end\n\n      Platform:\n      ---------\n      x86_64-linux\n\n\n    ================================================================================\n
      \   Error executing action `run` on resource 'kitchen[verify]'\n    ================================================================================\n\n
      \   Mixlib::ShellOut::ShellCommandFailed\n    ------------------------------------\n
      \   ruby_block[copy_kitchen_logs_to_data_path] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb
      line 39) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process
      to exit with [0], but received '20'\n    ---- Begin output of bundle exec kitchen
      verify  -c -l debug ----\n    STDOUT: -----> Starting Kitchen (v1.10.2)\n    D
      \     Berksfile found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/data-collector/Berksfile,
      loading Berkshelf\n    D      Berkshelf 4.3.5 library loaded\n    -----> Setting
      up <default-ubuntu-1404>...\n           Finished setting up <default-ubuntu-1404>
      (0m0.00s).\n    -----> Verifying <default-ubuntu-1404>...\n           Preparing
      files for transfer\n    D      Creating local sandbox in /tmp/cheftest/default-ubuntu-1404-sandbox-20160803-1436-a607w7\n
      \   D      [SSH] ubuntu@10.194.15.116<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n
      \   ruby=\"/opt/chef/embedded/bin/ruby\"\n    gem=\"/opt/chef/embedded/bin/gem\"\n
      \   version=\"busser\"\n    gem_install_args=\"busser --no-rdoc --no-ri --no-format-executable
      -n /tmp/verifier/bin --no-user-install\"\n    busser=\"sudo -E /tmp/verifier/bin/busser\"\n
      \   plugins=\"busser-serverspec\"\n\n    $gem list busser -i 2>&1 >/dev/null\n
      \   if test $? -ne 0; then\n      echo \"-----> Installing Busser ($version)\"\n
      \     $gem install $gem_install_args\n    else\n      echo \"-----> Busser installation
      detected ($version)\"\n    fi\n\n    if test ! -f \"$BUSSER_ROOT/bin/busser\";
      then\n      $busser setup\n    fi\n\n    echo \"       Installing Busser plugins:
      $plugins\"\n    $busser plugin install $plugins\n    ')\n    D      [SSH] opening
      connection to ubuntu@10.194.15.116<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n    -----> Installing Busser (busser)\n           Fetching:
      thor-0.19.0.gem\rFetching: thor-0.19.0.gem (  3%)\rFetching: thor-0.19.0.gem
      (  6%)\rFetching: thor-0.19.0.gem (  9%)\rFetching: thor-0.19.0.gem ( 12%)\rFetching:
      thor-0.19.0.gem ( 15%)\rFetching: thor-0.19.0.gem ( 18%)\rFetching: thor-0.19.0.gem
      ( 21%)\rFetching: thor-0.19.0.gem ( 24%)\rFetching: thor-0.19.0.gem ( 27%)\rFetching:
      thor-0.19.0.gem ( 30%)\rFetching: thor-0.19.0.gem ( 33%)\rFetching: thor-0.19.0.gem
      ( 35%)\rFetching: thor-0.19.0.gem ( 53%)\rFetching: thor-0.19.0.gem ( 71%)\rFetching:
      thor-0.19.0.gem ( 89%)\rFetching: thor-0.19.0.gem (100%)\rFetching: thor-0.19.0.gem
      (100%)\n           Successfully installed thor-0.19.0\n           Fetching:
      busser-0.7.1.gem\rFetching: busser-0.7.1.gem ( 64%)\rFetching: busser-0.7.1.gem
      (100%)\rFetching: busser-0.7.1.gem (100%)\n           Successfully installed
      busser-0.7.1\n           2 gems installed\n           Installing Busser plugins:
      busser-serverspec\n           Plugin serverspec installed (version 0.5.9)\n
      \   -----> Running postinstall for serverspec plugin\n    D      [SSH] ubuntu@10.194.15.116<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser suite cleanup\n    ')\n           Suite
      path directory /tmp/verifier/suites does not exist, skipping.\n           Transferring
      files to <default-ubuntu-1404>\n    D      TIMING: scp async upload (Kitchen::Transport::Ssh)\n
      \   D      TIMING: scp async upload (Kitchen::Transport::Ssh) took (0m0.05s)\n
      \   D      Transfer complete\n    D      [SSH] ubuntu@10.194.15.116<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser test\n    ')\n    -----> Running serverspec
      test suite\n    -----> Installing Serverspec..\n           Fetching: rspec-support-3.5.0.gem\rFetching:
      rspec-support-3.5.0.gem (  7%)\rFetching: rspec-support-3.5.0.gem ( 15%)\rFetching:
      rspec-support-3.5.0.gem ( 23%)\rFetching: rspec-support-3.5.0.gem ( 32%)\rFetching:
      rspec-support-3.5.0.gem ( 40%)\rFetching: rspec-support-3.5.0.gem ( 48%)\rFetching:
      rspec-support-3.5.0.gem ( 56%)\rFetching: rspec-support-3.5.0.gem ( 64%)\rFetching:
      rspec-support-3.5.0.gem ( 72%)\rFetching: rspec-support-3.5.0.gem ( 81%)\rFetching:
      rspec-support-3.5.0.gem ( 89%)\rFetching: rspec-support-3.5.0.gem ( 97%)\rFetching:
      rspec-support-3.5.0.gem (100%)\rFetching: rspec-support-3.5.0.gem (100%)\n           Fetching:
      rspec-core-3.5.2.gem\rFetching: rspec-core-3.5.2.gem (  2%)\rFetching: rspec-core-3.5.2.gem
      (  4%)\rFetching: rspec-core-3.5.2.gem (  5%)\rFetching: rspec-core-3.5.2.gem
      (  7%)\rFetching: rspec-core-3.5.2.gem (  9%)\rFetching: rspec-core-3.5.2.gem
      ( 11%)\rFetching: rspec-core-3.5.2.gem ( 13%)\rFetching: rspec-core-3.5.2.gem
      ( 14%)\rFetching: rspec-core-3.5.2.gem ( 16%)\rFetching: rspec-core-3.5.2.gem
      ( 18%)\rFetching: rspec-core-3.5.2.gem ( 20%)\rFetching: rspec-core-3.5.2.gem
      ( 22%)\rFetching: rspec-core-3.5.2.gem ( 32%)\rFetching: rspec-core-3.5.2.gem
      ( 43%)\rFetching: rspec-core-3.5.2.gem ( 54%)\rFetching: rspec-core-3.5.2.gem
      ( 65%)\rFetching: rspec-core-3.5.2.gem ( 76%)\rFetching: rspec-core-3.5.2.gem
      ( 87%)\rFetching: rspec-core-3.5.2.gem ( 97%)\rFetching: rspec-core-3.5.2.gem
      (100%)\rFetching: rspec-core-3.5.2.gem (100%)\n           Fetching: diff-lcs-1.2.5.gem\rFetching:
      diff-lcs-1.2.5.gem ( 32%)\rFetching: diff-lcs-1.2.5.gem ( 66%)\rFetching: diff-lcs-1.2.5.gem
      ( 99%)\rFetching: diff-lcs-1.2.5.gem (100%)\rFetching: diff-lcs-1.2.5.gem (100%)\n
      \          Fetching: rspec-expectations-3.5.0.gem\rFetching: rspec-expectations-3.5.0.gem
      ( 21%)\rFetching: rspec-expectations-3.5.0.gem ( 42%)\rFetching: rspec-expectations-3.5.0.gem
      ( 63%)\rFetching: rspec-expectations-3.5.0.gem ( 84%)\rFetching: rspec-expectations-3.5.0.gem
      (100%)\rFetching: rspec-expectations-3.5.0.gem (100%)\n           Fetching:
      rspec-mocks-3.5.0.gem\rFetching: rspec-mocks-3.5.0.gem ( 21%)\rFetching: rspec-mocks-3.5.0.gem
      ( 42%)\rFetching: rspec-mocks-3.5.0.gem ( 64%)\rFetching: rspec-mocks-3.5.0.gem
      ( 85%)\rFetching: rspec-mocks-3.5.0.gem (100%)\rFetching: rspec-mocks-3.5.0.gem
      (100%)\n           Fetching: rspec-3.5.0.gem\rFetching: rspec-3.5.0.gem (100%)\rFetching:
      rspec-3.5.0.gem (100%)\n           Fetching: rspec-its-1.2.0.gem\rFetching:
      rspec-its-1.2.0.gem (100%)\rFetching: rspec-its-1.2.0.gem (100%)\n           Fetching:
      multi_json-1.12.1.gem\rFetching: multi_json-1.12.1.gem ( 61%)\rFetching: multi_json-1.12.1.gem
      (100%)\rFetching: multi_json-1.12.1.gem (100%)\n           Fetching: net-ssh-3.2.0.gem\rFetching:
      net-ssh-3.2.0.gem (  9%)\rFetching: net-ssh-3.2.0.gem ( 18%)\rFetching: net-ssh-3.2.0.gem
      ( 27%)\rFetching: net-ssh-3.2.0.gem ( 35%)\rFetching: net-ssh-3.2.0.gem ( 44%)\rFetching:
      net-ssh-3.2.0.gem ( 53%)\rFetching: net-ssh-3.2.0.gem ( 62%)\rFetching: net-ssh-3.2.0.gem
      ( 71%)\rFetching: net-ssh-3.2.0.gem ( 80%)\rFetching: net-ssh-3.2.0.gem ( 89%)\rFetching:
      net-ssh-3.2.0.gem ( 97%)\rFetching: net-ssh-3.2.0.gem (100%)\rFetching: net-ssh-3.2.0.gem
      (100%)\n           Fetching: net-scp-1.2.1.gem\rFetching: net-scp-1.2.1.gem
      ( 48%)\rFetching: net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem (100%)\rFetching:
      net-scp-1.2.1.gem (100%)\n           Fetching: net-telnet-0.1.1.gem\rFetching:
      net-telnet-0.1.1.gem ( 93%)\rFetching: net-telnet-0.1.1.gem (100%)\rFetching:
      net-telnet-0.1.1.gem (100%)\n           Fetching: sfl-2.2.gem\rFetching: sfl-2.2.gem
      (100%)\rFetching: sfl-2.2.gem (100%)\n           Fetching: specinfra-2.60.2.gem\rFetching:
      specinfra-2.60.2.gem ( 20%)\rFetching: specinfra-2.60.2.gem ( 40%)\rFetching:
      specinfra-2.60.2.gem ( 61%)\rFetching: specinfra-2.60.2.gem ( 81%)\rFetching:
      specinfra-2.60.2.gem (100%)\rFetching: specinfra-2.60.2.gem (100%)\n           Fetching:
      serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem ( 41%)\rFetching: serverspec-2.36.0.gem
      ( 83%)\rFetching: serverspec-2.36.0.gem (100%)\rFetching: serverspec-2.36.0.gem
      (100%)\n    -----> serverspec installed (version 2.36.0)\n           /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n             from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n             from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n           !!!!!! Ruby Script [/tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      /tmp/verifier/suites/serverspec] exit code was 1\n    D      Cleaning up local
      sandbox in /tmp/cheftest/default-ubuntu-1404-sandbox-20160803-1436-a607w7\n
      \   D      ------Exception-------\n    D      Class: Kitchen::ActionFailed\n
      \   D      Message: 1 actions failed.\n    >>>>>>     Verify failed on instance
      <default-ubuntu-1404>.  Please see .kitchen/logs/default-ubuntu-1404.log for
      more details\n    D      ----------------------\n    D      ------Backtrace-------\n
      \   D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:187:in
      `report_errors'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:178:in
      `run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:39:in
      `block in call'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:37:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:56:in
      `perform'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:184:in
      `block (2 levels) in <class:CLI>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/command.rb:27:in
      `run'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/invocation.rb:126:in
      `invoke_command'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:325:in
      `invoke_task'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor.rb:359:in
      `dispatch'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/base.rb:440:in
      `start'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `block in <top (required)>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/errors.rb:174:in
      `with_friendly_errors'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `<top (required)>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `load'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `<top (required)>'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `load'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `kernel_load'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:24:in
      `run'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:304:in
      `exec'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/command.rb:27:in
      `run'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in
      `invoke_command'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor.rb:359:in
      `dispatch'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/base.rb:440:in
      `start'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:11:in
      `start'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:27:in
      `block in <top (required)>'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/friendly_errors.rb:98:in
      `with_friendly_errors'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:19:in
      `<top (required)>'\n    D      /opt/chefdk/embedded/bin/bundle:22:in `load'\n
      \   D      /opt/chefdk/embedded/bin/bundle:22:in `<main>'\n    D      ----End
      Backtrace-----\n    D      -Composite Exception--\n    D      Class: Kitchen::InstanceFailure\n
      \   D      Message: Verify failed on instance <default-ubuntu-1404>.  Please
      see .kitchen/logs/default-ubuntu-1404.log for more details\n    D      ----------------------\n
      \   D      ------Backtrace-------\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      ----End Backtrace-----\n    D      ---Nested
      Exception---\n    D      Class: Kitchen::ActionFailed\n    D      Message: SSH
      exited (1) for command: [sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\"; export
      BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser test\n    ']\n    D      ----------------------\n
      \   D      ------Backtrace-------\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      ----End Backtrace-----\n    STDERR:
      >>>>>> ------Exception-------\n    >>>>>> Class: Kitchen::ActionFailed\n    >>>>>>
      Message: 1 actions failed.\n    >>>>>>     Verify failed on instance <default-ubuntu-1404>.
      \ Please see .kitchen/logs/default-ubuntu-1404.log for more details\n    >>>>>>
      ----------------------\n    >>>>>> Please see .kitchen/logs/kitchen.log for
      more details\n    >>>>>> Also try running `kitchen diagnose --all` for configuration\n
      \   ---- End output of bundle exec kitchen verify  -c -l debug ----\n    Ran
      bundle exec kitchen verify  -c -l debug returned 20\n\n    Cookbook Trace:\n
      \   ---------------\n    /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in
      `block (3 levels) in <class:Kitchen>'\n\n    Resource Declaration:\n    ---------------------\n
      \   # In /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/cookbooks/acceptance-cookbook/recipes/verify.rb\n\n
      \     2: kitchen \"verify\"\n\n    Compiled Resource:\n    ------------------\n
      \   # Declared in /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/cookbooks/acceptance-cookbook/recipes/verify.rb:2:in
      `from_file'\n\n    kitchen(\"verify\") do\n      action [:run]\n      retries
      0\n      retry_delay 2\n      default_guard_interpreter :default\n      declared_type
      :kitchen\n      cookbook_name \"acceptance-cookbook\"\n      recipe_name \"verify\"\n
      \     chef_product \"chef\"\n      kitchen_dir \"/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/data-collector\"\n
      \     command \"verify\"\n      kitchen_options \"-c -l debug\"\n    end\n\n
      \   Platform:\n    ---------\n    x86_64-linux\n\nStarting audit phase\n"
    15616: |2

      Running handlers:
      [2016-08-03T02:03:35+00:00] ERROR: Running exception handlers
      Running handlers complete
      [2016-08-03T02:03:35+00:00] ERROR: Exception handlers complete
      Chef Client failed. 1 resources updated in 16 seconds
      [2016-08-03T02:03:35+00:00] ERROR: Failed to post audit report to server. Saving report to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/failed-audit-data.json
      [2016-08-03T02:03:35+00:00] FATAL: Stacktrace dumped to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/cache/chef-stacktrace.out
      [2016-08-03T02:03:35+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
      [2016-08-03T02:03:35+00:00] ERROR: Found 1 errors, they are stored in the backtrace
      [2016-08-03T02:03:37+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
      STDERR:
      ---- End output of chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/dna.json -o acceptance-cookbook::verify --no-color ----
      Ran chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/data-collector/verify/dna.json -o acceptance-cookbook::verify --no-color returned 1
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:289:in `invalid!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:276:in `error!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/chef_runner.rb:53:in `block in run!'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:237:in `block in with_clean_env'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:447:in `with_env'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:237:in `with_clean_env'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/chef_runner.rb:42:in `run!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:149:in `run_command'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:116:in `block in run_suite'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:114:in `each'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:114:in `run_suite'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:76:in `block (2 levels) in start_worker'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:74:in `loop'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:74:in `block in start_worker'
      CHEF-ACCEPTANCE::[2016-08-03 02:03:37 +0000] --force-destroy specified so attempting to run the destroy recipe
      DATA-COLLECTOR::DESTROY::[2016-08-03 02:03:37 +0000] Initialized [/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/logs/data-collector/destroy.log] logger...
    16471: |
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]        Running handlers:
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]        [2016-08-03T02:04:45+00:00] ERROR: Running exception handlers
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]        Running handlers complete
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]        [2016-08-03T02:04:45+00:00] ERROR: Exception handlers complete
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]        Chef Client failed. 0 resources updated in 31 seconds
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]        [2016-08-03T02:04:45+00:00] FATAL: Stacktrace dumped to C:/Users/ADMINI~1/AppData/Local/Temp/kitchen/cache/chef-stacktrace.out
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]        [2016-08-03T02:04:45+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]        [2016-08-03T02:04:45+00:00] FATAL: Chef::Exceptions::RunFailedWrappingError: Found 1 errors, they are stored in the backtrace
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000] D      [WinRM] cleaning up command_id: F9897435-4EBF-4895-8F7B-19891DB5CEC7 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000] D      Cleaning up local sandbox in /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu
    16583: |
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]

              ================================================================================
              Error executing action `run` on resource 'ruby_block[copy_kitchen_logs_to_data_path]'
              ================================================================================

              Mixlib::ShellOut::ShellCommandFailed
              ------------------------------------
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000] Expected process to exit with [0], but received '20'
    19666: |2

                     Running handlers:
                     [2016-08-03T02:04:45+00:00] ERROR: Running exception handlers
                     Running handlers complete
                     [2016-08-03T02:04:45+00:00] ERROR: Exception handlers complete
                     Chef Client failed. 0 resources updated in 31 seconds
                     [2016-08-03T02:04:45+00:00] FATAL: Stacktrace dumped to C:/Users/ADMINI~1/AppData/Local/Temp/kitchen/cache/chef-stacktrace.out
                     [2016-08-03T02:04:45+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
                     [2016-08-03T02:04:45+00:00] FATAL: Chef::Exceptions::RunFailedWrappingError: Found 1 errors, they are stored in the backtrace
              D      [WinRM] cleaning up command_id: F9897435-4EBF-4895-8F7B-19891DB5CEC7 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520
              D      Cleaning up local sandbox in /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu
    19779: |2
              Cookbook Trace:
              ---------------
              /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in `block (3 levels) in <class:Kitchen>'

              Resource Declaration:
    19834: |2


            ================================================================================
            Error executing action `run` on resource 'cookbook_kitchen[converge git]'
            ================================================================================

            Mixlib::ShellOut::ShellCommandFailed
            ------------------------------------
            ruby_block[copy_kitchen_logs_to_data_path] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb line 39) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '20'
            ---- Begin output of bundle exec kitchen converge  -c -l debug ----
            STDOUT: -----> Starting Kitchen (v1.10.2)
            D      Berksfile found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile, loading Berkshelf
            D      Berkshelf 4.3.5 library loaded
            D      Berksfile found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile, loading Berkshelf
            D      Berkshelf 4.3.5 previously loaded
            D      winrm requested, loading winrm gem (["~> 2.0"])
            D      winrm is loaded.
            D      winrm-fs requested, loading winrm-fs gem (["~> 1.0"])
            D      winrm-fs is loaded.
            -----> Creating <git-default-ubuntu-1404>...
                   If you are not using an account that qualifies under the AWS
            free-tier, you may be charged to run these suites. The charge
            should be minimal, but neither Test Kitchen nor its maintainers
            are responsible for your incurred costs.

            -----> Creating <git-default-windows-windows-2012r2>...
            D      platform name windows-2012r2 appears to be a standard platform. Searching for windows 2012r2 ...
            D      Searching for images matching {:name=>"Windows_Server-2012-R2*-English-*-Base-*", :"owner-alias"=>"amazon", :architecture=>"x86_64", :"virtualization-type"=>"hvm", :"block-device-mapping.volume-type"=>"gp2", :"image-type"=>"machine"} ...
            D      platform name ubuntu-14.04 appears to be a standard platform. Searching for ubuntu 14.04 ...
            D      Searching for images matching {:name=>"ubuntu/images/*/ubuntu-*-14.04-*-server-*", :"owner-id"=>"099720109477", :architecture=>"x86_64", :"virtualization-type"=>"hvm", :"block-device-mapping.volume-type"=>"gp2", :"image-type"=>"machine"} ...
            D      Search returned 4 images:
            D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.26: Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm, Storage: ebs gp2, Created: 2016-07-27T08:44:14.000Z
            D
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:46 +0000]      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.13: Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm, Storage: ebs gp2, Created: 2016-07-14T09:59:33.000Z
            D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.06.15: Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm, Storage: ebs gp2, Created: 2016-06-16T16:58:39.000Z
    22915: |2

                   Running handlers:
                   [2016-08-03T02:04:45+00:00] ERROR: Running exception handlers
                   Running handlers complete
                   [2016-08-03T02:04:45+00:00] ERROR: Exception handlers complete
                   Chef Client failed. 0 resources updated in 31 seconds
                   [2016-08-03T02:04:45+00:00] FATAL: Stacktrace dumped to C:/Users/ADMINI~1/AppData/Local/Temp/kitchen/cache/chef-stacktrace.out
                   [2016-08-03T02:04:45+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
                   [2016-08-03T02:04:45+00:00] FATAL: Chef::Exceptions::RunFailedWrappingError: Found 1 errors, they are stored in the backtrace
            D      [WinRM] cleaning up command_id: F9897435-4EBF-4895-8F7B-19891DB5CEC7 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520
            D      Cleaning up local sandbox in /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu
    23028: |2
            Cookbook Trace:
            ---------------
            /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in `block (3 levels) in <class:Kitchen>'

            Resource Declaration:
    23067: |2


          ================================================================================
          Error executing action `run` on resource 'top_cookbooks[converge]'
          ================================================================================

          Mixlib::ShellOut::ShellCommandFailed
          ------------------------------------
          cookbook_kitchen[converge git] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/acceptance-cookbook/libraries/top_cookbooks.rb line 12) had an error: Mixlib::ShellOut::ShellCommandFailed: ruby_block[copy_kitchen_logs_to_data_path] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb line 39) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '20'
          ---- Begin output of bundle exec kitchen converge  -c -l debug ----
          STDOUT: -----> Starting Kitchen (v1.10.2)
          D      Berksfile found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile,
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000]  loading Berkshelf
          D      Berkshelf 4.3.5 library loaded
    26147: |2

                 Running handlers:
                 [2016-08-03T02:04:45+00:00] ERROR: Running exception handlers
                 Running handlers complete
                 [2016-08-03T02:04:45+00:00] ERROR: Exception handlers complete
                 Chef Client failed. 0 resources updated in 31 seconds
                 [2016-08-03T02:04:45+00:00] FATAL: Stacktrace dumped to C:/Users/ADMINI~1/AppData/Local/Temp/kitchen/cache/chef-stacktrace.out
                 [2016-08-03T02:04:45+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
                 [2016-08-03T02:04:45+00:00] FATAL: Chef::Exceptions::RunFailedWrappingError: Found 1 errors, they are stored in the backtrace
          D      [WinRM] cleaning up command_id: F9897435-4EBF-4895-8F7B-19891DB5CEC7 on shell_id CC2E5884-A0CA-4FDB-ABF0-417E
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000] ED19E520
    26260: |2
          Cookbook Trace:
          ---------------
          /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in `block (3 levels) in <class:Kitchen>'

          Resource Declaration:
    26299: |
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000] Running handlers:
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000]
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000] [2016-08-03T02:04:47+00:00] ERROR: Running exception handlers
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000] Running handlers complete
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000] [2016-08-03T02:04:47+00:00] ERROR: Exception handlers complete
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000] Chef Client failed. 5 resources updated in 06 minutes 11 seconds
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000]
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000] [2016-08-03T02:04:47+00:00] ERROR: Failed to post audit report to server. Saving report to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/failed-audit-data.json
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000] [2016-08-03T02:04:47+00:00] FATAL: Stacktrace dumped to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/chef-stacktrace.out
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000] [2016-08-03T02:04:47+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:47 +0000] [2016-08-03T02:04:47+00:00] ERROR: Found 1 errors, they are stored in the backtrace
      TOP-COOKBOOKS::PROVISION::[2016-08-03 02:04:49 +0000] [2016-08-03T02:04:49+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
      CHEF-ACCEPTANCE::[2016-08-03 02:04:49 +0000] Encountered an error running the recipe provision: Expected process to exit with [0], but received '1'
      ---- Begin output of chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/dna.json -o acceptance-cookbook::provision --no-color ----
    30347: |2

             Running handlers:
             [2016-08-03T02:04:45+00:00] ERROR: Running exception handlers
             Running handlers complete
             [2016-08-03T02:04:45+00:00] ERROR: Exception handlers complete
             Chef Client failed. 0 resources updated in 31 seconds
             [2016-08-03T02:04:45+00:00] FATAL: Stacktrace dumped to C:/Users/ADMINI~1/AppData/Local/Temp/kitchen/cache/chef-stacktrace.out
             [2016-08-03T02:04:45+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
             [2016-08-03T02:04:45+00:00] FATAL: Chef::Exceptions::RunFailedWrappingError: Found 1 errors, they are stored in the backtrace
      D      [WinRM] cleaning up command_id: F9897435-4EBF-4895-8F7B-19891DB5CEC7 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520
      D      Cleaning up local sandbox in /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu
    30453: "\n\n        ================================================================================\n
      \       Error executing action `run` on resource 'ruby_block[copy_kitchen_logs_to_data_path]'\n
      \       ================================================================================\n\n
      \       Mixlib::ShellOut::ShellCommandFailed\n        ------------------------------------\n
      \       Expected process to exit with [0], but received '20'\n        ---- Begin
      output of bundle exec kitchen converge  -c -l debug ----\n        STDOUT: ----->
      Starting Kitchen (v1.10.2)\n        D      Berksfile found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile,
      loading Berkshelf\n        D      Berkshelf 4.3.5 library loaded\n        D
      \     Berksfile found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile,
      loading Berkshelf\n        D      Berkshelf 4.3.5 previously loaded\n        D
      \     winrm requested, loading winrm gem ([\"~> 2.0\"])\n        D      winrm
      is loaded.\n        D      winrm-fs requested, loading winrm-fs gem ([\"~> 1.0\"])\n
      \       D      winrm-fs is loaded.\n        -----> Creating <git-default-ubuntu-1404>...\n
      \              If you are not using an account that qualifies under the AWS\n
      \       free-tier, you may be charged to run these suites. The charge\n        should
      be minimal, but neither Test Kitchen nor its maintainers\n        are responsible
      for your incurred costs.\n\n        -----> Creating <git-default-windows-windows-2012r2>...\n
      \       D      platform name windows-2012r2 appears to be a standard platform.
      Searching for windows 2012r2 ...\n        D      Searching for images matching
      {:name=>\"Windows_Server-2012-R2*-English-*-Base-*\", :\"owner-alias\"=>\"amazon\",
      :architecture=>\"x86_64\", :\"virtualization-type\"=>\"hvm\", :\"block-device-mapping.volume-type\"=>\"gp2\",
      :\"image-type\"=>\"machine\"} ...\n        D      platform name ubuntu-14.04
      appears to be a standard platform. Searching for ubuntu 14.04 ...\n        D
      \     Searching for images matching {:name=>\"ubuntu/images/*/ubuntu-*-14.04-*-server-*\",
      :\"owner-id\"=>\"099720109477\", :architecture=>\"x86_64\", :\"virtualization-type\"=>\"hvm\",
      :\"block-device-mapping.volume-type\"=>\"gp2\", :\"image-type\"=>\"machine\"}
      ...\n        D      Search returned 4 images:\n        D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.26:
      Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm,
      Storage: ebs gp2, Created: 2016-07-27T08:44:14.000Z\n        D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.13:
      Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm,
      Storage: ebs gp2, Created: 2016-07-14T09:59:33.000Z\n        D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.06.15:
      Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm,
      Storage: ebs gp2, Created: 2016-06-16T16:58:39.000Z\n        D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.05.11:
      Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm,
      Storage: ebs gp2, Created: 2016-05-12T20:22:38.000Z\n        D      Image for
      git-default-windows-windows-2012r2: Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.26.
      \ Architecture: x86_64, Virtualization: hvm, Storage: ebs gp2, Created: 2016-07-27T08:44:14.000Z\n
      \              Detected platform: windows version 2012r2rtm on x86_64. Instance
      Type: m3.large. Default username: administrator (default).\n        D      No
      SSH username specified: using default username administrator  for image ami-2426e944,
      which we detected as windows 2012r2rtm x86_64.\n               If you are not
      using an account that qualifies under the AWS\n        free-tier, you may be
      charged to run these suites. The charge\n        should be minimal, but neither
      Test Kitchen nor its maintainers\n        are responsible for your incurred
      costs.\n\n        D      Creating EC2 instance in region us-west-2 with properties:\n
      \       D      - instance_type = \"m3.large\"\n        D      - ebs_optimized
      = false\n        D      - image_id = \"ami-2426e944\"\n        D      - key_name
      = \"jenkins\"\n        D      - subnet_id = \"subnet-19ac017c\"\n        D      -
      private_ip_address = nil\n        D      - placement = {:availability_zone=>\"us-west-2a\"}\n
      \       D      - security_group_ids = [\"sg-e401eb83\", \"sg-96274af3\"]\n        D
      \     - user_data = \"PHBvd2Vyc2hlbGw+CiYgbmV0c2ggYWR2ZmlyZXdhbGwgZmlyZXdhbGwgc2V0\\nIHJ1bGUgbmFtZT0iV2luZG93cyBSZW1vdGUgTWFuYWdlbWVudCAoSFRUUC1J\\nbikiIHByb2ZpbGU9cHVibGljIHByb3RvY29sPXRjcCBsb2NhbHBvcnQ9NTk4\\nNSByZW1vdGVpcD1sb2NhbHN1Ym5ldCBuZXcgcmVtb3RlaXA9YW55CiNTZXQg\\nc2NyaXB0IGV4ZWN1dGlvbiB0byB1bnJlc3RyaWN0ZWQKJiBTZXQtRXhlY3V0\\naW9uUG9saWN5IFVucmVzdHJpY3RlZCAtRm9yY2UKPC9wb3dlcnNoZWxsPgo=\\n\"\n
      \       D      Search returned 59 images:\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160714:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-07-15T10:37:25.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160627:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-06-29T15:13:53.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160620:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-06-21T12:07:59.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160602:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-06-03T01:17:21.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160516:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-05-17T09:54:45.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160509.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-05-10T11:55:52.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160406:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-04-06T22:01:48.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160314:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-03-15T08:30:56.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160222:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-02-23T13:53:30.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160217.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-02-18T01:37:46.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160201:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-02-02T12:11:43.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160119:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-01-20T12:15:17.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160114.5:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-01-15T22:11:35.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151218:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-12-20T01:45:49.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151217:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-12-18T09:40:49.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151117:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-11-18T08:17:32.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151105:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-11-06T23:03:53.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151019:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-20T09:04:11.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151015:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-15T20:43:54.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151008:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-09T08:48:14.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151007:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-08T08:57:50.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151005:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-06T09:26:41.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150930:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-01T11:24:14.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150928:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-29T11:13:44.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150924:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-25T13:37:47.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150908:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-09T05:59:15.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150901.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-02T05:15:07.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150814:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-15T08:11:39.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150813:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-14T07:14:42.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150812:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-13T08:50:05.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150810:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-11T11:43:49.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150805:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-06T19:29:13.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150731:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-01T09:17:08.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150727:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-07-28T07:13:51.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150724:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-07-25T05:22:13.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150629:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-30T09:14:39.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150609:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-09T17:42:29.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150608:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-09T03:54:29.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150603:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-04T08:13:50.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150528:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-05-29T10:15:24.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150506:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-05-07T08:14:11.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150417:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-04-17T12:06:11.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150408.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-04-09T08:52:15.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150325:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-03-25T23:56:26.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150305:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-03-05T11:02:56.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150227.2:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-02-28T07:15:31.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150225.2:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-02-26T06:03:04.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150209.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-02-10T05:22:56.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150123:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-01-23T10:57:13.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20141125:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-11-26T01:50:28.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140927:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-30T00:19:14.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140926:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-26T16:05:00.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140924:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-25T14:07:23.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140923:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-23T14:15:33.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140829:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-08-29T18:46:07.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140816:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-08-16T22:57:30.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140813:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-08-14T00:50:31.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140724:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-07-25T08:28:59.000Z\n        D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140607.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-07-23T18:05:49.000Z\n        D      Creating EC2 instance
      in region us-west-2 with properties:\n        D      - instance_type = \"m3.large\"\n
      \       D      - ebs_optimized = false\n        D      - image_id = \"ami-d732f0b7\"\n
      \       D      - key_name = \"jenkins\"\n        D      - subnet_id = \"subnet-19ac017c\"\n
      \       D      - private_ip_address = nil\n        D      - placement = {:availability_zone=>\"us-west-2a\"}\n
      \       D      - security_group_ids = [\"sg-e401eb83\", \"sg-96274af3\"]\n               Instance
      <i-b452cd1b> requested.\n               Polling AWS for existence, attempt 0...\n
      \              Instance <i-1b55cab4> requested.\n               Polling AWS
      for existence, attempt 0...\n               Attempting to tag the instance,
      0 retries\n               Attempting to tag the instance, 0 retries\n               EC2
      instance <i-1b55cab4> created.\n               Waited 0/300s for instance <i-1b55cab4>
      to become ready.\n               EC2 instance <i-b452cd1b> created.\n               Waited
      0/300s for instance <i-b452cd1b> to become ready.\n               Waited 5/300s
      for instance <i-1b55cab4> to become ready.\n               Waited 5/300s for
      instance <i-b452cd1b> to become ready.\n               Waited 10/300s for instance
      <i-1b55cab4> to become ready.\n               Waited 10/300s for instance <i-b452cd1b>
      to become ready.\n               Waited 15/300s for instance <i-1b55cab4> to
      become ready.\n               Waited 15/300s for instance <i-b452cd1b> to become
      ready.\n               Waited 20/300s for instance <i-1b55cab4> to become ready.\n
      \              Waited 20/300s for instance <i-b452cd1b> to become ready.\n               EC2
      instance <i-b452cd1b> ready.\n        D      [SSH] opening connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n        D      [SSH] connection failed (#<Errno::ECONNREFUSED:
      Connection refused - connect(2) for 10.194.15.201:22>)\n               Waiting
      for SSH service on 10.194.15.201:22, retrying in 3 seconds\n        D      [SSH]
      opening connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n        D      [SSH] connection
      failed (#<Errno::ECONNREFUSED: Connection refused - connect(2) for 10.194.15.201:22>)\n
      \              Waiting for SSH service on 10.194.15.201:22, retrying in 3 seconds\n
      \              Waited 25/300s for instance <i-1b55cab4> to become ready.\n        D
      \     [SSH] opening connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n        D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (echo '[SSH] Established')\n
      \              [SSH] Established\n        D      Using sudo_command='sudo -E'
      for ohai hints\n        D      [SSH] reusing existing connection ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n        D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sudo -E mkdir -p /etc/chef/ohai/hints;
      sudo -E touch /etc/chef/ohai/hints/ec2.json)\n        D      ec2:create '10.194.15.201'\n
      \              Finished creating <git-default-ubuntu-1404> (0m31.30s).\n        ----->
      Converging <git-default-ubuntu-1404>...\n               Preparing files for
      transfer\n        D      Creating local sandbox in /tmp/cheftest/git-default-ubuntu-1404-sandbox-20160803-32371-1dt31m3\n
      \              Preparing dna.json\n        D      Creating dna.json from {:chef_acceptance=>\"true\",
      :use_system_chef=>\"true\", :run_list=>[\"recipe[apt]\", \"recipe[git]\"]}\n
      \              Resolving cookbook dependencies with Berkshelf 4.3.5...\n        D
      \     Using Berksfile from /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile\n
      \              Waited 30/300s for instance <i-1b55cab4> to become ready.\n               Removing
      non-cookbook files before transfer\n               Preparing validation.pem\n
      \       D      Using a dummy validation.pem\n               Preparing client.rb\n
      \       D      Creating client.rb from {:node_name=>\"git-default-ubuntu-1404\",
      :checksum_path=>\"/tmp/kitchen/checksums\", :file_cache_path=>\"/tmp/kitchen/cache\",
      :file_backup_path=>\"/tmp/kitchen/backup\", :cookbook_path=>[\"/tmp/kitchen/cookbooks\",
      \"/tmp/kitchen/site-cookbooks\"], :data_bag_path=>\"/tmp/kitchen/data_bags\",
      :environment_path=>\"/tmp/kitchen/environments\", :node_path=>\"/tmp/kitchen/nodes\",
      :role_path=>\"/tmp/kitchen/roles\", :client_path=>\"/tmp/kitchen/clients\",
      :user_path=>\"/tmp/kitchen/users\", :validation_key=>\"/tmp/kitchen/validation.pem\",
      :client_key=>\"/tmp/kitchen/client.pem\", :chef_server_url=>\"http://127.0.0.1:8889\",
      :encrypted_data_bag_secret=>\"/tmp/kitchen/encrypted_data_bag_secret\", :audit_mode=>\":enabled\",
      :named_run_list=>{}}\n        D      [SSH] reusing existing connection ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n        D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sudo -E cat > /tmp/chef-installer.sh
      <<\"EOL\"\n        #!/bin/bash\n        #!/bin/sh\n        # WARNING: REQUIRES
      /bin/sh\n        #\n        # - must run on /bin/sh on solaris 9\n        #
      - must run on /bin/sh on AIX 6.x\n        #\n        # Copyright:: Copyright
      (c) 2010-2015 Chef Software, Inc.\n        # License:: Apache License, Version
      2.0\n        #\n        # Licensed under the Apache License, Version 2.0 (the
      \"License\");\n        # you may not use this file except in compliance with
      the License.\n        # You may obtain a copy of the License at\n        #\n
      \       #     http://www.apache.org/licenses/LICENSE-2.0\n        #\n        #
      Unless required by applicable law or agreed to in writing, software\n        #
      distributed under the License is distributed on an \"AS IS\" BASIS,\n        #
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        #
      See the License for the specific language governing permissions and\n        #
      limitations under the License.\n        #\n\n        # helpers.sh\n        ############\n
      \       # This section has some helper functions to make life easier.\n        #\n
      \       # Outputs:\n        # $tmp_dir: secure-ish temp directory that can be
      used during installation.\n        ############\n\n        # Check whether a
      command exists - returns 0 if it does, 1 if it does not\n        exists() {\n
      \         if command -v $1 >/dev/null 2>&1\n          then\n            return
      0\n          else\n            return 1\n          fi\n        }\n\n        #
      Output the instructions to report bug about this script\n        report_bug()
      {\n          echo \"Version: $version\"\n          echo \"\"\n          echo
      \"Please file a Bug Report at https://github.com/chef/omnitruck/issues/new\"\n
      \         echo \"Alternatively, feel free to open a Support Ticket at https://www.chef.io/support/tickets\"\n
      \         echo \"More Chef support resources can be found at https://www.chef.io/support\"\n
      \         echo \"\"\n          echo \"Please include as many details about the
      problem as possible i.e., how to reproduce\"\n          echo \"the problem (if
      possible), type of the Operating System and its version, etc.,\"\n          echo
      \"and any other relevant details that might help us with troubleshooting.\"\n
      \         echo \"\"\n        }\n\n        checksum_mismatch() {\n          echo
      \"Package checksum mismatch!\"\n          report_bug\n          exit 1\n        }\n\n
      \       unable_to_retrieve_package() {\n          echo \"Unable to retrieve
      a valid package!\"\n          report_bug\n          echo \"Metadata URL: $metadata_url\"\n
      \         if test \"x$download_url\" != \"x\"; then\n            echo \"Download
      URL: $download_url\"\n          fi\n          if test \"x$stderr_results\" !=
      \"x\"; then\n            echo \"\\nDEBUG OUTPUT FOLLOWS:\\n$stderr_results\"\n
      \         fi\n          exit 1\n        }\n\n        http_404_error() {\n          echo
      \"Omnitruck artifact does not exist for version $version on platform $platform\"\n
      \         echo \"\"\n          echo \"Either this means:\"\n          echo \"
      \  - We do not support $platform\"\n          echo \"   - We do not have an
      artifact for $version\"\n          echo \"\"\n          echo \"This is often
      the latter case due to running a prerelease or RC version of chef\"\n          echo
      \"or a gem version which was only pushed to rubygems and not omnitruck.\"\n
      \         echo \"\"\n          echo \"You may be able to set your knife[:bootstrap_version]
      to the most recent stable\"\n          echo \"release of Chef to fix this problem
      (or the most recent stable major version number).\"\n          echo \"\"\n          echo
      \"In order to test the version parameter, adventurous users may take the Metadata
      URL\"\n          echo \"below and modify the '&v=<number>' parameter until you
      successfully get a URL that\"\n          echo \"does not 404 (e.g. via curl
      or wget).  You should be able to use '&v=11' or '&v=12'\"\n          echo \"succesfully.\"\n
      \         echo \"\"\n          echo \"If you cannot fix this problem by setting
      the bootstrap_version, it probably means\"\n          echo \"that $platform
      is not supported.\"\n          echo \"\"\n          # deliberately do not call
      report_bug to suppress bug report noise.\n          echo \"Metadata URL: $metadata_url\"\n
      \         if test \"x$download_url\" != \"x\"; then\n            echo \"Download
      URL: $download_url\"\n          fi\n          if test \"x$stderr_results\" !=
      \"x\"; then\n            echo \"\\nDEBUG OUTPUT FOLLOWS:\\n$stderr_results\"\n
      \         fi\n          exit 1\n        }\n\n        capture_tmp_stderr() {\n
      \         # spool up /tmp/stderr from all the commands we called\n          if
      test -f \"$tmp_dir/stderr\"; then\n            output=`cat $tmp_dir/stderr`\n
      \           stderr_results=\"${stderr_results}\\nSTDERR from $1:\\n\\n$output\\n\"\n
      \           rm $tmp_dir/stderr\n          fi\n        }\n\n        # do_wget
      URL FILENAME\n        do_wget() {\n          echo \"trying wget...\"\n          wget
      -O \"$2\" \"$1\" 2>$tmp_dir/stderr\n          rc=$?\n          # check for 404\n
      \         grep \"ERROR 404\" $tmp_dir/stderr 2>&1 >/dev/null\n          if test
      $? -eq 0; then\n            echo \"ERROR 404\"\n            http_404_error\n
      \         fi\n\n          # check for bad return status or empty output\n          if
      test $rc -ne 0 || test ! -s \"$2\"; then\n            capture_tmp_stderr \"wget\"\n
      \           return 1\n          fi\n\n          return 0\n        }\n\n        #
      do_curl URL FILENAME\n        do_curl() {\n          echo \"trying curl...\"\n
      \         curl --retry 5 -sL -D $tmp_dir/stderr \"$1\" > \"$2\"\n          rc=$?\n
      \         # check for 404\n          grep \"404 Not Found\" $tmp_dir/stderr
      2>&1 >/dev/null\n          if test $? -eq 0; then\n            echo \"ERROR
      404\"\n            http_404_error\n          fi\n\n          # check for bad
      return status or empty output\n          if test $rc -ne 0 || test ! -s \"$2\";
      then\n            capture_tmp_stderr \"curl\"\n            return 1\n          fi\n\n
      \         return 0\n        }\n\n        # do_fetch URL FILENAME\n        do_fetch()
      {\n          echo \"trying fetch...\"\n          fetch -o \"$2\" \"$1\" 2>$tmp_dir/stderr\n
      \         # check for bad return status\n          test $? -ne 0 && return 1\n
      \         return 0\n        }\n\n        # do_perl URL FILENAME\n        do_perl()
      {\n          echo \"trying perl...\"\n          perl -e 'use LWP::Simple; getprint($ARGV[0]);'
      \"$1\" > \"$2\" 2>$tmp_dir/stderr\n          rc=$?\n          # check for 404\n
      \         grep \"404 Not Found\" $tmp_dir/stderr 2>&1 >/dev/null\n          if
      test $? -eq 0; then\n            echo \"ERROR 404\"\n            http_404_error\n
      \         fi\n\n          # check for bad return status or empty output\n          if
      test $rc -ne 0 || test ! -s \"$2\"; then\n            capture_tmp_stderr \"perl\"\n
      \           return 1\n          fi\n\n          return 0\n        }\n\n        #
      do_python URL FILENAME\n        do_python() {\n          echo \"trying python...\"\n
      \         python -c \"import sys,urllib2 ; sys.stdout.write(urllib2.urlopen(sys.argv[1]).read())\"
      \"$1\" > \"$2\" 2>$tmp_dir/stderr\n          rc=$?\n          # check for 404\n
      \         grep \"HTTP Error 404\" $tmp_dir/stderr 2>&1 >/dev/null\n          if
      test $? -eq 0; then\n            echo \"ERROR 404\"\n            http_404_error\n
      \         fi\n\n          # check for bad return status or empty output\n          if
      test $rc -ne 0 || test ! -s \"$2\"; then\n            capture_tmp_stderr \"python\"\n
      \           return 1\n          fi\n          return 0\n        }\n\n        #
      returns 0 if checksums match\n        do_checksum() {\n          if exists sha256sum;
      then\n            echo \"Comparing checksum with sha256sum...\"\n            checksum=`sha256sum
      $1 | awk '{ print $1 }'`\n            return `test \"x$checksum\" = \"x$2\"`\n
      \         elif exists shasum; then\n            echo \"Comparing checksum with
      shasum...\"\n            checksum=`shasum -a 256 $1 | awk '{ print $1 }'`\n
      \           return `test \"x$checksum\" = \"x$2\"`\n          else\n            echo
      \"WARNING: could not find a valid checksum program, pre-install shasum or sha256sum
      in your O/S image to get valdation...\"\n            return 0\n          fi\n
      \       }\n\n        # do_download URL FILENAME\n        do_download() {\n          echo
      \"downloading $1\"\n          echo \"  to file $2\"\n\n          url=`echo $1`\n
      \         if test \"x$platform\" = \"xsolaris2\"; then\n            if test
      \"x$platform_version\" = \"x5.9\" -o \"x$platform_version\" = \"x5.10\"; then\n
      \             # solaris 9 lacks openssl, solaris 10 lacks recent enough credentials
      - your base O/S is completely insecure, please upgrade\n              url=`echo
      $url | sed -e 's/https/http/'`\n            fi\n          fi\n\n          #
      we try all of these until we get success.\n          # perl, in particular may
      be present but LWP::Simple may not be installed\n\n          if exists wget;
      then\n            do_wget $url $2 && return 0\n          fi\n\n          if
      exists curl; then\n            do_curl $url $2 && return 0\n          fi\n\n
      \         if exists fetch; then\n            do_fetch $url $2 && return 0\n
      \         fi\n\n          if exists perl; then\n            do_perl $url $2
      && return 0\n          fi\n\n          if exists python; then\n            do_python
      $url $2 && return 0\n          fi\n\n          unable_to_retrieve_package\n
      \       }\n\n        # install_file TYPE FILENAME\n        # TYPE is \"rpm\",
      \"deb\", \"solaris\", \"sh\", etc.\n        install_file() {\n          echo
      \"Installing $project $version\"\n          case \"$1\" in\n            \"rpm\")\n
      \             if test \"x$platform\" = \"xnexus\" || test \"x$platform\" = \"xios_xr\";
      then\n                echo \"installing with yum...\"\n                yum install
      -yv \"$2\"\n              else\n                echo \"installing with rpm...\"\n
      \               rpm -Uvh --oldpackage --replacepkgs \"$2\"\n              fi\n
      \             ;;\n            \"deb\")\n              echo \"installing with
      dpkg...\"\n              dpkg -i \"$2\"\n              ;;\n            \"bff\")\n
      \             echo \"installing with installp...\"\n              installp -aXYgd
      \"$2\" all\n              ;;\n            \"solaris\")\n              echo \"installing
      with pkgadd...\"\n              echo \"conflict=nocheck\" > $tmp_dir/nocheck\n
      \             echo \"action=nocheck\" >> $tmp_dir/nocheck\n              echo
      \"mail=\" >> $tmp_dir/nocheck\n              pkgrm -a $tmp_dir/nocheck -n $project
      >/dev/null 2>&1 || true\n              pkgadd -G -n -d \"$2\" -a $tmp_dir/nocheck
      $project\n              ;;\n            \"pkg\")\n              echo \"installing
      with installer...\"\n              cd / && /usr/sbin/installer -pkg \"$2\" -target
      /\n              ;;\n            \"dmg\")\n              echo \"installing dmg
      file...\"\n              hdiutil detach \"/Volumes/chef_software\" >/dev/null
      2>&1 || true\n              hdiutil attach \"$2\" -mountpoint \"/Volumes/chef_software\"\n
      \             cd / && /usr/sbin/installer -pkg `find \"/Volumes/chef_software\"
      -name \\*.pkg` -target /\n              hdiutil detach \"/Volumes/chef_software\"\n
      \             ;;\n            \"sh\" )\n              echo \"installing with
      sh...\"\n              sh \"$2\"\n              ;;\n            *)\n              echo
      \"Unknown filetype: $1\"\n              report_bug\n              exit 1\n              ;;\n
      \         esac\n          if test $? -ne 0; then\n            echo \"Installation
      failed\"\n            report_bug\n            exit 1\n          fi\n        }\n\n
      \       if test \"x$TMPDIR\" = \"x\"; then\n          tmp=\"/tmp\"\n        else\n
      \         tmp=$TMPDIR\n        fi\n        # secure-ish temp dir creation without
      having mktemp available (DDoS-able but not expliotable)\n        tmp_dir=\"$tmp/install.sh.$$\"\n
      \       (umask 077 && mkdir $tmp_dir) || exit 1\n\n        ############\n        #
      end of helpers.sh\n        ############\n\n\n        project=chef\n        version=12.13.21+20160802231230\n
      \       channel=unstable\n\n\n        # platform_detection.sh\n        ############\n
      \       # This section makes platform detection compatible with omnitruck on
      the system\n        #   it runs.\n        #\n        # Outputs:\n        # $platform:
      Name of the platform.\n        # $platform_version: Version of the platform.\n
      \       # $machine: System's architecture.\n        ############\n\n        #\n
      \       # Platform and Platform Version detection\n        #\n        # NOTE:
      This should now match ohai platform and platform_version matching.\n        #
      do not invented new platform and platform_version schemas, just make this behave\n
      \       # like what ohai returns as platform and platform_version for the server.\n
      \       #\n        # ALSO NOTE: Do not mangle platform or platform_version here.
      \ It is less error\n        # prone and more future-proof to do that in the
      server, and then all omnitruck clients\n        # will 'inherit' the changes
      (install.sh is not the only client of the omnitruck\n        # endpoint out
      there).\n        #\n\n        machine=`uname -m`\n        os=`uname -s`\n\n
      \       if test -f \"/etc/lsb-release\" && grep -q DISTRIB_ID /etc/lsb-release
      && ! grep -q wrlinux /etc/lsb-release; then\n          platform=`grep DISTRIB_ID
      /etc/lsb-release | cut -d \"=\" -f 2 | tr '[A-Z]' '[a-z]'`\n          platform_version=`grep
      DISTRIB_RELEASE /etc/lsb-release | cut -d \"=\" -f 2`\n        elif test -f
      \"/etc/debian_version\"; then\n          platform=\"debian\"\n          platform_version=`cat
      /etc/debian_version`\n        elif test -f \"/etc/redhat-release\"; then\n          platform=`sed
      's/^\\(.\\+\\) release.*/\\1/' /etc/redhat-release | tr '[A-Z]' '[a-z]'`\n          platform_version=`sed
      's/^.\\+ release \\([.0-9]\\+\\).*/\\1/' /etc/redhat-release`\n\n          #
      If /etc/redhat-release exists, we act like RHEL by default\n          if test
      \"$platform\" = \"fedora\"; then\n            # FIXME: stop remapping fedora
      to el\n            # FIXME: remove client side platform_version mangling and
      hard coded yolo\n            # Change platform version for use below.\n            platform_version=\"6.0\"\n
      \         fi\n\n          if test \"$platform\" = \"xenserver\"; then\n            #
      Current XenServer 6.2 is based on CentOS 5, platform is not reset to \"el\"
      server should hanlde response\n            platform=\"xenserver\"\n          else\n
      \           # FIXME: use \"redhat\"\n            platform=\"el\"\n          fi\n\n
      \       elif test -f \"/etc/system-release\"; then\n          platform=`sed
      's/^\\(.\\+\\) release.\\+/\\1/' /etc/system-release | tr '[A-Z]' '[a-z]'`\n
      \         platform_version=`sed 's/^.\\+ release \\([.0-9]\\+\\).*/\\1/' /etc/system-release
      | tr '[A-Z]' '[a-z]'`\n          # amazon is built off of fedora, so act like
      RHEL\n          if test \"$platform\" = \"amazon linux ami\"; then\n            #
      FIXME: remove client side platform_version mangling and hard coded yolo, and
      remapping to deprecated \"el\"\n            platform=\"el\"\n            platform_version=\"6.0\"\n
      \         fi\n        # Apple OS X\n        elif test -f \"/usr/bin/sw_vers\";
      then\n          platform=\"mac_os_x\"\n          # Matching the tab-space with
      sed is error-prone\n          platform_version=`sw_vers | awk '/^ProductVersion:/
      { print $2 }' | cut -d. -f1,2`\n\n          # x86_64 Apple hardware often runs
      32-bit kernels (see OHAI-63)\n          x86_64=`sysctl -n hw.optional.x86_64`\n
      \         if test $x86_64 -eq 1; then\n            machine=\"x86_64\"\n          fi\n
      \       elif test -f \"/etc/release\"; then\n          machine=`/usr/bin/uname
      -p`\n          if grep -q SmartOS /etc/release; then\n            platform=\"smartos\"\n
      \           platform_version=`grep ^Image /etc/product | awk '{ print $3 }'`\n
      \         else\n            platform=\"solaris2\"\n            platform_version=`/usr/bin/uname
      -r`\n          fi\n        elif test -f \"/etc/SuSE-release\"; then\n          if
      grep -q 'Enterprise' /etc/SuSE-release;\n          then\n              platform=\"sles\"\n
      \             platform_version=`awk '/^VERSION/ {V = $3}; /^PATCHLEVEL/ {P =
      $3}; END {print V \".\" P}' /etc/SuSE-release`\n          else\n              platform=\"suse\"\n
      \             platform_version=`awk '/^VERSION =/ { print $3 }' /etc/SuSE-release`\n
      \         fi\n        elif test \"x$os\" = \"xFreeBSD\"; then\n          platform=\"freebsd\"\n
      \         platform_version=`uname -r | sed 's/-.*//'`\n        elif test \"x$os\"
      = \"xAIX\"; then\n          platform=\"aix\"\n          platform_version=\"`uname
      -v`.`uname -r`\"\n          machine=\"powerpc\"\n        elif test -f \"/etc/os-release\";
      then\n          . /etc/os-release\n          if test \"x$CISCO_RELEASE_INFO\"
      != \"x\"; then\n            . $CISCO_RELEASE_INFO\n          fi\n\n          platform=$ID\n
      \         platform_version=$VERSION\n        fi\n\n        if test \"x$platform\"
      = \"x\"; then\n          echo \"Unable to determine platform version!\"\n          report_bug\n
      \         exit 1\n        fi\n\n        #\n        # NOTE: platform manging
      in the install.sh is DEPRECATED\n        #\n        # - install.sh should be
      true to ohai and should not remap\n        #   platform or platform versions.\n
      \       #\n        # - remapping platform and mangling platform version numbers
      is\n        #   now the complete responsibility of the server-side endpoints\n
      \       #\n\n        major_version=`echo $platform_version | cut -d. -f1`\n
      \       case $platform in\n          # FIXME: should remove this case statement
      completely\n          \"el\")\n            # FIXME:  \"el\" is deprecated, should
      use \"redhat\"\n            platform_version=$major_version\n            ;;\n
      \         \"debian\")\n            if test \"x$major_version\" = \"x5\"; then\n
      \             # This is here for potential back-compat.\n              # We
      do not have 5 in versions we publish for anymore but we\n              # might
      have it for earlier versions.\n              platform_version=\"6\"\n            else\n
      \             platform_version=$major_version\n            fi\n            ;;\n
      \         \"freebsd\")\n            platform_version=$major_version\n            ;;\n
      \         \"sles\")\n            platform_version=$major_version\n            ;;\n
      \         \"suse\")\n            platform_version=$major_version\n            ;;\n
      \       esac\n\n        # normalize the architecture we detected\n        case
      $machine in\n          \"x86_64\"|\"amd64\"|\"x64\")\n            machine=\"x86_64\"\n
      \           ;;\n          \"i386\"|\"i86pc\"|\"x86\"|\"i686\")\n            machine=\"i386\"\n
      \           ;;\n          \"sparc\"|\"sun4u\"|\"sun4v\")\n            machine=\"sparc\"\n
      \           ;;\n        esac\n\n        if test \"x$platform_version\" = \"x\";
      then\n          echo \"Unable to determine platform version!\"\n          report_bug\n
      \         exit 1\n        fi\n\n        if test \"x$platform\" = \"xsolaris2\";
      then\n          # hack up the path on Solaris to find wget, pkgadd\n          PATH=/usr/sfw/bin:/usr/sbin:$PATH\n
      \         export PATH\n        fi\n\n        echo \"$platform $platform_version
      $machine\"\n\n        ############\n        # end of platform_detection.sh\n
      \       ############\n\n\n        # artifactory_urls.sh\n        ############\n
      \       # This section sets up the information for a build to be installed from
      artifactory\n        #  then uses $platform, $platform_version and $machine
      to select the correct\n        #  version.\n        #\n        # Inputs:\n        #
      $platform:\n        # $platform_version:\n        # $machine:\n        #\n        #
      Outputs:\n        # $download_url:\n        # $sha256:\n        ############\n\n\n
      \         artifact_info_dir=\"$tmp_dir/artifact_info/mac_os_x/10.9/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.9/chef-12.13.21+20160802231230-1.dmg\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/mac_os_x/10.10/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.10/chef-12.13.21+20160802231230-1.dmg\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/mac_os_x/10.11/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.11/chef-12.13.21+20160802231230-1.dmg\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/14.04/ppc64le\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_ppc64el.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 ac910301f0ed899deb1fe00ab067829dc35e4291ebbde5a5b71a62f020c91699\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.10/i386\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.i386.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/el/7/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 58e06ad2bfe6291b37318eea1b313402753118e863671e28178ea60b82260a7e\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.11/i386\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.i386.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/debian/6/i686\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/debian/7/i686\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/el/7/ppc64le\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64le.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 1f9796dfbe38742d0bf4eced3470b9858569fbe0d74866adf2c4eadc3e24f084\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/debian/8/i686\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/el/7/ppc64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 1a5a4f8046459ba77fddca18ba0c72a5507c78845531c9e14909cd1789288c99\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/el/5/i686\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.i386.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 352c4457940eb4788746b419da9aecbfc0139108a942e6457ecc63adf2c21661\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/nexus/7/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/nexus/7/chef-12.13.21+20160802231230-1.nexus7.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 96100a31640ebab2ce87aff3928562d1f41ff89fba22b6b91b2e683043005da1\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/10/i386\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.i386.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 f7846f3961813789e4541dc9ec332208af155f5b009c86136dae6a34787cd438\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/el/6/i686\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.i386.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 0b1589debc9123b0f842c4e6ac2e541a5d60becb716d59c1f450a3f338c8558c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/ios_xr/6/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ios_xr/6/chef-12.13.21+20160802231230-1.ios_xr6.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 70245a37184a31d443e56106f0aaafc07f37a5fa9e527bdfdaa407ab5a3dd12a\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/9/i386\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.i386.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 6dc28814efc61c518a85ae1a7f84da52a2329500a41b392c3b545969e07c05cb\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/el/5/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 38c5e33209e69f9a8595aa9186a1bdd36b457b8f69198eb0bf59ef8a80526123\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/12.04/i686\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/14.04/i686\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/debian/6/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/debian/7/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/debian/8/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/12.04/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/14.04/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/10/amd64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.amd64.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 e833b3bed62715fd1a83b518ebf8049835edf9aa835129b557a001451ec271e3\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/el/6/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 a5b23e1b52741d6f05fcd81485d8879e14b4840801667e153eb83a65abec1968\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/aix/6.1/powerpc\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/6.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/aix/7.1/powerpc\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/7.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/windows/2008r2/i386\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012/i386\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x86.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012r2/i386\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/9/amd64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.amd64.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 8c618c6ba395bc631d59646f052d5e6ebb0fbe8d36db439c81e7524756975973\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/windows/2008r2/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x64.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012r2/x86_64\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.10/sparc\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.sparc.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      >> \"$artifact_info_dir/artifact_info\"\n\n          artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.11/sparc\"\n
      \         mkdir -p $artifact_info_dir\n          touch \"$artifact_info_dir/artifact_info\"\n
      \         echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.sparc.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n          echo \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      >> \"$artifact_info_dir/artifact_info\"\n\n\n        artifact_info_for_platform=\"$tmp_dir/artifact_info/$platform/$platform_version/$machine/artifact_info\"\n\n
      \       download_url=`awk '$1 == \"url\" { print $2 }' \"$artifact_info_for_platform\"`\n
      \       sha256=`awk '$1 == \"sha256\" { print $2 }' \"$artifact_info_for_platform\"`\n\n\n
      \       # fetch_package.sh\n        ############\n        # This section fetchs
      a package from $download_url and verifies its metadata.\n        #\n        #
      Inputs:\n        # $download_url:\n        # $tmp_dir:\n        # Optional Inputs:\n
      \       # $cmdline_filename: Name of the package downloaded on local disk.\n
      \       # $cmdline_dl_dir: Name of the directory downloaded package will be
      saved to on local disk.\n        #\n        # Outputs:\n        # $download_filename:
      Name of the downloaded file on local disk.\n        # $filetype: Type of the
      file downloaded.\n        ############\n\n        filename=`echo $download_url
      | sed -e 's/^.*\\///'`\n        filetype=`echo $filename | sed -e 's/^.*\\.//'`\n\n
      \       # use either $tmp_dir, the provided directory (-d) or the provided filename
      (-f)\n        if test \"x$cmdline_filename\" != \"x\"; then\n          download_filename=\"$cmdline_filename\"\n
      \       elif test \"x$cmdline_dl_dir\" != \"x\"; then\n          download_filename=\"$cmdline_dl_dir/$filename\"\n
      \       else\n          download_filename=\"$tmp_dir/$filename\"\n        fi\n\n
      \       # ensure the parent directory where to download the installer always
      exists\n        download_dir=`dirname $download_filename`\n        (umask 077
      && mkdir -p $download_dir) || exit 1\n\n        # check if we have that file
      locally available and if so verify the checksum\n        cached_file_available=\"false\"\n
      \       if test -f $download_filename; then\n          echo \"$download_filename
      already exists, verifiying checksum...\"\n          if do_checksum \"$download_filename\"
      \"$sha256\"; then\n            echo \"checksum compare succeeded, using existing
      file!\"\n            cached_file_available=\"true\"\n          else\n            echo
      \"checksum mismatch, downloading latest version of the file\"\n          fi\n
      \       fi\n\n        # download if no local version of the file available\n
      \       if test \"x$cached_file_available\" != \"xtrue\"; then\n          do_download
      \"$download_url\"  \"$download_filename\"\n          do_checksum \"$download_filename\"
      \"$sha256\" || checksum_mismatch\n        fi\n\n        ############\n        #
      end of fetch_package.sh\n        ############\n\n\n        # install_package.sh\n
      \       ############\n        # Installs a package and removed the temp directory.\n
      \       #\n        # Inputs:\n        # $download_filename: Name of the file
      to be installed.\n        # $filetype: Type of the file to be installed.\n        #
      $version: The version requested. Used only for warning user if not set.\n        ############\n\n
      \       if test \"x$version\" = \"x\"; then\n          echo\n          echo
      \"WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING\"\n
      \         echo\n          echo \"You are installing an omnibus package without
      a version pin.  If you are installing\"\n          echo \"on production servers
      via an automated process this is DANGEROUS and you will\"\n          echo \"be
      upgraded without warning on new releases, even to new major releases.\"\n          echo
      \"Letting the version float is only appropriate in desktop, test, development
      or\"\n          echo \"CI/CD environments.\"\n          echo\n          echo
      \"WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING\"\n
      \         echo\n        fi\n\n        install_file $filetype \"$download_filename\"\n\n
      \       if test \"x$tmp_dir\" != \"x\"; then\n          rm -r \"$tmp_dir\"\n
      \       fi\n\n        ############\n        # end of install_package.sh\n        ############\n\n
      \       EOL\n        chmod +x /tmp/chef-installer.sh\n        sudo -E /tmp/chef-installer.sh)\n
      \              ubuntu 14.04 x86_64\n               downloading http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\n
      \                to file /tmp/install.sh.1359/chef_12.13.21+20160802231230-1_amd64.deb\n
      \              trying wget...\n               Comparing checksum with sha256sum...\n
      \              Installing chef 12.13.21+20160802231230\n               installing
      with dpkg...\n               Selecting previously unselected package chef.\n
      \              Waited 35/300s for instance <i-1b55cab4> to become ready.\n               (Reading
      database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading
      database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading
      database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading
      database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading
      database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading
      database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading
      database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading
      database ... 51172 files and directories currently installed.)\n               Preparing
      to unpack .../chef_12.13.21+20160802231230-1_amd64.deb ...\n               Unpacking
      chef (12.13.21+20160802231230-1) ...\n               Setting up chef (12.13.21+20160802231230-1)
      ...\n               Thank you for installing Chef!\n        D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n        sudo_rm=\"sudo
      -E rm\"\n        dirs=\"/tmp/kitchen/clients /tmp/kitchen/cookbooks /tmp/kitchen/data
      /tmp/kitchen/data_bags /tmp/kitchen/encrypted_data_bag_secret /tmp/kitchen/environments
      /tmp/kitchen/roles\"\n        root_path=\"/tmp/kitchen\"\n\n        $sudo_rm
      -rf $dirs\n        mkdir -p $root_path\n        ')\n               Transferring
      files to <git-default-ubuntu-1404>\n        D      TIMING: scp async upload
      (Kitchen::Transport::Ssh)\n               Waited 40/300s for instance <i-1b55cab4>
      to become ready.\n               Waited 45/300s for instance <i-1b55cab4> to
      become ready.\n        D      TIMING: scp async upload (Kitchen::Transport::Ssh)
      took (0m9.72s)\n        D      Transfer complete\n        D      Attempting
      to execute command - try 1 of 1.\n        D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n        sudo -E
      /opt/chef/bin/chef-client --local-mode --config /tmp/kitchen/client.rb --log_level
      auto --force-formatter --no-color --json-attributes /tmp/kitchen/dna.json --chef-zero-port
      8889\n        ')\n               Starting Chef Client, version 12.13.21\n               Waited
      50/300s for instance <i-1b55cab4> to become ready.\n               Creating
      a new client identity for git-default-ubuntu-1404 using the validator key.\n
      \              resolving cookbooks for run list: [\"apt\", \"git\"]\n               Synchronizing
      Cookbooks:\n                 - apt (4.0.1)\n                 - git (4.6.0)\n
      \                - compat_resource (12.10.7)\n                 - build-essential
      (6.0.3)\n                 - dmg (2.4.0)\n                 - windows (1.44.1)\n
      \                - yum-epel (0.7.0)\n                 - seven_zip (2.0.1)\n
      \                - mingw (1.2.4)\n                 - chef_handler (1.4.0)\n
      \                - yum (3.11.0)\n               Installing Cookbook Gems:\n
      \              Compiling Cookbooks...\n               [2016-08-03T02:01:26+00:00]
      WARN: Chef::Provider::AptRepository already exists!  Cannot create deprecation
      class for LWRP provider apt_repository from cookbook apt\n               [2016-08-03T02:01:26+00:00]
      WARN: AptRepository already exists!  Deprecation class overwrites Custom resource
      apt_repository from cookbook apt\n               Converging 10 resources\n               Recipe:
      apt::default\n                 * file[/var/lib/apt/periodic/update-success-stamp]
      action nothing (skipped due to action :nothing)\n                 * apt_update[periodic]
      action periodic\n                   - update new lists of packages\n                   *
      directory[/var/lib/apt/periodic] action create (up to date)\n                   *
      directory[/etc/apt/apt.conf.d] action create (up to date)\n                   *
      file[/etc/apt/apt.conf.d/15update-stamp] action create_if_missing (up to date)\n
      \              Waited 55/300s for instance <i-1b55cab4> to become ready.\n                   *
      execute[apt-get -q update] action run\n                     - execute apt-get
      -q update\n\n                 * execute[apt-get update] action nothing (skipped
      due to action :nothing)\n                 * execute[apt-get autoremove] action
      nothing (skipped due to action :nothing)\n                 * execute[apt-get
      autoclean] action nothing (skipped due to action :nothing)\n                 *
      directory[/var/cache/local] action create\n                   - create new directory
      /var/cache/local\n                   - change mode from '' to '0755'\n                   -
      change owner from '' to 'root'\n                   - change group from '' to
      'root'\n                 * directory[/var/cache/local/preseeding] action create\n
      \                  - create new directory /var/cache/local/preseeding\n                   -
      change mode from '' to '0755'\n                   - change owner from '' to
      'root'\n                   - change group from '' to 'root'\n                 *
      template[/etc/apt/apt.conf.d/10recommends] action create\n                   -
      create new file /etc/apt/apt.conf.d/10recommends\n                   - update
      content in file /etc/apt/apt.conf.d/10recommends from none to f41e1d\n                   ---
      /etc/apt/apt.conf.d/10recommends  2016-08-03 02:01:34.322014000 +0000\n                   +++
      /etc/apt/apt.conf.d/.chef-10recommends20160803-1526-3bwt00  2016-08-03 02:01:34.322014000
      +0000\n                   @@ -1 +1,4 @@\n                   +# Managed by Chef\n
      \                  +APT::Install-Recommends \"1\";\n                   +APT::Install-Suggests
      \"0\";\n                   - change mode from '' to '0644'\n                   -
      change owner from '' to 'root'\n                   - change group from '' to
      'root'\n                 * apt_package[apt-transport-https] action install (up
      to date)\n               Recipe: git::package\n                 * git_client[default]
      action install\n               Waited 60/300s for instance <i-1b55cab4> to become
      ready.\n                   * apt_package[default :create git] action install\n
      \                    - install version 1:1.9.1-1ubuntu0.3 of package git\n\n
      \              Starting audit phase\n\n               Finished in 0.00027 seconds
      (files took 0.2393 seconds to load)\n               0 examples, 0 failures\n
      \              Auditing complete\n\n               Running handlers:\n               Running
      handlers complete\n               Chef Client finished, 7/15 resources updated
      in 15 seconds\n        D      Cleaning up local sandbox in /tmp/cheftest/git-default-ubuntu-1404-sandbox-20160803-32371-1dt31m3\n
      \              Finished converging <git-default-ubuntu-1404> (0m38.42s).\n        D
      \     [SSH] shutting previous connection ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n        D      [SSH] closing
      connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n               Waited 65/300s
      for instance <i-1b55cab4> to become ready.\n               Waited 70/300s for
      instance <i-1b55cab4> to become ready.\n               Waited 75/300s for instance
      <i-1b55cab4> to become ready.\n               Waited 80/300s for instance <i-1b55cab4>
      to become ready.\n               Waited 85/300s for instance <i-1b55cab4> to
      become ready.\n               Waited 90/300s for instance <i-1b55cab4> to become
      ready.\n               Waited 95/300s for instance <i-1b55cab4> to become ready.\n
      \       D      Console output: ---\n        2016/08/03 02:01:50Z: EC2ConfigMonitorState:
      0\n        2016/08/03 02:01:50Z: Windows sysprep configuration complete.\n        2016/08/03
      02:01:53Z: AMI Origin Version: 2016.07.26\n        2016/08/03 02:01:53Z: AMI
      Origin Name: Windows_Server-2012-R2_RTM-English-64Bit-Base\n        2016/08/03
      02:01:53Z: OS: Microsoft Windows NT 6.3.9600\n        2016/08/03 02:01:53Z:
      OsVersion: 6.3\n        2016/08/03 02:01:53Z: OsProductName: Windows Server
      2012 R2 Standard\n        2016/08/03 02:01:53Z: OsBuildLabEx: 9600.18378.amd64fre.winblue_ltsb.160611-0600\n
      \       2016/08/03 02:01:53Z: Language: en-US\n        2016/08/03 02:01:53Z:
      TimeZone: Coordinated Universal Time\n        2016/08/03 02:01:53Z: Offset:
      UTC 00:00:00\n        2016/08/03 02:01:53Z: EC2 Agent: Ec2Config service v3.18.1118\n
      \       2016/08/03 02:01:56Z: Message: Waiting for meta-data accessibility...\n
      \       2016/08/03 02:01:56Z: Message: Meta-data is now available.\n        2016/08/03
      02:01:57Z: AMI-ID: ami-2426e944\n        2016/08/03 02:01:57Z: Instance-ID:
      i-1b55cab4\n        2016/08/03 02:01:59Z: Driver: AWS PV Network Device v7.4.2.0\n
      \       2016/08/03 02:01:59Z: Driver: AWS PV Storage Host Adapter v7.4.2.0\n
      \       2016/08/03 02:01:59Z: Ec2SetPassword: Enabled\n        2016/08/03 02:01:59Z:
      RDPCERTIFICATE-SUBJECTNAME: WIN-S80UEUJGJR0\n        2016/08/03 02:01:59Z: RDPCERTIFICATE-THUMBPRINT:
      13A5647F91509F0BCD5959FAC3192B548504422A\n        2016/08/03 02:02:02Z: Username:
      Administrator\n        2016/08/03 02:02:02Z: Password: <Password>\n        tCyeNFWaWBg4OiK8epPxZGWGmqbPP4tIeBpujNR6KOk4Vyx6QFLxWuVDGdydaLoQS683TAaJoiiUOEjon3uKMyH3jPzecZWQdwL78qS29aIeA3nmK7mfyUsYQHA/BXv0ZkzoKfImFO6J4fBTgeFb1i+l9mtlwmgsajiwy7N8VV4TH2nnIVBAid1N6DqkqgCdHBq2BnWrR+3lOULWHEnMNWfp9EN+SwxTSHmtGdrd3TDyMQu5caQltddf8//CuYl/ChfhafkneICPb5O6DyBKUzUWAZyl5iIvPhX9J5VUiTyq6tNkKCkgXWm5PB+Ri0HfFGvaYqAh6NZf/FtzSf1v2A==\n
      \       </Password>\n        2016/08/03 02:02:04Z: Message: Windows is Ready
      to use\n\n               Waited 0/300s for instance <i-1b55cab4> to fetch windows
      admin password.\n               Retrieved Windows password for instance <i-1b55cab4>.\n
      \              EC2 instance <i-1b55cab4> ready.\n        D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      (Write-Host '[WinRM] Established\n        ')\n        D      [WinRM] opening
      remote shell on http://10.194.14.172:5985/wsman\n        D      [WinRM] Waiting
      for output...\n        D      [WinRM] Processing output\n        D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x007f1181e98c90
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><Version N=\\\"protocolversion\\\">2.2</Version><Version
      N=\\\"PSVersion\\\">2.0</Version><Version N=\\\"SerializationVersion\\\">1.1.0.1</Version></MS></Obj>\",
      @destination=1, @type=65538, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n        D      [WinRM]
      Waiting for output...\n        D      [WinRM] Processing output\n        D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x007f1181f349d8
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><Obj N=\\\"ApplicationPrivateData\\\"
      RefId=\\\"1\\\"><TN RefId=\\\"0\\\"><T>System.Management.Automation.PSPrimitiveDictionary</T><T>System.Collections.Hashtable</T><T>System.Object</T></TN><DCT><En><S
      N=\\\"Key\\\">DebugMode</S><I32 N=\\\"Value\\\">1</I32></En><En><S N=\\\"Key\\\">DebugStop</S><B
      N=\\\"Value\\\">false</B></En><En><S N=\\\"Key\\\">PSVersionTable</S><Obj N=\\\"Value\\\"
      RefId=\\\"2\\\"><TNRef RefId=\\\"0\\\" /><DCT><En><S N=\\\"Key\\\">PSVersion</S><Version
      N=\\\"Value\\\">2.0</Version></En><En><S N=\\\"Key\\\">PSCompatibleVersions</S><Obj
      N=\\\"Value\\\" RefId=\\\"3\\\"><TN RefId=\\\"1\\\"><T>System.Version[]</T><T>System.Array</T><T>System.Object</T></TN><LST><Version>1.0</Version><Version>2.0</Version><Version>3.0</Version><Version>4.0</Version></LST></Obj></En><En><S
      N=\\\"Key\\\">BuildVersion</S><Version N=\\\"Value\\\">6.3.9600.17400</Version></En><En><S
      N=\\\"Key\\\">CLRVersion</S><Version N=\\\"Value\\\">4.0.30319.42000</Version></En><En><S
      N=\\\"Key\\\">WSManStackVersion</S><Version N=\\\"Value\\\">3.0</Version></En><En><S
      N=\\\"Key\\\">PSRemotingProtocolVersion</S><Version N=\\\"Value\\\">2.2</Version></En><En><S
      N=\\\"Key\\\">SerializationVersion</S><Version N=\\\"Value\\\">1.1.0.1</Version></En></DCT></Obj></En><En><S
      N=\\\"Key\\\">DebugBreakpointCount</S><I32 N=\\\"Value\\\">0</I32></En></DCT></Obj></MS></Obj>\",
      @destination=1, @type=135177, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n        D      [WinRM]
      Waiting for output...\n        D      [WinRM] Processing output\n        D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x007f1181fefa08
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><I32 N=\\\"RunspaceState\\\">2</I32></MS></Obj>\",
      @destination=1, @type=135173, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n        D      [WinRM]
      remote shell created with shell_id: CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D
      \     [WinRM] Command created for Write-Host '[WinRM] Established\n        '
      with id: EE4C8A9B-BD85-4B8C-BDFD-79A63B57C8C9\n        D      [WinRM] creating
      command_id: EE4C8A9B-BD85-4B8C-BDFD-79A63B57C8C9 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n               [WinRM] Established\n\n        D      [WinRM] cleaning
      up command_id: EE4C8A9B-BD85-4B8C-BDFD-79A63B57C8C9 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] reusing existing connection <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>\n
      \       D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\", :user=>\"administrator\",
      :password=>\"z=7iCL=5rXK\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"z=7iCL=5rXK\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}> (New-Item -Force C:\\chef\\ohai\\hints\\ec2.json -ItemType
      File)\n        D      [WinRM] Command created for New-Item -Force C:\\chef\\ohai\\hints\\ec2.json
      -ItemType File with id: 682872E7-4158-4BF8-8D3E-46B42AE5406F\n        D      [WinRM]
      creating command_id: 682872E7-4158-4BF8-8D3E-46B42AE5406F on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n\n\n                   Directory: C:\\chef\\ohai\\hints\n\n\n               Mode
      \               LastWriteTime     Length Name\n               ----                -------------
      \    ------ ----\n               -a---          8/3/2016   2:02 AM          0
      ec2.json\n\n\n        D      [WinRM] cleaning up command_id: 682872E7-4158-4BF8-8D3E-46B42AE5406F
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      ec2:create
      '10.194.14.172'\n               Finished creating <git-default-windows-windows-2012r2>
      (2m16.45s).\n        -----> Converging <git-default-windows-windows-2012r2>...\n
      \              Preparing files for transfer\n        D      Creating local sandbox
      in /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu\n
      \              Preparing dna.json\n        D      Creating dna.json from {:chef_acceptance=>\"true\",
      :use_system_chef=>\"true\", :run_list=>[\"recipe[git]\"]}\n               Resolving
      cookbook dependencies with Berkshelf 4.3.5...\n        D      Using Berksfile
      from /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile\n
      \              Removing non-cookbook files before transfer\n               Preparing
      validation.pem\n        D      Using a dummy validation.pem\n               Preparing
      client.rb\n        D      Creating client.rb from {:node_name=>\"git-default-windows-windows-2012r2\",
      :checksum_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\checksums\", :file_cache_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\cache\",
      :file_backup_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\backup\", :cookbook_path=>[\"\\#{ENV['TEMP']}\\\\kitchen\\\\cookbooks\",
      \"\\#{ENV['TEMP']}\\\\kitchen\\\\site-cookbooks\"], :data_bag_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\data_bags\",
      :environment_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\environments\", :node_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\nodes\",
      :role_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\roles\", :client_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\clients\",
      :user_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\users\", :validation_key=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\validation.pem\",
      :client_key=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\client.pem\", :chef_server_url=>\"http://127.0.0.1:8889\",
      :encrypted_data_bag_secret=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\encrypted_data_bag_secret\",
      :audit_mode=>\":enabled\", :named_run_list=>{}}\n        D      [WinRM] reusing
      existing connection <{:endpoint=>\"http://10.194.14.172:5985/wsman\", :user=>\"administrator\",
      :password=>\"z=7iCL=5rXK\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"z=7iCL=5rXK\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}>\n        D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      (new-module -name Omnitruck -scriptblock {\n        function Get-PlatformVersion
      {\n          switch -regex ((get-wmiobject win32_operatingsystem).version) {\n
      \           '10\\.0\\.\\d+' {$platform_version = '2012r2'}\n            '6\\.3\\.\\d+'
      \ {$platform_version = '2012r2'}\n            '6\\.2\\.\\d+'  {$platform_version
      = '2012'}\n            '6\\.1\\.\\d+'  {$platform_version = '2008r2'}\n            '6\\.0\\.\\d+'
      \ {$platform_version = '2008'}\n          }\n          return $platform_version\n
      \       }\n\n        function Get-PlatformArchitecture {\n          if ((get-wmiobject
      win32_operatingsystem).osarchitecture -like '64-bit') {\n            $architecture
      = 'x86_64'\n          } else {\n            $architecture = 'i386'\n          }\n
      \         return $architecture\n        }\n\n        function New-Uri {\n          param
      ($baseuri, $newuri)\n\n          try {\n          new-object System.Uri $baseuri,
      $newuri\n          }\n          catch [System.Management.Automation.MethodInvocationException]{\n
      \           Write-Error \"$($_.exception.message)\"\n            throw $_.exception\n
      \         }\n        }\n\n        function Get-WebContent {\n          param
      ($uri, $filepath)\n          $proxy = New-Object -TypeName System.Net.WebProxy\n
      \         $wc = new-object System.Net.WebClient\n          $proxy.Address =
      $env:http_proxy\n          $wc.Proxy = $proxy\n\n          try {\n            if
      ([string]::IsNullOrEmpty($filepath)) {\n              $wc.downloadstring($uri)\n
      \           }\n            else {\n              $wc.downloadfile($uri, $filepath)\n
      \           }\n          }\n          catch {\n            $exception = $_.Exception\n
      \           Write-Host \"There was an error: \"\n            do {\n              Write-Host
      \"`t$($exception.message)\"\n              $exception = $exception.innerexception\n
      \           } while ($exception)\n            throw \"Failed to download from
      $uri.\"\n          }\n        }\n\n        function Test-ProjectPackage {\n
      \         [cmdletbinding()]\n          param ($Path, $Algorithm = 'SHA256',
      $Hash)\n\n          if (-not (get-command get-filehash))   {\n            function
      disposable($o){($o -is [IDisposable]) -and (($o | get-member | foreach-object
      {$_.name}) -contains 'Dispose')}\n            function use($obj, [scriptblock]$sb){try
      {& $sb} catch [exception]{throw $_} finally {if (disposable $obj) {$obj.Dispose()}}
      }\n            function Get-FileHash ($Path, $Algorithm) {\n              $Path
      = (resolve-path $path).providerpath\n              $hash = @{Algorithm = $Algorithm;
      Path = $Path}\n              use ($c = New-Object -TypeName Security.Cryptography.SHA256Managed)
      {\n                use ($in = (gi $path).OpenRead()) {\n                  $hash.Hash
      = ([BitConverter]::ToString($c.ComputeHash($in))).Replace(\"-\", \"\").ToUpper()\n
      \               }\n              }\n              new-object PSObject -Property
      $hash\n            }\n          }\n          Write-Verbose \"Testing the $Algorithm
      hash for $path.\"\n          $ActualHash = (Get-FileHash -Algorithm $Algorithm
      -Path $Path).Hash.ToLower()\n          Write-Verbose \"`tDesired Hash - '$hash'\"\n
      \         Write-Verbose \"`tActual Hash  - '$ActualHash'\"\n          $Valid
      = $ActualHash -eq $Hash\n          if (-not $Valid) {\n            Write-Error
      \"Failed to validate the downloaded installer.  The expected $Algorithm hash
      was '$Hash' and the actual hash was '$ActualHash' for $path\"\n          }\n
      \         return $Valid\n        }\n\n        function Get-ProjectMetadata {\n
      \         <#\n            .SYNOPSIS\n            Get metadata for a Chef Software,
      Inc. project\n            .DESCRIPTION\n            Get metadata for project\n
      \           .EXAMPLE\n            iex (new-object net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1');
      Get-ProjectMetadata -project chef -channel stable\n\n            Gets the download
      url and SHA256 checksum for the latest stable release of Chef.\n            .EXAMPLE\n
      \           iex (irm 'https://omnitruck.chef.io/install.ps1'); Get-ProjectMetadata
      -project chefdk -channel stable -version 0.8.0\n\n            Gets the download
      url, and SHA256 checksum for ChefDK 0.8.0.\n          #>\n          [cmdletbinding()]\n
      \         param (\n            # Base url to retrieve metadata from.\n            [uri]$base_server_uri
      = 'https://omnitruck.chef.io/',\n            [string]\n            # Project
      to install\n            [string]\n            $project = 'chef',\n            #
      Version of the application to install\n            # This parameter is optional,
      if not supplied it will provide the latest version,\n            # and if an
      iteration number is not specified, it will grab the latest available iteration.\n
      \           # Partial version numbers are also acceptable (using v=11\n            #
      will grab the latest 11.x client which matches the other flags).\n            [string]\n
      \           $version,\n            # Release channel to install from\n            $channel
      = 'unstable',\n            # The following legacy switches are just aliases
      for the current channel\n            [switch]\n            $prerelease,\n            [switch]\n
      \           $nightlies,\n            [validateset('auto', 'i386', 'x86_64')]\n
      \           [string]\n            $architecture = 'auto'\n          )\n\n          #
      PowerShell is only on Windows ATM\n          $platform = 'windows'\n          Write-Verbose
      \"Platform: $platform\"\n\n          $platform_version = Get-PlatformVersion\n
      \         Write-Verbose \"Platform Version: $platform_version\"\n\n          if
      ($architecture -eq 'auto') {\n            $architecture = Get-PlatformArchitecture\n
      \         }\n\n          Write-Verbose \"Architecture: $architecture\"\n          Write-Verbose
      \"Project: $project\"\n\n\n            $artifact_info_dir = \"$($env:temp)/artifact_info/mac_os_x/10.9/x86_64\"\n
      \           New-Item -ItemType directory -Path $artifact_info_dir -force\n            New-Item
      -ItemType file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url
      http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.9/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.10/x86_64\"\n            New-Item
      -ItemType directory -Path $artifact_info_dir -force\n            New-Item -ItemType
      file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.10/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.11/x86_64\"\n            New-Item
      -ItemType directory -Path $artifact_info_dir -force\n            New-Item -ItemType
      file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.11/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/ppc64le\"\n            New-Item
      -ItemType directory -Path $artifact_info_dir -force\n            New-Item -ItemType
      file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_ppc64el.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 ac910301f0ed899deb1fe00ab067829dc35e4291ebbde5a5b71a62f020c91699\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 58e06ad2bfe6291b37318eea1b313402753118e863671e28178ea60b82260a7e\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/i686\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/i686\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64le\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64le.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 1f9796dfbe38742d0bf4eced3470b9858569fbe0d74866adf2c4eadc3e24f084\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/i686\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 1a5a4f8046459ba77fddca18ba0c72a5507c78845531c9e14909cd1789288c99\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/i686\"\n            New-Item -ItemType directory
      -Path $artifact_info_dir -force\n            New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 352c4457940eb4788746b419da9aecbfc0139108a942e6457ecc63adf2c21661\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/nexus/7/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/nexus/7/chef-12.13.21+20160802231230-1.nexus7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 96100a31640ebab2ce87aff3928562d1f41ff89fba22b6b91b2e683043005da1\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 f7846f3961813789e4541dc9ec332208af155f5b009c86136dae6a34787cd438\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/i686\"\n            New-Item -ItemType directory
      -Path $artifact_info_dir -force\n            New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 0b1589debc9123b0f842c4e6ac2e541a5d60becb716d59c1f450a3f338c8558c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ios_xr/6/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ios_xr/6/chef-12.13.21+20160802231230-1.ios_xr6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 70245a37184a31d443e56106f0aaafc07f37a5fa9e527bdfdaa407ab5a3dd12a\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 6dc28814efc61c518a85ae1a7f84da52a2329500a41b392c3b545969e07c05cb\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 38c5e33209e69f9a8595aa9186a1bdd36b457b8f69198eb0bf59ef8a80526123\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/i686\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/i686\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/amd64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 e833b3bed62715fd1a83b518ebf8049835edf9aa835129b557a001451ec271e3\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a5b23e1b52741d6f05fcd81485d8879e14b4840801667e153eb83a65abec1968\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/6.1/powerpc\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/6.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/7.1/powerpc\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/7.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/amd64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 8c618c6ba395bc631d59646f052d5e6ebb0fbe8d36db439c81e7524756975973\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/x86_64\"\n            New-Item
      -ItemType directory -Path $artifact_info_dir -force\n            New-Item -ItemType
      file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/x86_64\"\n            New-Item
      -ItemType directory -Path $artifact_info_dir -force\n            New-Item -ItemType
      file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/sparc\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/sparc\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n\n          $artifact_info_for_platform
      = Get-Content \"$($env:temp)/artifact_info/$($platform)/$($platform_version)/$($architecture)/artifact_info\"\n\n
      \         $package_metadata = ($artifact_info_for_platform).trim() -split '\\n'
      |\n            foreach { $hash = @{} } {$key, $value = $_ -split '\\s+'; $hash.Add($key,
      $value)} {$hash}\n\n          Write-Verbose \"Project details: \"\n          foreach
      ($key in $package_metadata.keys) {\n            Write-Verbose \"`t$key = $($package_metadata[$key])\"\n
      \         }\n          $package_metadata\n        }\n\n        function Install-Project
      {\n          <#\n            .SYNOPSIS\n            Install a Chef Software,
      Inc. product\n            .DESCRIPTION\n            Install a Chef Software,
      Inc. product\n            .EXAMPLE\n            iex (new-object net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1');
      Install-Project -project chef -channel stable\n\n            Installs the latest
      stable version of Chef.\n            .EXAMPLE\n            iex (irm 'https://omnitruck.chef.io/install.ps1');
      Install-Project -project chefdk -channel current\n\n            Installs the
      latest integration build of the Chef Development Kit\n          #>\n          [cmdletbinding(SupportsShouldProcess=$true)]\n
      \         param (\n            # Project to install\n            [string]\n
      \           $project = 'chef',\n            # Release channel to install from\n
      \           [validateset('current', 'stable', 'unstable')]\n            [string]\n
      \           $channel = 'stable',\n            # Version of the application to
      install\n            # This parameter is optional, if not supplied it will provide
      the latest version,\n            # and if an iteration number is not specified,
      it will grab the latest available iteration.\n            # Partial version
      numbers are also acceptable (using v=11\n            # will grab the latest
      11.x client which matches the other flags).\n            [string]\n            $version,\n
      \           # Full path for the downloaded installer.\n            [string]\n
      \           $filename,\n            # Full path to the location to download
      the installer\n            [string]\n            $download_directory = $env:temp,\n
      \           # The following legacy switches are just aliases for the current
      channel\n            [switch]\n            $prerelease,\n            [switch]\n
      \           $nightlies,\n            [validateset('auto', 'i386', 'x86_64')]\n
      \           [string]\n            $architecture = 'auto'\n          )\n\n          $package_metadata
      = Get-ProjectMetadata -project $project -channel $channel -version $version
      -prerelease:$prerelease -nightlies:$nightlies -architecture $architecture\n\n
      \         if (-not [string]::IsNullOrEmpty($filename)) {\n            $download_directory
      = split-path $filename\n            $filename = split-path $filename -leaf\n
      \           if ([string]::IsNullOrEmpty($download_directory)) {\n              $download_directory
      = $pwd\n            }\n          }\n          else {\n            $filename
      = ($package_metadata.url -split '/')[-1]\n          }\n          Write-Verbose
      \"Download directory: $download_directory\"\n          Write-Verbose \"Filename:
      $filename\"\n\n          if (-not (test-path $download_directory)) {\n            mkdir
      $download_directory\n          }\n          $download_directory = (resolve-path
      $download_directory).providerpath\n          $download_destination = join-path
      $download_directory $filename\n\n          if ((test-path $download_destination)
      -and\n            (Test-ProjectPackage -Path $download_destination -Algorithm
      'SHA256' -Hash $package_metadata.sha256 -ea SilentlyContinue)){\n            Write-Verbose
      \"Found existing valid installer at $download_destination.\"\n          }\n
      \         else {\n            if ($pscmdlet.ShouldProcess(\"$($package_metadata.url)\",
      \"Download $project\")) {\n              Write-Verbose \"Downloading $project
      from $($package_metadata.url) to $download_destination.\"\n              Get-WebContent
      $package_metadata.url -filepath $download_destination\n            }\n          }\n\n
      \         if ($pscmdlet.ShouldProcess(\"$download_destination\", \"Installing\")){\n
      \           if (Test-ProjectPackage -Path $download_destination -Algorithm 'SHA256'
      -Hash $package_metadata.sha256) {\n              Write-Host \"Installing $project
      from $download_destination\"\n              $installingProject = $True\n              $installAttempts
      = 0\n              while ($installingProject) {\n                $p = Start-Process
      -FilePath \"msiexec\" -ArgumentList \"/qn /i $download_destination\" -Passthru
      -Wait\n                $p.WaitForExit()\n                if ($p.ExitCode -eq
      1618) {\n                  Write-Host \"Another msi install is in progress (exit
      code 1618), retrying ($($installAttempts))...\"\n                  continue\n
      \               } elseif ($p.ExitCode -ne 0) {\n                  throw \"msiexec
      was not successful. Received exit code $($p.ExitCode)\"\n                }\n
      \               $installingProject = $False\n              }\n            }\n
      \           else {\n              throw \"Failed to validate the downloaded
      installer for $project.\"\n            }\n          }\n        }\n        set-alias
      install -value Install-Project\n        export-modulemember -function 'Install-Project','Get-ProjectMetadata'
      -alias 'install'\n\n        }\n\n        install -project chef -version 12.13.21+20160802231230
      -channel unstable\n        )\n        D      [WinRM] Command created for new-module
      -name Omnitruck -scriptblock {\n        function Get-PlatformVersion {\n          switch
      -regex ((get-wmiobject win32_operatingsystem).version) {\n            '10\\.0\\.\\d+'
      {$platform_version = '2012r2'}\n            '6\\.3\\.\\d+'  {$platform_version
      = '2012r2'}\n            '6\\.2\\.\\d+'  {$platform_version = '2012'}\n            '6\\.1\\.\\d+'
      \ {$platform_version = '2008r2'}\n            '6\\.0\\.\\d+'  {$platform_version
      = '2008'}\n          }\n          return $platform_version\n        }\n\n        function
      Get-PlatformArchitecture {\n          if ((get-wmiobject win32_operatingsystem).osarchitecture
      -like '64-bit') {\n            $architecture = 'x86_64'\n          } else {\n
      \           $architecture = 'i386'\n          }\n          return $architecture\n
      \       }\n\n        function New-Uri {\n          param ($baseuri, $newuri)\n\n
      \         try {\n          new-object System.Uri $baseuri, $newuri\n          }\n
      \         catch [System.Management.Automation.MethodInvocationException]{\n
      \           Write-Error \"$($_.exception.message)\"\n            throw $_.exception\n
      \         }\n        }\n\n        function Get-WebContent {\n          param
      ($uri, $filepath)\n          $proxy = New-Object -TypeName System.Net.WebProxy\n
      \         $wc = new-object System.Net.WebClient\n          $proxy.Address =
      $env:http_proxy\n          $wc.Proxy = $proxy\n\n          try {\n            if
      ([string]::IsNullOrEmpty($filepath)) {\n              $wc.downloadstring($uri)\n
      \           }\n            else {\n              $wc.downloadfile($uri, $filepath)\n
      \           }\n          }\n          catch {\n            $exception = $_.Exception\n
      \           Write-Host \"There was an error: \"\n            do {\n              Write-Host
      \"`t$($exception.message)\"\n              $exception = $exception.innerexception\n
      \           } while ($exception)\n            throw \"Failed to download from
      $uri.\"\n          }\n        }\n\n        function Test-ProjectPackage {\n
      \         [cmdletbinding()]\n          param ($Path, $Algorithm = 'SHA256',
      $Hash)\n\n          if (-not (get-command get-filehash))   {\n            function
      disposable($o){($o -is [IDisposable]) -and (($o | get-member | foreach-object
      {$_.name}) -contains 'Dispose')}\n            function use($obj, [scriptblock]$sb){try
      {& $sb} catch [exception]{throw $_} finally {if (disposable $obj) {$obj.Dispose()}}
      }\n            function Get-FileHash ($Path, $Algorithm) {\n              $Path
      = (resolve-path $path).providerpath\n              $hash = @{Algorithm = $Algorithm;
      Path = $Path}\n              use ($c = New-Object -TypeName Security.Cryptography.SHA256Managed)
      {\n                use ($in = (gi $path).OpenRead()) {\n                  $hash.Hash
      = ([BitConverter]::ToString($c.ComputeHash($in))).Replace(\"-\", \"\").ToUpper()\n
      \               }\n              }\n              new-object PSObject -Property
      $hash\n            }\n          }\n          Write-Verbose \"Testing the $Algorithm
      hash for $path.\"\n          $ActualHash = (Get-FileHash -Algorithm $Algorithm
      -Path $Path).Hash.ToLower()\n          Write-Verbose \"`tDesired Hash - '$hash'\"\n
      \         Write-Verbose \"`tActual Hash  - '$ActualHash'\"\n          $Valid
      = $ActualHash -eq $Hash\n          if (-not $Valid) {\n            Write-Error
      \"Failed to validate the downloaded installer.  The expected $Algorithm hash
      was '$Hash' and the actual hash was '$ActualHash' for $path\"\n          }\n
      \         return $Valid\n        }\n\n        function Get-ProjectMetadata {\n
      \         <#\n            .SYNOPSIS\n            Get metadata for a Chef Software,
      Inc. project\n            .DESCRIPTION\n            Get metadata for project\n
      \           .EXAMPLE\n            iex (new-object net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1');
      Get-ProjectMetadata -project chef -channel stable\n\n            Gets the download
      url and SHA256 checksum for the latest stable release of Chef.\n            .EXAMPLE\n
      \           iex (irm 'https://omnitruck.chef.io/install.ps1'); Get-ProjectMetadata
      -project chefdk -channel stable -version 0.8.0\n\n            Gets the download
      url, and SHA256 checksum for ChefDK 0.8.0.\n          #>\n          [cmdletbinding()]\n
      \         param (\n            # Base url to retrieve metadata from.\n            [uri]$base_server_uri
      = 'https://omnitruck.chef.io/',\n            [string]\n            # Project
      to install\n            [string]\n            $project = 'chef',\n            #
      Version of the application to install\n            # This parameter is optional,
      if not supplied it will provide the latest version,\n            # and if an
      iteration number is not specified, it will grab the latest available iteration.\n
      \           # Partial version numbers are also acceptable (using v=11\n            #
      will grab the latest 11.x client which matches the other flags).\n            [string]\n
      \           $version,\n            # Release channel to install from\n            $channel
      = 'unstable',\n            # The following legacy switches are just aliases
      for the current channel\n            [switch]\n            $prerelease,\n            [switch]\n
      \           $nightlies,\n            [validateset('auto', 'i386', 'x86_64')]\n
      \           [string]\n            $architecture = 'auto'\n          )\n\n          #
      PowerShell is only on Windows ATM\n          $platform = 'windows'\n          Write-Verbose
      \"Platform: $platform\"\n\n          $platform_version = Get-PlatformVersion\n
      \         Write-Verbose \"Platform Version: $platform_version\"\n\n          if
      ($architecture -eq 'auto') {\n            $architecture = Get-PlatformArchitecture\n
      \         }\n\n          Write-Verbose \"Architecture: $architecture\"\n          Write-Verbose
      \"Project: $project\"\n\n\n            $artifact_info_dir = \"$($env:temp)/artifact_info/mac_os_x/10.9/x86_64\"\n
      \           New-Item -ItemType directory -Path $artifact_info_dir -force\n            New-Item
      -ItemType file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url
      http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.9/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.10/x86_64\"\n            New-Item
      -ItemType directory -Path $artifact_info_dir -force\n            New-Item -ItemType
      file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.10/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.11/x86_64\"\n            New-Item
      -ItemType directory -Path $artifact_info_dir -force\n            New-Item -ItemType
      file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.11/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/ppc64le\"\n            New-Item
      -ItemType directory -Path $artifact_info_dir -force\n            New-Item -ItemType
      file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_ppc64el.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 ac910301f0ed899deb1fe00ab067829dc35e4291ebbde5a5b71a62f020c91699\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 58e06ad2bfe6291b37318eea1b313402753118e863671e28178ea60b82260a7e\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/i686\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/i686\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64le\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64le.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 1f9796dfbe38742d0bf4eced3470b9858569fbe0d74866adf2c4eadc3e24f084\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/i686\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 1a5a4f8046459ba77fddca18ba0c72a5507c78845531c9e14909cd1789288c99\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/i686\"\n            New-Item -ItemType directory
      -Path $artifact_info_dir -force\n            New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 352c4457940eb4788746b419da9aecbfc0139108a942e6457ecc63adf2c21661\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/nexus/7/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/nexus/7/chef-12.13.21+20160802231230-1.nexus7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 96100a31640ebab2ce87aff3928562d1f41ff89fba22b6b91b2e683043005da1\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 f7846f3961813789e4541dc9ec332208af155f5b009c86136dae6a34787cd438\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/i686\"\n            New-Item -ItemType directory
      -Path $artifact_info_dir -force\n            New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 0b1589debc9123b0f842c4e6ac2e541a5d60becb716d59c1f450a3f338c8558c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ios_xr/6/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ios_xr/6/chef-12.13.21+20160802231230-1.ios_xr6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 70245a37184a31d443e56106f0aaafc07f37a5fa9e527bdfdaa407ab5a3dd12a\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 6dc28814efc61c518a85ae1a7f84da52a2329500a41b392c3b545969e07c05cb\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 38c5e33209e69f9a8595aa9186a1bdd36b457b8f69198eb0bf59ef8a80526123\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/i686\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/i686\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/amd64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 e833b3bed62715fd1a83b518ebf8049835edf9aa835129b557a001451ec271e3\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 a5b23e1b52741d6f05fcd81485d8879e14b4840801667e153eb83a65abec1968\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/6.1/powerpc\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/6.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/7.1/powerpc\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/7.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/i386\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/amd64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 8c618c6ba395bc631d59646f052d5e6ebb0fbe8d36db439c81e7524756975973\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/x86_64\"\n            New-Item
      -ItemType directory -Path $artifact_info_dir -force\n            New-Item -ItemType
      file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/x86_64\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/x86_64\"\n            New-Item
      -ItemType directory -Path $artifact_info_dir -force\n            New-Item -ItemType
      file \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/sparc\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n            $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/sparc\"\n            New-Item -ItemType
      directory -Path $artifact_info_dir -force\n            New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n            \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n            \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n\n          $artifact_info_for_platform
      = Get-Content \"$($env:temp)/artifact_info/$($platform)/$($platform_version)/$($architecture)/artifact_info\"\n\n
      \         $package_metadata = ($artifact_info_for_platform).trim() -split '\\n'
      |\n            foreach { $hash = @{} } {$key, $value = $_ -split '\\s+'; $hash.Add($key,
      $value)} {$hash}\n\n          Write-Verbose \"Project details: \"\n          foreach
      ($key in $package_metadata.keys) {\n            Write-Verbose \"`t$key = $($package_metadata[$key])\"\n
      \         }\n          $package_metadata\n        }\n\n        function Install-Project
      {\n          <#\n            .SYNOPSIS\n            Install a Chef Software,
      Inc. product\n            .DESCRIPTION\n            Install a Chef Software,
      Inc. product\n            .EXAMPLE\n            iex (new-object net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1');
      Install-Project -project chef -channel stable\n\n            Installs the latest
      stable version of Chef.\n            .EXAMPLE\n            iex (irm 'https://omnitruck.chef.io/install.ps1');
      Install-Project -project chefdk -channel current\n\n            Installs the
      latest integration build of the Chef Development Kit\n          #>\n          [cmdletbinding(SupportsShouldProcess=$true)]\n
      \         param (\n            # Project to install\n            [string]\n
      \           $project = 'chef',\n            # Release channel to install from\n
      \           [validateset('current', 'stable', 'unstable')]\n            [string]\n
      \           $channel = 'stable',\n            # Version of the application to
      install\n            # This parameter is optional, if not supplied it will provide
      the latest version,\n            # and if an iteration number is not specified,
      it will grab the latest available iteration.\n            # Partial version
      numbers are also acceptable (using v=11\n            # will grab the latest
      11.x client which matches the other flags).\n            [string]\n            $version,\n
      \           # Full path for the downloaded installer.\n            [string]\n
      \           $filename,\n            # Full path to the location to download
      the installer\n            [string]\n            $download_directory = $env:temp,\n
      \           # The following legacy switches are just aliases for the current
      channel\n            [switch]\n            $prerelease,\n            [switch]\n
      \           $nightlies,\n            [validateset('auto', 'i386', 'x86_64')]\n
      \           [string]\n            $architecture = 'auto'\n          )\n\n          $package_metadata
      = Get-ProjectMetadata -project $project -channel $channel -version $version
      -prerelease:$prerelease -nightlies:$nightlies -architecture $architecture\n\n
      \         if (-not [string]::IsNullOrEmpty($filename)) {\n            $download_directory
      = split-path $filename\n            $filename = split-path $filename -leaf\n
      \           if ([string]::IsNullOrEmpty($download_directory)) {\n              $download_directory
      = $pwd\n            }\n          }\n          else {\n            $filename
      = ($package_metadata.url -split '/')[-1]\n          }\n          Write-Verbose
      \"Download directory: $download_directory\"\n          Write-Verbose \"Filename:
      $filename\"\n\n          if (-not (test-path $download_directory)) {\n            mkdir
      $download_directory\n          }\n          $download_directory = (resolve-path
      $download_directory).providerpath\n          $download_destination = join-path
      $download_directory $filename\n\n          if ((test-path $download_destination)
      -and\n            (Test-ProjectPackage -Path $download_destination -Algorithm
      'SHA256' -Hash $package_metadata.sha256 -ea SilentlyContinue)){\n            Write-Verbose
      \"Found existing valid installer at $download_destination.\"\n          }\n
      \         else {\n            if ($pscmdlet.ShouldProcess(\"$($package_metadata.url)\",
      \"Download $project\")) {\n              Write-Verbose \"Downloading $project
      from $($package_metadata.url) to $download_destination.\"\n              Get-WebContent
      $package_metadata.url -filepath $download_destination\n            }\n          }\n\n
      \         if ($pscmdlet.ShouldProcess(\"$download_destination\", \"Installing\")){\n
      \           if (Test-ProjectPackage -Path $download_destination -Algorithm 'SHA256'
      -Hash $package_metadata.sha256) {\n              Write-Host \"Installing $project
      from $download_destination\"\n              $installingProject = $True\n              $installAttempts
      = 0\n              while ($installingProject) {\n                $p = Start-Process
      -FilePath \"msiexec\" -ArgumentList \"/qn /i $download_destination\" -Passthru
      -Wait\n                $p.WaitForExit()\n                if ($p.ExitCode -eq
      1618) {\n                  Write-Host \"Another msi install is in progress (exit
      code 1618), retrying ($($installAttempts))...\"\n                  continue\n
      \               } elseif ($p.ExitCode -ne 0) {\n                  throw \"msiexec
      was not successful. Received exit code $($p.ExitCode)\"\n                }\n
      \               $installingProject = $False\n              }\n            }\n
      \           else {\n              throw \"Failed to validate the downloaded
      installer for $project.\"\n            }\n          }\n        }\n        set-alias
      install -value Install-Project\n        export-modulemember -function 'Install-Project','Get-ProjectMetadata'
      -alias 'install'\n\n        }\n\n        install -project chef -version 12.13.21+20160802231230
      -channel unstable\n         with id: 0BB63762-BA47-4D3B-82E8-97C4F7DEB299\n
      \       D      [WinRM] creating command_id: 0BB63762-BA47-4D3B-82E8-97C4F7DEB299
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Waiting
      for output...\n        D      [WinRM] Processing output\n\n               ModuleType
      Version    Name                                ExportedCommands\n               ----------
      -------    ----                                ----------------\n               Script
      \    0.0        Omnitruck                           {Get-ProjectMetada...\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] Waiting for output...\n        D      [WinRM]
      Processing output\n               Installing chef from C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\chef-client-12.13.21+20160802231230-1-x64.msi\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] retrying
      receive request after timeout\n        D      [WinRM] Processing output\n\n\n
      \       D      [WinRM] cleaning up command_id: 0BB63762-BA47-4D3B-82E8-97C4F7DEB299
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($dirs = @(\"$env:TEMP\\kitchen\\clients\", \"$env:TEMP\\kitchen\\cookbooks\",
      \"$env:TEMP\\kitchen\\data\", \"$env:TEMP\\kitchen\\data_bags\", \"$env:TEMP\\kitchen\\encrypted_data_bag_secret\",
      \"$env:TEMP\\kitchen\\environments\", \"$env:TEMP\\kitchen\\roles\")\n        $root_path
      = \"$env:TEMP\\kitchen\"\n\n        Function Delete-AllDirs($dirs) {\n          $dirs
      | ForEach-Object {\n            if (Test-Path ($path = Unresolve-Path $_)) {
      Remove-Item $path -Recurse -Force }\n          }\n        }\n\n        Function
      Unresolve-Path($p) {\n          if ($p -eq $null) { return $null }\n          else
      { return $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($p)
      }\n        }\n\n        Function Make-RootPath($p) {\n          $p = Unresolve-Path
      $p\n          if (-Not (Test-Path $p)) { New-Item $p -ItemType directory | Out-Null
      }\n        }\n\n        Delete-AllDirs $dirs\n        Make-RootPath $root_path\n
      \       )\n        D      [WinRM] Command created for $dirs = @(\"$env:TEMP\\kitchen\\clients\",
      \"$env:TEMP\\kitchen\\cookbooks\", \"$env:TEMP\\kitchen\\data\", \"$env:TEMP\\kitchen\\data_bags\",
      \"$env:TEMP\\kitchen\\encrypted_data_bag_secret\", \"$env:TEMP\\kitchen\\environments\",
      \"$env:TEMP\\kitchen\\roles\")\n        $root_path = \"$env:TEMP\\kitchen\"\n\n
      \       Function Delete-AllDirs($dirs) {\n          $dirs | ForEach-Object {\n
      \           if (Test-Path ($path = Unresolve-Path $_)) { Remove-Item $path -Recurse
      -Force }\n          }\n        }\n\n        Function Unresolve-Path($p) {\n
      \         if ($p -eq $null) { return $null }\n          else { return $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($p)
      }\n        }\n\n        Function Make-RootPath($p) {\n          $p = Unresolve-Path
      $p\n          if (-Not (Test-Path $p)) { New-Item $p -ItemType directory | Out-Null
      }\n        }\n\n        Delete-AllDirs $dirs\n        Make-RootPath $root_path\n
      \        with id: 54297A10-98A6-4E65-8514-5208FC20AAB9\n        D      [WinRM]
      creating command_id: 54297A10-98A6-4E65-8514-5208FC20AAB9 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: 54297A10-98A6-4E65-8514-5208FC20AAB9
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n               Transferring
      files to <git-default-windows-windows-2012r2>\n        D      creating hash
      for file $env:TEMP\\kitchen\n        D      creating hash for file $env:TEMP\\kitchen\n
      \       D      creating hash for directory $env:TEMP\\kitchen\n        D      Populating
      files\n        D      === All files added.\n        D      creating hash for
      file $env:TEMP\\kitchen\n        D      creating hash for directory $env:TEMP\\kitchen\n
      \       D      Populating files\n        D      +++ Adding apt/README.md\n        D
      \     +++ Adding apt/attributes/default.rb\n        D      +++ Adding apt/files/default/15update-stamp\n
      \       D      +++ Adding apt/files/default/apt-proxy-v2.conf\n        D      +++
      Adding apt/libraries/apt_update.rb\n        D      +++ Adding apt/libraries/helpers.rb\n
      \       D      +++ Adding apt/libraries/matchers.rb\n        D      +++ Adding
      apt/libraries/network.rb\n        D      +++ Adding apt/metadata.json\n        D
      \     +++ Adding apt/providers/preference.rb\n        D      +++ Adding apt/providers/repository.rb\n
      \       D      +++ Adding apt/recipes/cacher-client.rb\n        D      +++ Adding
      apt/recipes/cacher-ng.rb\n        D      +++ Adding apt/recipes/default.rb\n
      \       D      +++ Adding apt/recipes/unattended-upgrades.rb\n        D      +++
      Adding apt/resources/preference.rb\n        D      +++ Adding apt/resources/repository.rb\n
      \       D      +++ Adding apt/templates/default/01proxy.erb\n        D      +++
      Adding apt/templates/default/10recommends.erb\n        D      +++ Adding apt/templates/default/20auto-upgrades.erb\n
      \       D      +++ Adding apt/templates/default/50unattended-upgrades.erb\n
      \       D      +++ Adding apt/templates/default/acng.conf.erb\n        D      +++
      Adding apt/templates/default/unattended-upgrades.seed.erb\n        D      +++
      Adding build-essential/README.md\n        D      +++ Adding build-essential/attributes/default.rb\n
      \       D      +++ Adding build-essential/libraries/matchers.rb\n        D      +++
      Adding build-essential/libraries/xcode_command_line_tools.rb\n        D      +++
      Adding build-essential/metadata.json\n        D      +++ Adding build-essential/recipes/_windows.rb\n
      \       D      +++ Adding build-essential/recipes/default.rb\n        D      +++
      Adding build-essential/resources/build_essential.rb\n        D      +++ Adding
      chef_handler/README.md\n        D      +++ Adding chef_handler/attributes/default.rb\n
      \       D      +++ Adding chef_handler/files/default/handlers/README\n        D
      \     +++ Adding chef_handler/libraries/helpers.rb\n        D      +++ Adding
      chef_handler/libraries/matchers.rb\n        D      +++ Adding chef_handler/metadata.json\n
      \       D      +++ Adding chef_handler/providers/default.rb\n        D      +++
      Adding chef_handler/recipes/default.rb\n        D      +++ Adding chef_handler/recipes/json_file.rb\n
      \       D      +++ Adding chef_handler/resources/default.rb\n        D      +++
      Adding compat_resource/README.md\n        D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/mixin/properties.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/property.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/recipe.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/resource/lwrp_base.rb\n
      \       D      +++ Adding compat_resource/files/lib/chef_compat/resource.rb\n
      \       D      +++ Adding compat_resource/files/lib/compat_resource/gemspec.rb\n
      \       D      +++ Adding compat_resource/files/lib/compat_resource/version.rb\n
      \       D      +++ Adding compat_resource/files/lib/compat_resource.rb\n        D
      \     +++ Adding compat_resource/files/spec/cookbook_spec.rb\n        D      +++
      Adding compat_resource/files/spec/data/Gemfile\n        D      +++ Adding compat_resource/files/spec/data/config.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/metadata.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/providers/resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/recipes/default.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/resources/resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/future/libraries/future_custom_resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/future/libraries/super_properties.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/future/metadata.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/future/recipes/declare_resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/future/resources/resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/future/resources/super_resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/libraries/normal_hwrp.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/metadata.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/providers/resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/resources/resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/libraries/normal_hwrp.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/metadata.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/providers/resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/recipes/declare_resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/resources/resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/notifications/metadata.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/notifications/recipes/default.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/notifications/resources/resource.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/test/metadata.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/test/recipes/default.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/cookbooks/test/recipes/test.rb\n
      \       D      +++ Adding compat_resource/files/spec/data/nodes/ettores-mbp.lan.json\n
      \       D      +++ Adding compat_resource/files/spec/spec_helper.rb\n        D
      \     +++ Adding compat_resource/libraries/autoload.rb\n        D      +++ Adding
      compat_resource/metadata.json\n        D      +++ Adding dmg/README.md\n        D
      \     +++ Adding dmg/attributes/default.rb\n        D      +++ Adding dmg/libraries/matchers.rb\n
      \       D      +++ Adding dmg/metadata.json\n        D      +++ Adding dmg/providers/package.rb\n
      \       D      +++ Adding dmg/recipes/default.rb\n        D      +++ Adding
      dmg/resources/package.rb\n        D      +++ Adding freebsd/README.md\n        D
      \     +++ Adding freebsd/attributes/default.rb\n        D      +++ Adding freebsd/metadata.json\n
      \       D      +++ Adding freebsd/providers/port_options.rb\n        D      +++
      Adding freebsd/recipes/default.rb\n        D      +++ Adding freebsd/recipes/pkgng.rb\n
      \       D      +++ Adding freebsd/recipes/portsnap.rb\n        D      +++ Adding
      freebsd/resources/port_options.rb\n        D      +++ Adding git/README.md\n
      \       D      +++ Adding git/attributes/default.rb\n        D      +++ Adding
      git/libraries/helpers.rb\n        D      +++ Adding git/libraries/matchers.rb\n
      \       D      +++ Adding git/libraries/provider_git_client.rb\n        D      +++
      Adding git/libraries/provider_git_client_osx.rb\n        D      +++ Adding git/libraries/provider_git_client_package.rb\n
      \       D      +++ Adding git/libraries/provider_git_client_source.rb\n        D
      \     +++ Adding git/libraries/provider_git_client_windows.rb\n        D      +++
      Adding git/libraries/provider_git_service.rb\n        D      +++ Adding git/libraries/provider_git_service_xinetd.rb\n
      \       D      +++ Adding git/libraries/resource_git_client.rb\n        D      +++
      Adding git/libraries/resource_git_service.rb\n        D      +++ Adding git/libraries/z_provider_mapping.rb\n
      \       D      +++ Adding git/metadata.json\n        D      +++ Adding git/providers/config.rb\n
      \       D      +++ Adding git/recipes/default.rb\n        D      +++ Adding
      git/recipes/package.rb\n        D      +++ Adding git/recipes/server.rb\n        D
      \     +++ Adding git/recipes/source.rb\n        D      +++ Adding git/recipes/windows.rb\n
      \       D      +++ Adding git/resources/config.rb\n        D      +++ Adding
      git/templates/default/git-xinetd.d.erb\n        D      +++ Adding git/templates/default/sv-git-daemon-log-run.erb\n
      \       D      +++ Adding git/templates/default/sv-git-daemon-run.erb\n        D
      \     +++ Adding git_test/metadata.json\n        D      +++ Adding git_test/recipes/default.rb\n
      \       D      +++ Adding mingw/README.md\n        D      +++ Adding mingw/files/default/bash.bat\n
      \       D      +++ Adding mingw/files/default/custom-upgrade.sh\n        D      +++
      Adding mingw/files/default/custom_prefix.sh\n        D      +++ Adding mingw/files/default/pthread.h\n
      \       D      +++ Adding mingw/files/default/time.h\n        D      +++ Adding
      mingw/libraries/_helper.rb\n        D      +++ Adding mingw/metadata.json\n
      \       D      +++ Adding mingw/recipes/default.rb\n        D      +++ Adding
      mingw/resources/get.rb\n        D      +++ Adding mingw/resources/msys2_package.rb\n
      \       D      +++ Adding mingw/resources/tdm_gcc.rb\n        D      +++ Adding
      seven_zip/README.md\n        D      +++ Adding seven_zip/attributes/default.rb\n
      \       D      +++ Adding seven_zip/metadata.json\n        D      +++ Adding
      seven_zip/providers/archive.rb\n        D      +++ Adding seven_zip/recipes/default.rb\n
      \       D      +++ Adding seven_zip/resources/archive.rb\n        D      +++
      Adding windows/README.md\n        D      +++ Adding windows/attributes/default.rb\n
      \       D      +++ Adding windows/files/default/handlers/windows_reboot_handler.rb\n
      \       D      +++ Adding windows/libraries/feature_base.rb\n        D      +++
      Adding windows/libraries/matchers.rb\n        D      +++ Adding windows/libraries/powershell_helper.rb\n
      \       D      +++ Adding windows/libraries/powershell_out.rb\n        D      +++
      Adding windows/libraries/registry_helper.rb\n        D      +++ Adding windows/libraries/version.rb\n
      \       D      +++ Adding windows/libraries/windows_architecture_helper.rb\n
      \       D      +++ Adding windows/libraries/windows_helper.rb\n        D      +++
      Adding windows/libraries/windows_package.rb\n        D      +++ Adding windows/libraries/windows_privileged.rb\n
      \       D      +++ Adding windows/libraries/wmi_helper.rb\n        D      +++
      Adding windows/metadata.json\n        D      +++ Adding windows/providers/auto_run.rb\n
      \       D      +++ Adding windows/providers/batch.rb\n        D      +++ Adding
      windows/providers/certificate.rb\n        D      +++ Adding windows/providers/certificate_binding.rb\n
      \       D      +++ Adding windows/providers/feature_dism.rb\n        D      +++
      Adding windows/providers/feature_powershell.rb\n        D      +++ Adding windows/providers/feature_servermanagercmd.rb\n
      \       D      +++ Adding windows/providers/font.rb\n        D      +++ Adding
      windows/providers/http_acl.rb\n        D      +++ Adding windows/providers/pagefile.rb\n
      \       D      +++ Adding windows/providers/path.rb\n        D      +++ Adding
      windows/providers/printer.rb\n        D      +++ Adding windows/providers/printer_port.rb\n
      \       D      +++ Adding windows/providers/reboot.rb\n        D      +++ Adding
      windows/providers/registry.rb\n        D      +++ Adding windows/providers/shortcut.rb\n
      \       D      +++ Adding windows/providers/task.rb\n        D      +++ Adding
      windows/providers/zipfile.rb\n        D      +++ Adding windows/recipes/default.rb\n
      \       D      +++ Adding windows/recipes/reboot_handler.rb\n        D      +++
      Adding windows/resources/auto_run.rb\n        D      +++ Adding windows/resources/batch.rb\n
      \       D      +++ Adding windows/resources/certificate.rb\n        D      +++
      Adding windows/resources/certificate_binding.rb\n        D      +++ Adding windows/resources/feature.rb\n
      \       D      +++ Adding windows/resources/font.rb\n        D      +++ Adding
      windows/resources/http_acl.rb\n        D      +++ Adding windows/resources/pagefile.rb\n
      \       D      +++ Adding windows/resources/path.rb\n        D      +++ Adding
      windows/resources/printer.rb\n        D      +++ Adding windows/resources/printer_port.rb\n
      \       D      +++ Adding windows/resources/reboot.rb\n        D      +++ Adding
      windows/resources/registry.rb\n        D      +++ Adding windows/resources/shortcut.rb\n
      \       D      +++ Adding windows/resources/task.rb\n        D      +++ Adding
      windows/resources/zipfile.rb\n        D      +++ Adding yum/README.md\n        D
      \     +++ Adding yum/attributes/main.rb\n        D      +++ Adding yum/libraries/matchers.rb\n
      \       D      +++ Adding yum/metadata.json\n        D      +++ Adding yum/providers/globalconfig.rb\n
      \       D      +++ Adding yum/providers/repository.rb\n        D      +++ Adding
      yum/recipes/default.rb\n        D      +++ Adding yum/recipes/dnf_yum_compat.rb\n
      \       D      +++ Adding yum/resources/globalconfig.rb\n        D      +++
      Adding yum/resources/repository.rb\n        D      +++ Adding yum/templates/default/main.erb\n
      \       D      +++ Adding yum/templates/default/repo.erb\n        D      +++
      Adding yum-epel/README.md\n        D      +++ Adding yum-epel/attributes/default.rb\n
      \       D      +++ Adding yum-epel/attributes/epel-debuginfo.rb\n        D      +++
      Adding yum-epel/attributes/epel-source.rb\n        D      +++ Adding yum-epel/attributes/epel-testing-debuginfo.rb\n
      \       D      +++ Adding yum-epel/attributes/epel-testing-source.rb\n        D
      \     +++ Adding yum-epel/attributes/epel-testing.rb\n        D      +++ Adding
      yum-epel/attributes/epel.rb\n        D      +++ Adding yum-epel/metadata.json\n
      \       D      +++ Adding yum-epel/recipes/default.rb\n        D      === All
      files added.\n        D      Running check_files.ps1\n        D      [WinRM]
      Command created for $hash_file = @{\n          \"54ce43514c1dfebadb3cf9347d7c4b78\"
      = @{\n            \"target\" = \"$env:TEMP\\kitchen\";\n            \"src_basename\"
      = \"dna.json\";\n            \"dst\" = \"$env:TEMP\\kitchen\"\n          };\n
      \         \"0683ca8a80a8b4e614fa1057f4aafe38\" = @{\n            \"target\"
      = \"$env:TEMP\\kitchen\";\n            \"src_basename\" = \"client.rb\";\n            \"dst\"
      = \"$env:TEMP\\kitchen\"\n          };\n          \"76cdb2bad9582d23c1f6f4d868218d6c\"
      = @{\n            \"target\" = \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\";\n
      \           \"src_basename\" = \"cache\";\n            \"dst\" = \"$env:TEMP\\kitchen\\cache\"\n
      \         };\n          \"49abb94825cb80b9a9cd59e5f76daf4a\" = @{\n            \"target\"
      = \"$env:TEMP\\kitchen\";\n            \"src_basename\" = \"validation.pem\";\n
      \           \"dst\" = \"$env:TEMP\\kitchen\"\n          };\n          \"5bac8b06fc48d51e72b8760b38d59b0f\"
      = @{\n            \"target\" = \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\";\n
      \           \"src_basename\" = \"cookbooks\";\n            \"dst\" = \"$env:TEMP\\kitchen\\cookbooks\"\n
      \         }\n        }\n\n        Function Cleanup($disposable) {\n          if
      (($disposable -ne $null) -and ($disposable.GetType().GetMethod(\"Dispose\")
      -ne $null)) {\n            $disposable.Dispose()\n          }\n        }\n\n
      \       Function Check-Files($h) {\n          return $h.GetEnumerator() | ForEach-Object
      {\n            $dst = Unresolve-Path $_.Value.target\n            $dst_changed
      = $false\n            if(Test-Path $dst -PathType Container) {\n              $dst_changed
      = $true\n              $dst = Join-Path $dst $_.Value.src_basename\n            }\n
      \           New-Object psobject -Property @{\n              chk_exists = ($exists
      = Test-Path $dst -PathType Leaf)\n              src_md5 = ($sMd5 = $_.Key)\n
      \             dst_md5 = ($dMd5 = if ($exists) { Get-MD5Sum $dst } else { $null
      })\n              chk_dirty = ($dirty = if ($sMd5 -ne $dMd5) { $true } else
      { $false })\n              verifies = if ($dirty -eq $false) { $true } else
      { $false }\n              target_is_folder = $dst_changed\n            }\n          }
      | Select-Object -Property chk_exists,src_md5,dst_md5,chk_dirty,verifies,target_is_folder\n
      \       }\n\n        Function Get-MD5Sum($src) {\n          Try {\n            $c
      = [System.Security.Cryptography.MD5]::Create()\n            $bytes = $c.ComputeHash(($in
      = (Get-Item $src).OpenRead()))\n            return ([System.BitConverter]::ToString($bytes)).Replace(\"-\",
      \"\").ToLower()\n          }\n          Finally {\n            Cleanup $c\n
      \           Cleanup $in\n          }\n        }\n\n        Function Unresolve-Path($path)
      {\n          if ($path -eq $null) {\n            return $null\n          }\n
      \         else {\n            return $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($path)\n
      \         }\n        }\n\n        Check-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \        with id: 4EDE68EB-53B5-497B-B5B2-53ECC79740FC\n        D      [WinRM]
      creating command_id: 4EDE68EB-53B5-497B-B5B2-53ECC79740FC on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: 4EDE68EB-53B5-497B-B5B2-53ECC79740FC
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      Parsing CSV
      Response\n        D      \"chk_exists\",\"src_md5\",\"dst_md5\",\"chk_dirty\",\"verifies\",\"target_is_folder\"\n
      \       \"False\",\"76cdb2bad9582d23c1f6f4d868218d6c\",,\"True\",\"False\",\"False\"\n
      \       \"False\",\"0683ca8a80a8b4e614fa1057f4aafe38\",,\"True\",\"False\",\"True\"\n
      \       \"False\",\"49abb94825cb80b9a9cd59e5f76daf4a\",,\"True\",\"False\",\"True\"\n
      \       \"False\",\"5bac8b06fc48d51e72b8760b38d59b0f\",,\"True\",\"False\",\"False\"\n
      \       \"False\",\"54ce43514c1dfebadb3cf9347d7c4b78\",,\"True\",\"False\",\"True\"\n\n
      \       D      Uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/dna.json
      to $env:TEMP\\kitchen/dna.json\n        D      [WinRM] Command created for             $parent
      = Split-Path \"$env:TEMP\\kitchen/dna.json\"\n                    if(!(Test-path
      $parent)) { mkdir $parent | Out-Null}\n                    $fileStream = New-Object
      -TypeName System.IO.FileStream -ArgumentList @(\n                        \"$env:TEMP\\kitchen/dna.json\",\n
      \                       [system.io.filemode]::Create,\n                        [System.io.FileAccess]::Write,\n
      \                       [System.IO.FileShare]::ReadWrite\n                    )\n
      \        with id: E97FFE31-1238-4134-8AC0-AC78D3775D5C\n        D      [WinRM]
      creating command_id: E97FFE31-1238-4134-8AC0-AC78D3775D5C on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: E97FFE31-1238-4134-8AC0-AC78D3775D5C
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('eyJjaGVmX2FjY2VwdGFuY2UiOiJ0cnVlIiwidXNlX3N5c3RlbV9jaGVmIjoidHJ1ZSIsInJ1bl9saXN0IjpbInJlY2lwZVtnaXRdIl19')\n
      \                   $fileStream.Write($bytes, 0, $bytes.length)\n         with
      id: 966DF6BB-AF87-4511-B971-3C18D4535B3B\n        D      [WinRM] creating command_id:
      966DF6BB-AF87-4511-B971-3C18D4535B3B on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: 966DF6BB-AF87-4511-B971-3C18D4535B3B
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Command
      created for $fileStream.Dispose() with id: 75A522CB-2792-4965-968C-6485AD9487FB\n
      \       D      [WinRM] creating command_id: 75A522CB-2792-4965-968C-6485AD9487FB
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Waiting
      for output...\n        D      [WinRM] Processing output\n        D      [WinRM]
      cleaning up command_id: 75A522CB-2792-4965-968C-6485AD9487FB on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      Finished uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/dna.json
      to $env:TEMP\\kitchen/dna.json (0.104 KB over 1 chunks) in (0m0.45s)\n        D
      \     Uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/client.rb
      to $env:TEMP\\kitchen/client.rb\n        D      [WinRM] Command created for
      \            $parent = Split-Path \"$env:TEMP\\kitchen/client.rb\"\n                    if(!(Test-path
      $parent)) { mkdir $parent | Out-Null}\n                    $fileStream = New-Object
      -TypeName System.IO.FileStream -ArgumentList @(\n                        \"$env:TEMP\\kitchen/client.rb\",\n
      \                       [system.io.filemode]::Create,\n                        [System.io.FileAccess]::Write,\n
      \                       [System.IO.FileShare]::ReadWrite\n                    )\n
      \        with id: B8AD3F35-E4E5-4210-8EB7-0BA02A3EA30D\n        D      [WinRM]
      creating command_id: B8AD3F35-E4E5-4210-8EB7-0BA02A3EA30D on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: B8AD3F35-E4E5-4210-8EB7-0BA02A3EA30D
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('bm9kZV9uYW1lICJnaXQtZGVmYXVsdC13aW5kb3dzLXdpbmRvd3MtMjAxMnIyIgpjaGVja3N1bV9wYXRoICIje0VOVlsnVEVNUCddfVxca2l0Y2hlblxcY2hlY2tzdW1zIgpmaWxlX2NhY2hlX3BhdGggIiN7RU5WWydURU1QJ119XFxraXRjaGVuXFxjYWNoZSIKZmlsZV9iYWNrdXBfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGJhY2t1cCIKY29va2Jvb2tfcGF0aCBbIiN7RU5WWydURU1QJ119XFxraXRjaGVuXFxjb29rYm9va3MiLCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHNpdGUtY29va2Jvb2tzIl0KZGF0YV9iYWdfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGRhdGFfYmFncyIKZW52aXJvbm1lbnRfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGVudmlyb25tZW50cyIKbm9kZV9wYXRoICIje0VOVlsnVEVNUCddfVxca2l0Y2hlblxcbm9kZXMiCnJvbGVfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHJvbGVzIgpjbGllbnRfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGNsaWVudHMiCnVzZXJfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHVzZXJzIgp2YWxpZGF0aW9uX2tleSAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHZhbGlkYXRpb24ucGVtIgpjbGllbnRfa2V5ICIje0VOVlsnVEVNUCddfVxca2l0Y2hlblxcY2xpZW50LnBlbSIKY2hlZl9zZXJ2ZXJfdXJsICJodHRwOi8vMTI3LjAuMC4xOjg4ODkiCmVuY3J5cHRlZF9kYXRhX2JhZ19zZWNyZXQgIiN7RU5WWydURU1QJ119XFxraXRjaGVuXFxlbmNyeXB0ZWRfZGF0YV9iYWdfc2VjcmV0IgphdWRpdF9tb2RlIDplbmFibGVkCm5hbWVkX3J1bl9saXN0IHt9')\n
      \                   $fileStream.Write($bytes, 0, $bytes.length)\n         with
      id: C6B0B0CF-D24C-4259-9651-3CE4E7FBDC60\n        D      [WinRM] creating command_id:
      C6B0B0CF-D24C-4259-9651-3CE4E7FBDC60 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: C6B0B0CF-D24C-4259-9651-3CE4E7FBDC60
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Command
      created for $fileStream.Dispose() with id: 093D11B6-AEE7-4916-973B-7EC59C138BBC\n
      \       D      [WinRM] creating command_id: 093D11B6-AEE7-4916-973B-7EC59C138BBC
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Waiting
      for output...\n        D      [WinRM] Processing output\n        D      [WinRM]
      cleaning up command_id: 093D11B6-AEE7-4916-973B-7EC59C138BBC on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      Finished uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/client.rb
      to $env:TEMP\\kitchen/client.rb (1.12 KB over 1 chunks) in (0m0.40s)\n        D
      \     Uploading /tmp/cheftest/tmpzip-20160803-32371-164l9z6.zip to $env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\n
      \       D      [WinRM] Command created for             $parent = Split-Path
      \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\"\n                    if(!(Test-path
      $parent)) { mkdir $parent | Out-Null}\n                    $fileStream = New-Object
      -TypeName System.IO.FileStream -ArgumentList @(\n                        \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\",\n
      \                       [system.io.filemode]::Create,\n                        [System.io.FileAccess]::Write,\n
      \                       [System.IO.FileShare]::ReadWrite\n                    )\n
      \        with id: 6EB8C5D8-DDEA-49C7-89D3-753E78F4F986\n        D      [WinRM]
      creating command_id: 6EB8C5D8-DDEA-49C7-89D3-753E78F4F986 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: 6EB8C5D8-DDEA-49C7-89D3-753E78F4F986
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('UEsFBgAAAAAAAAAAAAAAAAAAAAAAAA==')\n
      \                   $fileStream.Write($bytes, 0, $bytes.length)\n         with
      id: 56651146-AEDE-48F7-BC96-4FFBC13C9783\n        D      [WinRM] creating command_id:
      56651146-AEDE-48F7-BC96-4FFBC13C9783 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: 56651146-AEDE-48F7-BC96-4FFBC13C9783
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Command
      created for $fileStream.Dispose() with id: 0609EC74-A6B7-47A9-9909-90D0061EE204\n
      \       D      [WinRM] creating command_id: 0609EC74-A6B7-47A9-9909-90D0061EE204
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Waiting
      for output...\n        D      [WinRM] Processing output\n        D      [WinRM]
      cleaning up command_id: 0609EC74-A6B7-47A9-9909-90D0061EE204 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      Finished uploading /tmp/cheftest/tmpzip-20160803-32371-164l9z6.zip
      to $env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip (0.028
      KB over 1 chunks) in (0m0.44s)\n        D      Uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/validation.pem
      to $env:TEMP\\kitchen/validation.pem\n        D      [WinRM] Command created
      for             $parent = Split-Path \"$env:TEMP\\kitchen/validation.pem\"\n
      \                   if(!(Test-path $parent)) { mkdir $parent | Out-Null}\n                    $fileStream
      = New-Object -TypeName System.IO.FileStream -ArgumentList @(\n                        \"$env:TEMP\\kitchen/validation.pem\",\n
      \                       [system.io.filemode]::Create,\n                        [System.io.FileAccess]::Write,\n
      \                       [System.IO.FileShare]::ReadWrite\n                    )\n
      \        with id: AEEA6A16-9248-4826-8F24-D800CCAAE634\n        D      [WinRM]
      creating command_id: AEEA6A16-9248-4826-8F24-D800CCAAE634 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: AEEA6A16-9248-4826-8F24-D800CCAAE634
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMHNPWTl0SHZWdExaNnhtVm1IOGQ4THJSck5jV09YYnJ2dkNyYWkrVDNHdFJ2UlNMCmhrc0xycE9wRDBMOUVITTZOZFRoTkYvZUdBOU9xK1VLQWU2eVhSMGh3c0t1eEtYcVE4U0VtbGhaWjlHaXVnZ0QKQi96WUQzSXRCNlNHcGRrUmU3a1FxVENoUXlySVhxYlJrSnF4b1RYTHllSkRGMHNDeVRkcDNMOElaQ1VXb2RNOApvVjlUbFFCSkhZdEcxZ0xVd0lpOGtjTVZFb0NuMlE4bHRDajAvZnRud2hUdHdPNTJSa1dBMHVZT0xHVmF5SHNMClNDRmZ4K0FDV1BVL29XQ3dXNS9LQnFiM3ZlVHYwYUVnL25oMFFzRnpSTG9UeDZTUkZJNWRUMk5mOGlpSmU0V0MKVUc4V0tFQjJHOFFQbnhzeGZPUFlEQmRUSjRDWEVpMmUrejQxVlFJREFRQUJBb0lCQUFMaHFiVzJLUStHMG5QawpaYWN3RmJpMDFTa0h4OFlCV2pmQ0VwWGhFS1J5MHl0Q25LVzVZTytDRlUyZ0hOV2N2YTcrdWhWOU9nd2FLWGt3CktITGVVSkgxVkFEVnFJNEh0cXcyZzVtWW02QlB2V25Oc2p6cHVBcCtCUitWb0VHa05oajY3cjloYXRNQVFyMEkKaXRUdlNINXJ2ZDJFdW1ZWElIS2Z6MUsxU2VnVWsxdTFFTDFSY016Um1aZTRnRGI2ZU5CczlTZzRpbTR5YlRHNgpwUEl5dEE4dkJRVldoanVBUjJUbSt3WkhpeTBBejZWdTdjMm1TMDdGU1g2Rk80RThTeFdmOGlkYUs5aWpNR1NxCkZ2SVMwNG1yWTZYQ1BVUFVDNHFtMXFObmhEUHBPcjdDcEkyT085OFNxR2FuU3RTNU5GbFNGWGVYUHBNMjgwL3UKZlpVQTBBRUNnWUVBK3g3UVVuZmZEcnQ3TEsyY1g2d2J2bjRtUm5GeGV0N2JKanJmV0lIZitSbTBVUmlrYU5tYQpoMC93TktwS0J3SUgrZUhLL0xzbGd6Y3BscnFQeXRHR0hMT0c5N0d5bzV0R0F6eUxIVVdCbXNOa1Jrc1kyc1BMCnVIcTZwWVdKTmtxaG5XR25JYm1xQ3IwRVdpaDgyeC95NHF4YkpZcFlxWE1yaXQwd1ZmN3lBZ2tDZ1lFQTF0d0kKZ0ZhWHFlc2V0VFBvRUhTUVNnQzhTNEQ1L05rZHJpVVhDWWIwNlJFY3ZvOUlwRk11aU9rVlVZTk41ZDNNRE5UUApJZEJpY2ZtdmZORUx2QnRYRG9tRVVEOGxzMVV1b1RJWFJOR1owVnNaWHU3T0VyWENLMEpLTk55cVJtT3djdllMCkpScUxmbmxlaTVOZG8xbHUyODZ5TDc0YzVyZFRMcy9uSTJwNGUrMENnWUIwNzlabWNMZUlMcm1mQm9GSTgrWS8KZ0pMbVByRnZYQk9FNitsUlY3a3FVRlB0WjZJM3lRenljY0VUWlREdnJueDBXamFpRmF2VVBIMjdXTWpZMDFTMgpUTXRPMElxMU1Qc2JTcmdsTzFhczhNdmpCOWxkRmN2cDdneTRRMFN2NlhUMHlxSi9TK3ZvOERmMG0rSDRVQnBVCmY1bzZFd0JTZC9VUXh3dFpJRTBsc1FLQmdRQ3N3ZmpYOEVnOEtML2xKTnBJT09FM2o0WFhFOXB0a3NtSmwyc0IKanhEblFZb2lNcVZPODA4c2FIVnF1Qy92VHJwZDZ0S3ROcGVoV3dqZVRGdXFJVFdMaThqbW1RK2dOVEtzQzlHbgoxUHhmMkdiNjdQcW5FcHdRR2xuK1RSdGdRNUhCcmRIaVFJaSs1YW0rZ253ODlwRHJqak81clp3aGFuQW82S1BKCjF6Y1BOUUtCZ1FEeEZ1OHY0ZnJEbVJOQ1ZhWlM0ZjFCNndUcmNNcm5pYklEbG56cks5R0c2SHoxVTdkRHY4czgKTmY0VW1lTXpEWGpsUFdaVk92UzUrOUhLSlBkUGo3L29udjhCMm0xOCtsY2dUVERKQmt6YTdSMW1qTDFDamUvWgpLY1ZHc3J5S042Y2pFN3lDRGFzbkE3UjJyVkJWLzdOV2VKVjc3Ym16VDVPLy9yVzR5SWZVSWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=')\n
      \                   $fileStream.Write($bytes, 0, $bytes.length)\n         with
      id: 34799AEF-1C87-4CA5-99C0-9A86B4B4D605\n        D      [WinRM] creating command_id:
      34799AEF-1C87-4CA5-99C0-9A86B4B4D605 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: 34799AEF-1C87-4CA5-99C0-9A86B4B4D605
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Command
      created for $fileStream.Dispose() with id: 052385D6-ABDE-43FA-8784-6F515FB4D039\n
      \       D      [WinRM] creating command_id: 052385D6-ABDE-43FA-8784-6F515FB4D039
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Waiting
      for output...\n        D      [WinRM] Processing output\n        D      [WinRM]
      cleaning up command_id: 052385D6-ABDE-43FA-8784-6F515FB4D039 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      Finished uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/validation.pem
      to $env:TEMP\\kitchen/validation.pem (2.236 KB over 1 chunks) in (0m0.32s)\n
      \       D      Uploading /tmp/cheftest/tmpzip-20160803-32371-onl7co.zip to $env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\n
      \       D      [WinRM] Command created for             $parent = Split-Path
      \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\"\n                    if(!(Test-path
      $parent)) { mkdir $parent | Out-Null}\n                    $fileStream = New-Object
      -TypeName System.IO.FileStream -ArgumentList @(\n                        \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\",\n
      \                       [system.io.filemode]::Create,\n                        [System.io.FileAccess]::Write,\n
      \                       [System.IO.FileShare]::ReadWrite\n                    )\n
      \        with id: 7250459D-5923-494F-ABE6-1A9D3F99B5F2\n        D      [WinRM]
      creating command_id: 7250459D-5923-494F-ABE6-1A9D3F99B5F2 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: 7250459D-5923-494F-ABE6-1A9D3F99B5F2
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('')\n
      \                   $fileStream.Write($bytes, 0, $bytes.length)\n         with
      id: F439A2E6-3A91-40BF-9A57-2302C58F819E\n        D      [WinRM] creating command_id:
      F439A2E6-3A91-40BF-9A57-2302C58F819E on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: F439A2E6-3A91-40BF-9A57-2302C58F819E
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('')\n
      \                   $fileStream.Write($bytes, 0, $bytes.length)\n         with
      id: 449EFD87-D447-42F1-8F23-1641A2A5BA44\n        D      [WinRM] creating command_id:
      449EFD87-D447-42F1-8F23-1641A2A5BA44 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: 449EFD87-D447-42F1-8F23-1641A2A5BA44
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Command
      created for $fileStream.Dispose() with id: B6907F07-4199-4B64-9E27-A49AADA54453\n
      \       D      [WinRM] creating command_id: B6907F07-4199-4B64-9E27-A49AADA54453
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      [WinRM] Waiting
      for output...\n        D      [WinRM] Processing output\n        D      [WinRM]
      cleaning up command_id: B6907F07-4199-4B64-9E27-A49AADA54453 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      Finished uploading /tmp/cheftest/tmpzip-20160803-32371-onl7co.zip
      to $env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip (409.904
      KB over 2 chunks) in (0m1.21s)\n        D      Running extract_files.ps1\n        D
      \     [WinRM] Command created for trap {\n          $e = $_.Exception\n          $e.InvocationInfo.ScriptName\n
      \         do {\n            $e.Message\n            $e = $e.InnerException\n
      \         } while ($e)\n          break\n        }\n\n        function folder($path){\n
      \         $path | ? {-not (test-path $_)} | % {$null = mkdir $_}\n        }\n\n
      \       Function Decode-Files($hash) {\n          foreach ($key in $hash.keys)
      {\n            $value = $hash[$key]\n            $tzip, $dst = $Value[\"tmpzip\"],
      $Value[\"dst\"]\n            if ($tzip) {Unzip-File $tzip $dst}\n            New-Object
      psobject -Property @{dst=$dst;src_md5=$key;tmpzip=$tzip}\n          }\n        }\n\n
      \       Function Unzip-File($src, $dst) {\n          $unpack = $src -replace
      '\\.zip'\n          $dst_parent = Split-Path -Path $dst -Parent\n          if(!(Test-Path
      $dst_parent)) { $dst = $dst_parent }\n          folder $unpack, $dst\n          try
      {\n            try{\n              [IO.Compression.ZipFile]::ExtractToDirectory($src,
      $unpack)\n            }\n            catch {\n              Add-Type -AssemblyName
      System.IO.Compression.FileSystem -ErrorAction Stop\n              [IO.Compression.ZipFile]::ExtractToDirectory($src,
      $unpack)\n            }\n          }\n          catch {\n            Try {\n
      \             $s = New-Object -ComObject Shell.Application\n              ($s.NameSpace($unpack)).CopyHere(($s.NameSpace($src)).Items(),
      0x610)\n            }\n            Finally {\n              [void][Runtime.Interopservices.Marshal]::ReleaseComObject($s)\n
      \           }\n          }\n          dir $unpack | cp -dest \"$dst/\" -force
      -recurse\n          rm $unpack -recurse -force\n        }\n\n        $hash_file
      = @{\n          \"76cdb2bad9582d23c1f6f4d868218d6c\" = @{\n            \"dst\"
      = \"$env:TEMP\\kitchen\\cache\";\n            \"tmpzip\" = \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\"\n
      \         };\n          \"5bac8b06fc48d51e72b8760b38d59b0f\" = @{\n            \"dst\"
      = \"$env:TEMP\\kitchen\\cookbooks\";\n            \"tmpzip\" = \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\"\n
      \         }\n        }\n        Decode-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \        with id: 9BC922BA-731B-41DD-81B1-2CBE9F1A525B\n        D      [WinRM]
      creating command_id: 9BC922BA-731B-41DD-81B1-2CBE9F1A525B on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n        D      [WinRM] cleaning up command_id: 9BC922BA-731B-41DD-81B1-2CBE9F1A525B
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      Parsing CSV
      Response\n        D      \"src_md5\",\"tmpzip\",\"dst\"\n        \"76cdb2bad9582d23c1f6f4d868218d6c\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\kitchen\\cache\"\n
      \       \"5bac8b06fc48d51e72b8760b38d59b0f\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\kitchen\\cookbooks\"\n\n
      \       D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160803-32371-164l9z6.zip\n
      \       D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160803-32371-onl7co.zip\n
      \       D      Uploaded 5 items dirty_check: (0m0.76s) stream_files: (0m2.82s)
      extract: (0m1.25s)\n        D      Transfer complete\n        D      Attempting
      to execute command - try 1 of 1.\n        D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \       & $env:systemdrive\\opscode\\chef\\bin\\chef-client.bat --local-mode
      --config $env:TEMP\\kitchen\\client.rb --log_level auto --force-formatter --no-color
      --json-attributes $env:TEMP\\kitchen\\dna.json --chef-zero-port 8889 ; exit
      $LastExitCode)\n        D      [WinRM] Command created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \       & $env:systemdrive\\opscode\\chef\\bin\\chef-client.bat --local-mode
      --config $env:TEMP\\kitchen\\client.rb --log_level auto --force-formatter --no-color
      --json-attributes $env:TEMP\\kitchen\\dna.json --chef-zero-port 8889 ; exit
      $LastExitCode with id: F9897435-4EBF-4895-8F7B-19891DB5CEC7\n        D      [WinRM]
      creating command_id: F9897435-4EBF-4895-8F7B-19891DB5CEC7 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \       D      [WinRM] Waiting for output...\n        D      [WinRM] Processing
      output\n               Starting Chef Client, version 12.13.21\n        D      [WinRM]
      Waiting for output...\n        D      [WinRM] Processing output\n               Creating
      a new client identity for git-default-windows-windows-2012r2 using the validator
      key.\n               resolving cookbooks for run list: [\"git\"]\n               Synchronizing
      Cookbooks:\n               Installing Cookbook Gems:\n               Compiling
      Cookbooks...\n\n               ================================================================================\n
      \              Recipe Compile Error\n               ================================================================================\n\n
      \              Chef::Exceptions::RecipeNotFound\n               --------------------------------\n
      \              could not find recipe default for cookbook git\n\n               Platform:\n
      \              ---------\n               x64-mingw32\n\n\n               Running
      handlers:\n               [2016-08-03T02:04:45+00:00] ERROR: Running exception
      handlers\n               Running handlers complete\n               [2016-08-03T02:04:45+00:00]
      ERROR: Exception handlers complete\n               Chef Client failed. 0 resources
      updated in 31 seconds\n               [2016-08-03T02:04:45+00:00] FATAL: Stacktrace
      dumped to C:/Users/ADMINI~1/AppData/Local/Temp/kitchen/cache/chef-stacktrace.out\n
      \              [2016-08-03T02:04:45+00:00] FATAL: Please provide the contents
      of the stacktrace.out file if you file a bug report\n               [2016-08-03T02:04:45+00:00]
      FATAL: Chef::Exceptions::RunFailedWrappingError: Found 1 errors, they are stored
      in the backtrace\n        D      [WinRM] cleaning up command_id: F9897435-4EBF-4895-8F7B-19891DB5CEC7
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n        D      Cleaning up
      local sandbox in /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu\n
      \       D      ------Exception-------\n        D      Class: Kitchen::ActionFailed\n
      \       D      Message: 1 actions failed.\n        >>>>>>     Converge failed
      on instance <git-default-windows-windows-2012r2>.  Please see .kitchen/logs/git-default-windows-windows-2012r2.log
      for more details\n        D      ----------------------\n        D      ------Backtrace-------\n
      \       D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:187:in
      `report_errors'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:178:in
      `run_action'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:39:in
      `block in call'\n        D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:37:in
      `call'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:56:in
      `perform'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:184:in
      `block (2 levels) in <class:CLI>'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/command.rb:27:in
      `run'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/invocation.rb:126:in
      `invoke_command'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:325:in
      `invoke_task'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor.rb:359:in
      `dispatch'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/base.rb:440:in
      `start'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `block in <top (required)>'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/errors.rb:174:in
      `with_friendly_errors'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `<top (required)>'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `load'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `<top (required)>'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `load'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `kernel_load'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:24:in
      `run'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:304:in
      `exec'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/command.rb:27:in
      `run'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in
      `invoke_command'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor.rb:359:in
      `dispatch'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/base.rb:440:in
      `start'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:11:in
      `start'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:27:in
      `block in <top (required)>'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/friendly_errors.rb:98:in
      `with_friendly_errors'\n        D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:19:in
      `<top (required)>'\n        D      /opt/chefdk/embedded/bin/bundle:22:in `load'\n
      \       D      /opt/chefdk/embedded/bin/bundle:22:in `<main>'\n        D      ----End
      Backtrace-----\n        D      -Composite Exception--\n        D      Class:
      Kitchen::InstanceFailure\n        D      Message: Converge failed on instance
      <git-default-windows-windows-2012r2>.  Please see .kitchen/logs/git-default-windows-windows-2012r2.log
      for more details\n        D      ----------------------\n        D      ------Backtrace-------\n
      \       D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:86:in
      `rescue in call'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:89:in
      `call'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:373:in
      `block in converge_action'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n        D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:369:in
      `converge_action'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:138:in
      `converge'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n        D      ----End Backtrace-----\n
      \       D      ---Nested Exception---\n        D      Class: Kitchen::ActionFailed\n
      \       D      Message: WinRM exited (1) for command: [$env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \       & $env:systemdrive\\opscode\\chef\\bin\\chef-client.bat --local-mode
      --config $env:TEMP\\kitchen\\client.rb --log_level auto --force-formatter --no-color
      --json-attributes $env:TEMP\\kitchen\\dna.json --chef-zero-port 8889 ; exit
      $LastExitCode]\n        D      ----------------------\n        D      ------Backtrace-------\n
      \       D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:86:in
      `rescue in call'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:89:in
      `call'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:373:in
      `block in converge_action'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n        D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:369:in
      `converge_action'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:138:in
      `converge'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n        D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n        D      ----End Backtrace-----\n
      \       STDERR: >>>>>> ------Exception-------\n        >>>>>> Class: Kitchen::ActionFailed\n
      \       >>>>>> Message: 1 actions failed.\n        >>>>>>     Converge failed
      on instance <git-default-windows-windows-2012r2>.  Please see .kitchen/logs/git-default-windows-windows-2012r2.log
      for more details\n        >>>>>> ----------------------\n        >>>>>> Please
      see .kitchen/logs/kitchen.log for more details\n        >>>>>> Also try running
      `kitchen diagnose --all` for configuration\n        ---- End output of bundle
      exec kitchen converge  -c -l debug ----\n        Ran bundle exec kitchen converge
      \ -c -l debug returned 20\n\n        Cookbook Trace:\n        ---------------\n
      \       /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in
      `block (3 levels) in <class:Kitchen>'\n\n        Resource Declaration:\n        ---------------------\n
      \       # In /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb\n\n
      \        39:       ruby_block \"copy_kitchen_logs_to_data_path\" do\n         40:
      \        block do\n         41:           cmd_env = {\n         42:             \"KITCHEN_DRIVER\"
      => driver,\n         43:             \"KITCHEN_INSTANCES\" => instances,\n         44:
      \            \"KITCHEN_LOCAL_YAML\" => ::File.expand_path(\"../../.kitchen.#{driver}.yml\",
      __FILE__),\n         45:             \"KITCHEN_CHEF_PRODUCT\" => chef_product,\n
      \        46:             \"KITCHEN_CHEF_CHANNEL\" => chef_channel,\n         47:
      \            \"KITCHEN_CHEF_VERSION\" => chef_version,\n         48:             \"ARTIFACTORY_USERNAME\"
      => artifactory_username,\n         49:             \"ARTIFACTORY_PASSWORD\"
      => artifactory_password\n         50:           }.merge(new_resource.env)\n
      \        51:           suite = kitchen_dir.split(\"/\").last\n         52:           kitchen_log_path
      = ENV[\"WORKSPACE\"] ? \"#{ENV[\"WORKSPACE\"]}/chef-acceptance-data/logs\" :
      \"#{kitchen_dir}/../.acceptance_data/logs/\"\n         53:\n         54:           begin\n
      \        55:             shell_out!(\"bundle exec kitchen #{command}#{instances
      ? \" #{instances}\" : \"\"}#{kitchen_options ? \" #{kitchen_options}\" : \"\"}\",\n
      \        56:                        env: cmd_env,\n         57:                        timeout:
      60 * 30,\n         58:                        live_stream: STDOUT,\n         59:
      \                       cwd: kitchen_dir)\n         60:           ensure\n         61:
      \            FileUtils.mkdir_p(\"#{kitchen_log_path}/#{suite}/#{command}\")\n
      \        62:             FileUtils.cp_r(\"#{kitchen_dir}/.kitchen/logs/.\",
      \"#{kitchen_log_path}/#{suite}/#{command}\")\n         63:           end\n         64:
      \        end\n         65:       end\n\n        Compiled Resource:\n        ------------------\n
      \       # Declared in /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:39:in
      `block in <class:Kitchen>'\n\n        ruby_block(\"copy_kitchen_logs_to_data_path\")
      do\n          action [:run]\n          retries 0\n          retry_delay 2\n
      \         default_guard_interpreter :default\n          block_name \"copy_kitchen_logs_to_data_path\"\n
      \         declared_type :ruby_block\n          cookbook_name \"acceptance-cookbook\"\n
      \         block #<Proc:0x000000035e7088@/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:40>\n
      \       end\n\n        Platform:\n        ---------\n        x86_64-linux\n\n\n
      \     ================================================================================\n
      \     Error executing action `run` on resource 'cookbook_kitchen[converge git]'\n
      \     ================================================================================\n\n
      \     Mixlib::ShellOut::ShellCommandFailed\n      ------------------------------------\n
      \     ruby_block[copy_kitchen_logs_to_data_path] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb
      line 39) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process
      to exit with [0], but received '20'\n      ---- Begin output of bundle exec
      kitchen converge  -c -l debug ----\n      STDOUT: -----> Starting Kitchen (v1.10.2)\n
      \     D      Berksfile found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile,
      loading Berkshelf\n      D      Berkshelf 4.3.5 library loaded\n      D      Berksfile
      found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile,
      loading Berkshelf\n      D      Berkshelf 4.3.5 previously loaded\n      D      winrm
      requested, loading winrm gem ([\"~> 2.0\"])\n      D      winrm is loaded.\n
      \     D      winrm-fs requested, loading winrm-fs gem ([\"~> 1.0\"])\n      D
      \     winrm-fs is loaded.\n      -----> Creating <git-default-ubuntu-1404>...\n
      \            If you are not using an account that qualifies under the AWS\n
      \     free-tier, you may be charged to run these suites. The charge\n      should
      be minimal, but neither Test Kitchen nor its maintainers\n      are responsible
      for your incurred costs.\n\n      -----> Creating <git-default-windows-windows-2012r2>...\n
      \     D      platform name windows-2012r2 appears to be a standard platform.
      Searching for windows 2012r2 ...\n      D      Searching for images matching
      {:name=>\"Windows_Server-2012-R2*-English-*-Base-*\", :\"owner-alias\"=>\"amazon\",
      :architecture=>\"x86_64\", :\"virtualization-type\"=>\"hvm\", :\"block-device-mapping.volume-type\"=>\"gp2\",
      :\"image-type\"=>\"machine\"} ...\n      D      platform name ubuntu-14.04 appears
      to be a standard platform. Searching for ubuntu 14.04 ...\n      D      Searching
      for images matching {:name=>\"ubuntu/images/*/ubuntu-*-14.04-*-server-*\", :\"owner-id\"=>\"099720109477\",
      :architecture=>\"x86_64\", :\"virtualization-type\"=>\"hvm\", :\"block-device-mapping.volume-type\"=>\"gp2\",
      :\"image-type\"=>\"machine\"} ...\n      D      Search returned 4 images:\n
      \     D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.26: Detected
      windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-07-27T08:44:14.000Z\n      D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.13:
      Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm,
      Storage: ebs gp2, Created: 2016-07-14T09:59:33.000Z\n      D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.06.15:
      Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm,
      Storage: ebs gp2, Created: 2016-06-16T16:58:39.000Z\n      D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.05.11:
      Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm,
      Storage: ebs gp2, Created: 2016-05-12T20:22:38.000Z\n      D      Image for
      git-default-windows-windows-2012r2: Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.26.
      \ Architecture: x86_64, Virtualization: hvm, Storage: ebs gp2, Created: 2016-07-27T08:44:14.000Z\n
      \            Detected platform: windows version 2012r2rtm on x86_64. Instance
      Type: m3.large. Default username: administrator (default).\n      D      No
      SSH username specified: using default username administrator  for image ami-2426e944,
      which we detected as windows 2012r2rtm x86_64.\n             If you are not
      using an account that qualifies under the AWS\n      free-tier, you may be charged
      to run these suites. The charge\n      should be minimal, but neither Test Kitchen
      nor its maintainers\n      are responsible for your incurred costs.\n\n      D
      \     Creating EC2 instance in region us-west-2 with properties:\n      D      -
      instance_type = \"m3.large\"\n      D      - ebs_optimized = false\n      D
      \     - image_id = \"ami-2426e944\"\n      D      - key_name = \"jenkins\"\n
      \     D      - subnet_id = \"subnet-19ac017c\"\n      D      - private_ip_address
      = nil\n      D      - placement = {:availability_zone=>\"us-west-2a\"}\n      D
      \     - security_group_ids = [\"sg-e401eb83\", \"sg-96274af3\"]\n      D      -
      user_data = \"PHBvd2Vyc2hlbGw+CiYgbmV0c2ggYWR2ZmlyZXdhbGwgZmlyZXdhbGwgc2V0\\nIHJ1bGUgbmFtZT0iV2luZG93cyBSZW1vdGUgTWFuYWdlbWVudCAoSFRUUC1J\\nbikiIHByb2ZpbGU9cHVibGljIHByb3RvY29sPXRjcCBsb2NhbHBvcnQ9NTk4\\nNSByZW1vdGVpcD1sb2NhbHN1Ym5ldCBuZXcgcmVtb3RlaXA9YW55CiNTZXQg\\nc2NyaXB0IGV4ZWN1dGlvbiB0byB1bnJlc3RyaWN0ZWQKJiBTZXQtRXhlY3V0\\naW9uUG9saWN5IFVucmVzdHJpY3RlZCAtRm9yY2UKPC9wb3dlcnNoZWxsPgo=\\n\"\n
      \     D      Search returned 59 images:\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160714:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-07-15T10:37:25.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160627:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-06-29T15:13:53.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160620:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-06-21T12:07:59.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160602:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-06-03T01:17:21.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160516:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-05-17T09:54:45.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160509.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-05-10T11:55:52.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160406:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-04-06T22:01:48.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160314:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-03-15T08:30:56.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160222:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-02-23T13:53:30.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160217.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-02-18T01:37:46.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160201:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-02-02T12:11:43.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160119:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-01-20T12:15:17.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160114.5:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-01-15T22:11:35.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151218:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-12-20T01:45:49.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151217:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-12-18T09:40:49.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151117:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-11-18T08:17:32.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151105:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-11-06T23:03:53.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151019:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-20T09:04:11.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151015:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-15T20:43:54.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151008:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-09T08:48:14.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151007:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-08T08:57:50.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151005:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-06T09:26:41.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150930:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-01T11:24:14.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150928:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-29T11:13:44.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150924:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-25T13:37:47.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150908:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-09T05:59:15.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150901.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-02T05:15:07.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150814:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-15T08:11:39.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150813:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-14T07:14:42.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150812:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-13T08:50:05.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150810:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-11T11:43:49.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150805:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-06T19:29:13.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150731:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-01T09:17:08.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150727:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-07-28T07:13:51.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150724:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-07-25T05:22:13.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150629:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-30T09:14:39.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150609:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-09T17:42:29.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150608:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-09T03:54:29.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150603:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-04T08:13:50.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150528:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-05-29T10:15:24.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150506:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-05-07T08:14:11.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150417:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-04-17T12:06:11.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150408.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-04-09T08:52:15.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150325:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-03-25T23:56:26.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150305:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-03-05T11:02:56.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150227.2:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-02-28T07:15:31.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150225.2:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-02-26T06:03:04.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150209.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-02-10T05:22:56.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150123:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-01-23T10:57:13.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20141125:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-11-26T01:50:28.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140927:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-30T00:19:14.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140926:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-26T16:05:00.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140924:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-25T14:07:23.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140923:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-23T14:15:33.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140829:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-08-29T18:46:07.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140816:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-08-16T22:57:30.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140813:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-08-14T00:50:31.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140724:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-07-25T08:28:59.000Z\n      D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140607.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-07-23T18:05:49.000Z\n      D      Creating EC2 instance
      in region us-west-2 with properties:\n      D      - instance_type = \"m3.large\"\n
      \     D      - ebs_optimized = false\n      D      - image_id = \"ami-d732f0b7\"\n
      \     D      - key_name = \"jenkins\"\n      D      - subnet_id = \"subnet-19ac017c\"\n
      \     D      - private_ip_address = nil\n      D      - placement = {:availability_zone=>\"us-west-2a\"}\n
      \     D      - security_group_ids = [\"sg-e401eb83\", \"sg-96274af3\"]\n             Instance
      <i-b452cd1b> requested.\n             Polling AWS for existence, attempt 0...\n
      \            Instance <i-1b55cab4> requested.\n             Polling AWS for
      existence, attempt 0...\n             Attempting to tag the instance, 0 retries\n
      \            Attempting to tag the instance, 0 retries\n             EC2 instance
      <i-1b55cab4> created.\n             Waited 0/300s for instance <i-1b55cab4>
      to become ready.\n             EC2 instance <i-b452cd1b> created.\n             Waited
      0/300s for instance <i-b452cd1b> to become ready.\n             Waited 5/300s
      for instance <i-1b55cab4> to become ready.\n             Waited 5/300s for instance
      <i-b452cd1b> to become ready.\n             Waited 10/300s for instance <i-1b55cab4>
      to become ready.\n             Waited 10/300s for instance <i-b452cd1b> to become
      ready.\n             Waited 15/300s for instance <i-1b55cab4> to become ready.\n
      \            Waited 15/300s for instance <i-b452cd1b> to become ready.\n             Waited
      20/300s for instance <i-1b55cab4> to become ready.\n             Waited 20/300s
      for instance <i-b452cd1b> to become ready.\n             EC2 instance <i-b452cd1b>
      ready.\n      D      [SSH] opening connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n      D      [SSH] connection failed (#<Errno::ECONNREFUSED:
      Connection refused - connect(2) for 10.194.15.201:22>)\n             Waiting
      for SSH service on 10.194.15.201:22, retrying in 3 seconds\n      D      [SSH]
      opening connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n      D      [SSH] connection
      failed (#<Errno::ECONNREFUSED: Connection refused - connect(2) for 10.194.15.201:22>)\n
      \            Waiting for SSH service on 10.194.15.201:22, retrying in 3 seconds\n
      \            Waited 25/300s for instance <i-1b55cab4> to become ready.\n      D
      \     [SSH] opening connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n      D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (echo '[SSH] Established')\n
      \            [SSH] Established\n      D      Using sudo_command='sudo -E' for
      ohai hints\n      D      [SSH] reusing existing connection ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n      D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sudo -E mkdir -p /etc/chef/ohai/hints;
      sudo -E touch /etc/chef/ohai/hints/ec2.json)\n      D      ec2:create '10.194.15.201'\n
      \            Finished creating <git-default-ubuntu-1404> (0m31.30s).\n      ----->
      Converging <git-default-ubuntu-1404>...\n             Preparing files for transfer\n
      \     D      Creating local sandbox in /tmp/cheftest/git-default-ubuntu-1404-sandbox-20160803-32371-1dt31m3\n
      \            Preparing dna.json\n      D      Creating dna.json from {:chef_acceptance=>\"true\",
      :use_system_chef=>\"true\", :run_list=>[\"recipe[apt]\", \"recipe[git]\"]}\n
      \            Resolving cookbook dependencies with Berkshelf 4.3.5...\n      D
      \     Using Berksfile from /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile\n
      \            Waited 30/300s for instance <i-1b55cab4> to become ready.\n             Removing
      non-cookbook files before transfer\n             Preparing validation.pem\n
      \     D      Using a dummy validation.pem\n             Preparing client.rb\n
      \     D      Creating client.rb from {:node_name=>\"git-default-ubuntu-1404\",
      :checksum_path=>\"/tmp/kitchen/checksums\", :file_cache_path=>\"/tmp/kitchen/cache\",
      :file_backup_path=>\"/tmp/kitchen/backup\", :cookbook_path=>[\"/tmp/kitchen/cookbooks\",
      \"/tmp/kitchen/site-cookbooks\"], :data_bag_path=>\"/tmp/kitchen/data_bags\",
      :environment_path=>\"/tmp/kitchen/environments\", :node_path=>\"/tmp/kitchen/nodes\",
      :role_path=>\"/tmp/kitchen/roles\", :client_path=>\"/tmp/kitchen/clients\",
      :user_path=>\"/tmp/kitchen/users\", :validation_key=>\"/tmp/kitchen/validation.pem\",
      :client_key=>\"/tmp/kitchen/client.pem\", :chef_server_url=>\"http://127.0.0.1:8889\",
      :encrypted_data_bag_secret=>\"/tmp/kitchen/encrypted_data_bag_secret\", :audit_mode=>\":enabled\",
      :named_run_list=>{}}\n      D      [SSH] reusing existing connection ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n      D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sudo -E cat > /tmp/chef-installer.sh
      <<\"EOL\"\n      #!/bin/bash\n      #!/bin/sh\n      # WARNING: REQUIRES /bin/sh\n
      \     #\n      # - must run on /bin/sh on solaris 9\n      # - must run on /bin/sh
      on AIX 6.x\n      #\n      # Copyright:: Copyright (c) 2010-2015 Chef Software,
      Inc.\n      # License:: Apache License, Version 2.0\n      #\n      # Licensed
      under the Apache License, Version 2.0 (the \"License\");\n      # you may not
      use this file except in compliance with the License.\n      # You may obtain
      a copy of the License at\n      #\n      #     http://www.apache.org/licenses/LICENSE-2.0\n
      \     #\n      # Unless required by applicable law or agreed to in writing,
      software\n      # distributed under the License is distributed on an \"AS IS\"
      BASIS,\n      # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
      or implied.\n      # See the License for the specific language governing permissions
      and\n      # limitations under the License.\n      #\n\n      # helpers.sh\n
      \     ############\n      # This section has some helper functions to make life
      easier.\n      #\n      # Outputs:\n      # $tmp_dir: secure-ish temp directory
      that can be used during installation.\n      ############\n\n      # Check whether
      a command exists - returns 0 if it does, 1 if it does not\n      exists() {\n
      \       if command -v $1 >/dev/null 2>&1\n        then\n          return 0\n
      \       else\n          return 1\n        fi\n      }\n\n      # Output the
      instructions to report bug about this script\n      report_bug() {\n        echo
      \"Version: $version\"\n        echo \"\"\n        echo \"Please file a Bug Report
      at https://github.com/chef/omnitruck/issues/new\"\n        echo \"Alternatively,
      feel free to open a Support Ticket at https://www.chef.io/support/tickets\"\n
      \       echo \"More Chef support resources can be found at https://www.chef.io/support\"\n
      \       echo \"\"\n        echo \"Please include as many details about the problem
      as possible i.e., how to reproduce\"\n        echo \"the problem (if possible),
      type of the Operating System and its version, etc.,\"\n        echo \"and any
      other relevant details that might help us with troubleshooting.\"\n        echo
      \"\"\n      }\n\n      checksum_mismatch() {\n        echo \"Package checksum
      mismatch!\"\n        report_bug\n        exit 1\n      }\n\n      unable_to_retrieve_package()
      {\n        echo \"Unable to retrieve a valid package!\"\n        report_bug\n
      \       echo \"Metadata URL: $metadata_url\"\n        if test \"x$download_url\"
      != \"x\"; then\n          echo \"Download URL: $download_url\"\n        fi\n
      \       if test \"x$stderr_results\" != \"x\"; then\n          echo \"\\nDEBUG
      OUTPUT FOLLOWS:\\n$stderr_results\"\n        fi\n        exit 1\n      }\n\n
      \     http_404_error() {\n        echo \"Omnitruck artifact does not exist for
      version $version on platform $platform\"\n        echo \"\"\n        echo \"Either
      this means:\"\n        echo \"   - We do not support $platform\"\n        echo
      \"   - We do not have an artifact for $version\"\n        echo \"\"\n        echo
      \"This is often the latter case due to running a prerelease or RC version of
      chef\"\n        echo \"or a gem version which was only pushed to rubygems and
      not omnitruck.\"\n        echo \"\"\n        echo \"You may be able to set your
      knife[:bootstrap_version] to the most recent stable\"\n        echo \"release
      of Chef to fix this problem (or the most recent stable major version number).\"\n
      \       echo \"\"\n        echo \"In order to test the version parameter, adventurous
      users may take the Metadata URL\"\n        echo \"below and modify the '&v=<number>'
      parameter until you successfully get a URL that\"\n        echo \"does not 404
      (e.g. via curl or wget).  You should be able to use '&v=11' or '&v=12'\"\n        echo
      \"succesfully.\"\n        echo \"\"\n        echo \"If you cannot fix this problem
      by setting the bootstrap_version, it probably means\"\n        echo \"that $platform
      is not supported.\"\n        echo \"\"\n        # deliberately do not call report_bug
      to suppress bug report noise.\n        echo \"Metadata URL: $metadata_url\"\n
      \       if test \"x$download_url\" != \"x\"; then\n          echo \"Download
      URL: $download_url\"\n        fi\n        if test \"x$stderr_results\" != \"x\";
      then\n          echo \"\\nDEBUG OUTPUT FOLLOWS:\\n$stderr_results\"\n        fi\n
      \       exit 1\n      }\n\n      capture_tmp_stderr() {\n        # spool up
      /tmp/stderr from all the commands we called\n        if test -f \"$tmp_dir/stderr\";
      then\n          output=`cat $tmp_dir/stderr`\n          stderr_results=\"${stderr_results}\\nSTDERR
      from $1:\\n\\n$output\\n\"\n          rm $tmp_dir/stderr\n        fi\n      }\n\n
      \     # do_wget URL FILENAME\n      do_wget() {\n        echo \"trying wget...\"\n
      \       wget -O \"$2\" \"$1\" 2>$tmp_dir/stderr\n        rc=$?\n        # check
      for 404\n        grep \"ERROR 404\" $tmp_dir/stderr 2>&1 >/dev/null\n        if
      test $? -eq 0; then\n          echo \"ERROR 404\"\n          http_404_error\n
      \       fi\n\n        # check for bad return status or empty output\n        if
      test $rc -ne 0 || test ! -s \"$2\"; then\n          capture_tmp_stderr \"wget\"\n
      \         return 1\n        fi\n\n        return 0\n      }\n\n      # do_curl
      URL FILENAME\n      do_curl() {\n        echo \"trying curl...\"\n        curl
      --retry 5 -sL -D $tmp_dir/stderr \"$1\" > \"$2\"\n        rc=$?\n        # check
      for 404\n        grep \"404 Not Found\" $tmp_dir/stderr 2>&1 >/dev/null\n        if
      test $? -eq 0; then\n          echo \"ERROR 404\"\n          http_404_error\n
      \       fi\n\n        # check for bad return status or empty output\n        if
      test $rc -ne 0 || test ! -s \"$2\"; then\n          capture_tmp_stderr \"curl\"\n
      \         return 1\n        fi\n\n        return 0\n      }\n\n      # do_fetch
      URL FILENAME\n      do_fetch() {\n        echo \"trying fetch...\"\n        fetch
      -o \"$2\" \"$1\" 2>$tmp_dir/stderr\n        # check for bad return status\n
      \       test $? -ne 0 && return 1\n        return 0\n      }\n\n      # do_perl
      URL FILENAME\n      do_perl() {\n        echo \"trying perl...\"\n        perl
      -e 'use LWP::Simple; getprint($ARGV[0]);' \"$1\" > \"$2\" 2>$tmp_dir/stderr\n
      \       rc=$?\n        # check for 404\n        grep \"404 Not Found\" $tmp_dir/stderr
      2>&1 >/dev/null\n        if test $? -eq 0; then\n          echo \"ERROR 404\"\n
      \         http_404_error\n        fi\n\n        # check for bad return status
      or empty output\n        if test $rc -ne 0 || test ! -s \"$2\"; then\n          capture_tmp_stderr
      \"perl\"\n          return 1\n        fi\n\n        return 0\n      }\n\n      #
      do_python URL FILENAME\n      do_python() {\n        echo \"trying python...\"\n
      \       python -c \"import sys,urllib2 ; sys.stdout.write(urllib2.urlopen(sys.argv[1]).read())\"
      \"$1\" > \"$2\" 2>$tmp_dir/stderr\n        rc=$?\n        # check for 404\n
      \       grep \"HTTP Error 404\" $tmp_dir/stderr 2>&1 >/dev/null\n        if
      test $? -eq 0; then\n          echo \"ERROR 404\"\n          http_404_error\n
      \       fi\n\n        # check for bad return status or empty output\n        if
      test $rc -ne 0 || test ! -s \"$2\"; then\n          capture_tmp_stderr \"python\"\n
      \         return 1\n        fi\n        return 0\n      }\n\n      # returns
      0 if checksums match\n      do_checksum() {\n        if exists sha256sum; then\n
      \         echo \"Comparing checksum with sha256sum...\"\n          checksum=`sha256sum
      $1 | awk '{ print $1 }'`\n          return `test \"x$checksum\" = \"x$2\"`\n
      \       elif exists shasum; then\n          echo \"Comparing checksum with shasum...\"\n
      \         checksum=`shasum -a 256 $1 | awk '{ print $1 }'`\n          return
      `test \"x$checksum\" = \"x$2\"`\n        else\n          echo \"WARNING: could
      not find a valid checksum program, pre-install shasum or sha256sum in your O/S
      image to get valdation...\"\n          return 0\n        fi\n      }\n\n      #
      do_download URL FILENAME\n      do_download() {\n        echo \"downloading
      $1\"\n        echo \"  to file $2\"\n\n        url=`echo $1`\n        if test
      \"x$platform\" = \"xsolaris2\"; then\n          if test \"x$platform_version\"
      = \"x5.9\" -o \"x$platform_version\" = \"x5.10\"; then\n            # solaris
      9 lacks openssl, solaris 10 lacks recent enough credentials - your base O/S
      is completely insecure, please upgrade\n            url=`echo $url | sed -e
      's/https/http/'`\n          fi\n        fi\n\n        # we try all of these
      until we get success.\n        # perl, in particular may be present but LWP::Simple
      may not be installed\n\n        if exists wget; then\n          do_wget $url
      $2 && return 0\n        fi\n\n        if exists curl; then\n          do_curl
      $url $2 && return 0\n        fi\n\n        if exists fetch; then\n          do_fetch
      $url $2 && return 0\n        fi\n\n        if exists perl; then\n          do_perl
      $url $2 && return 0\n        fi\n\n        if exists python; then\n          do_python
      $url $2 && return 0\n        fi\n\n        unable_to_retrieve_package\n      }\n\n
      \     # install_file TYPE FILENAME\n      # TYPE is \"rpm\", \"deb\", \"solaris\",
      \"sh\", etc.\n      install_file() {\n        echo \"Installing $project $version\"\n
      \       case \"$1\" in\n          \"rpm\")\n            if test \"x$platform\"
      = \"xnexus\" || test \"x$platform\" = \"xios_xr\"; then\n              echo
      \"installing with yum...\"\n              yum install -yv \"$2\"\n            else\n
      \             echo \"installing with rpm...\"\n              rpm -Uvh --oldpackage
      --replacepkgs \"$2\"\n            fi\n            ;;\n          \"deb\")\n            echo
      \"installing with dpkg...\"\n            dpkg -i \"$2\"\n            ;;\n          \"bff\")\n
      \           echo \"installing with installp...\"\n            installp -aXYgd
      \"$2\" all\n            ;;\n          \"solaris\")\n            echo \"installing
      with pkgadd...\"\n            echo \"conflict=nocheck\" > $tmp_dir/nocheck\n
      \           echo \"action=nocheck\" >> $tmp_dir/nocheck\n            echo \"mail=\"
      >> $tmp_dir/nocheck\n            pkgrm -a $tmp_dir/nocheck -n $project >/dev/null
      2>&1 || true\n            pkgadd -G -n -d \"$2\" -a $tmp_dir/nocheck $project\n
      \           ;;\n          \"pkg\")\n            echo \"installing with installer...\"\n
      \           cd / && /usr/sbin/installer -pkg \"$2\" -target /\n            ;;\n
      \         \"dmg\")\n            echo \"installing dmg file...\"\n            hdiutil
      detach \"/Volumes/chef_software\" >/dev/null 2>&1 || true\n            hdiutil
      attach \"$2\" -mountpoint \"/Volumes/chef_software\"\n            cd / && /usr/sbin/installer
      -pkg `find \"/Volumes/chef_software\" -name \\*.pkg` -target /\n            hdiutil
      detach \"/Volumes/chef_software\"\n            ;;\n          \"sh\" )\n            echo
      \"installing with sh...\"\n            sh \"$2\"\n            ;;\n          *)\n
      \           echo \"Unknown filetype: $1\"\n            report_bug\n            exit
      1\n            ;;\n        esac\n        if test $? -ne 0; then\n          echo
      \"Installation failed\"\n          report_bug\n          exit 1\n        fi\n
      \     }\n\n      if test \"x$TMPDIR\" = \"x\"; then\n        tmp=\"/tmp\"\n
      \     else\n        tmp=$TMPDIR\n      fi\n      # secure-ish temp dir creation
      without having mktemp available (DDoS-able but not expliotable)\n      tmp_dir=\"$tmp/install.sh.$$\"\n
      \     (umask 077 && mkdir $tmp_dir) || exit 1\n\n      ############\n      #
      end of helpers.sh\n      ############\n\n\n      project=chef\n      version=12.13.21+20160802231230\n
      \     channel=unstable\n\n\n      # platform_detection.sh\n      ############\n
      \     # This section makes platform detection compatible with omnitruck on the
      system\n      #   it runs.\n      #\n      # Outputs:\n      # $platform: Name
      of the platform.\n      # $platform_version: Version of the platform.\n      #
      $machine: System's architecture.\n      ############\n\n      #\n      # Platform
      and Platform Version detection\n      #\n      # NOTE: This should now match
      ohai platform and platform_version matching.\n      # do not invented new platform
      and platform_version schemas, just make this behave\n      # like what ohai
      returns as platform and platform_version for the server.\n      #\n      # ALSO
      NOTE: Do not mangle platform or platform_version here.  It is less error\n      #
      prone and more future-proof to do that in the server, and then all omnitruck
      clients\n      # will 'inherit' the changes (install.sh is not the only client
      of the omnitruck\n      # endpoint out there).\n      #\n\n      machine=`uname
      -m`\n      os=`uname -s`\n\n      if test -f \"/etc/lsb-release\" && grep -q
      DISTRIB_ID /etc/lsb-release && ! grep -q wrlinux /etc/lsb-release; then\n        platform=`grep
      DISTRIB_ID /etc/lsb-release | cut -d \"=\" -f 2 | tr '[A-Z]' '[a-z]'`\n        platform_version=`grep
      DISTRIB_RELEASE /etc/lsb-release | cut -d \"=\" -f 2`\n      elif test -f \"/etc/debian_version\";
      then\n        platform=\"debian\"\n        platform_version=`cat /etc/debian_version`\n
      \     elif test -f \"/etc/redhat-release\"; then\n        platform=`sed 's/^\\(.\\+\\)
      release.*/\\1/' /etc/redhat-release | tr '[A-Z]' '[a-z]'`\n        platform_version=`sed
      's/^.\\+ release \\([.0-9]\\+\\).*/\\1/' /etc/redhat-release`\n\n        # If
      /etc/redhat-release exists, we act like RHEL by default\n        if test \"$platform\"
      = \"fedora\"; then\n          # FIXME: stop remapping fedora to el\n          #
      FIXME: remove client side platform_version mangling and hard coded yolo\n          #
      Change platform version for use below.\n          platform_version=\"6.0\"\n
      \       fi\n\n        if test \"$platform\" = \"xenserver\"; then\n          #
      Current XenServer 6.2 is based on CentOS 5, platform is not reset to \"el\"
      server should hanlde response\n          platform=\"xenserver\"\n        else\n
      \         # FIXME: use \"redhat\"\n          platform=\"el\"\n        fi\n\n
      \     elif test -f \"/etc/system-release\"; then\n        platform=`sed 's/^\\(.\\+\\)
      release.\\+/\\1/' /etc/system-release | tr '[A-Z]' '[a-z]'`\n        platform_version=`sed
      's/^.\\+ release \\([.0-9]\\+\\).*/\\1/' /etc/system-release | tr '[A-Z]' '[a-z]'`\n
      \       # amazon is built off of fedora, so act like RHEL\n        if test \"$platform\"
      = \"amazon linux ami\"; then\n          # FIXME: remove client side platform_version
      mangling and hard coded yolo, and remapping to deprecated \"el\"\n          platform=\"el\"\n
      \         platform_version=\"6.0\"\n        fi\n      # Apple OS X\n      elif
      test -f \"/usr/bin/sw_vers\"; then\n        platform=\"mac_os_x\"\n        #
      Matching the tab-space with sed is error-prone\n        platform_version=`sw_vers
      | awk '/^ProductVersion:/ { print $2 }' | cut -d. -f1,2`\n\n        # x86_64
      Apple hardware often runs 32-bit kernels (see OHAI-63)\n        x86_64=`sysctl
      -n hw.optional.x86_64`\n        if test $x86_64 -eq 1; then\n          machine=\"x86_64\"\n
      \       fi\n      elif test -f \"/etc/release\"; then\n        machine=`/usr/bin/uname
      -p`\n        if grep -q SmartOS /etc/release; then\n          platform=\"smartos\"\n
      \         platform_version=`grep ^Image /etc/product | awk '{ print $3 }'`\n
      \       else\n          platform=\"solaris2\"\n          platform_version=`/usr/bin/uname
      -r`\n        fi\n      elif test -f \"/etc/SuSE-release\"; then\n        if
      grep -q 'Enterprise' /etc/SuSE-release;\n        then\n            platform=\"sles\"\n
      \           platform_version=`awk '/^VERSION/ {V = $3}; /^PATCHLEVEL/ {P = $3};
      END {print V \".\" P}' /etc/SuSE-release`\n        else\n            platform=\"suse\"\n
      \           platform_version=`awk '/^VERSION =/ { print $3 }' /etc/SuSE-release`\n
      \       fi\n      elif test \"x$os\" = \"xFreeBSD\"; then\n        platform=\"freebsd\"\n
      \       platform_version=`uname -r | sed 's/-.*//'`\n      elif test \"x$os\"
      = \"xAIX\"; then\n        platform=\"aix\"\n        platform_version=\"`uname
      -v`.`uname -r`\"\n        machine=\"powerpc\"\n      elif test -f \"/etc/os-release\";
      then\n        . /etc/os-release\n        if test \"x$CISCO_RELEASE_INFO\" !=
      \"x\"; then\n          . $CISCO_RELEASE_INFO\n        fi\n\n        platform=$ID\n
      \       platform_version=$VERSION\n      fi\n\n      if test \"x$platform\"
      = \"x\"; then\n        echo \"Unable to determine platform version!\"\n        report_bug\n
      \       exit 1\n      fi\n\n      #\n      # NOTE: platform manging in the install.sh
      is DEPRECATED\n      #\n      # - install.sh should be true to ohai and should
      not remap\n      #   platform or platform versions.\n      #\n      # - remapping
      platform and mangling platform version numbers is\n      #   now the complete
      responsibility of the server-side endpoints\n      #\n\n      major_version=`echo
      $platform_version | cut -d. -f1`\n      case $platform in\n        # FIXME:
      should remove this case statement completely\n        \"el\")\n          # FIXME:
      \ \"el\" is deprecated, should use \"redhat\"\n          platform_version=$major_version\n
      \         ;;\n        \"debian\")\n          if test \"x$major_version\" = \"x5\";
      then\n            # This is here for potential back-compat.\n            # We
      do not have 5 in versions we publish for anymore but we\n            # might
      have it for earlier versions.\n            platform_version=\"6\"\n          else\n
      \           platform_version=$major_version\n          fi\n          ;;\n        \"freebsd\")\n
      \         platform_version=$major_version\n          ;;\n        \"sles\")\n
      \         platform_version=$major_version\n          ;;\n        \"suse\")\n
      \         platform_version=$major_version\n          ;;\n      esac\n\n      #
      normalize the architecture we detected\n      case $machine in\n        \"x86_64\"|\"amd64\"|\"x64\")\n
      \         machine=\"x86_64\"\n          ;;\n        \"i386\"|\"i86pc\"|\"x86\"|\"i686\")\n
      \         machine=\"i386\"\n          ;;\n        \"sparc\"|\"sun4u\"|\"sun4v\")\n
      \         machine=\"sparc\"\n          ;;\n      esac\n\n      if test \"x$platform_version\"
      = \"x\"; then\n        echo \"Unable to determine platform version!\"\n        report_bug\n
      \       exit 1\n      fi\n\n      if test \"x$platform\" = \"xsolaris2\"; then\n
      \       # hack up the path on Solaris to find wget, pkgadd\n        PATH=/usr/sfw/bin:/usr/sbin:$PATH\n
      \       export PATH\n      fi\n\n      echo \"$platform $platform_version $machine\"\n\n
      \     ############\n      # end of platform_detection.sh\n      ############\n\n\n
      \     # artifactory_urls.sh\n      ############\n      # This section sets up
      the information for a build to be installed from artifactory\n      #  then
      uses $platform, $platform_version and $machine to select the correct\n      #
      \ version.\n      #\n      # Inputs:\n      # $platform:\n      # $platform_version:\n
      \     # $machine:\n      #\n      # Outputs:\n      # $download_url:\n      #
      $sha256:\n      ############\n\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/mac_os_x/10.9/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.9/chef-12.13.21+20160802231230-1.dmg\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/mac_os_x/10.10/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.10/chef-12.13.21+20160802231230-1.dmg\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/mac_os_x/10.11/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.11/chef-12.13.21+20160802231230-1.dmg\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/14.04/ppc64le\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_ppc64el.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 ac910301f0ed899deb1fe00ab067829dc35e4291ebbde5a5b71a62f020c91699\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.10/i386\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.i386.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/el/7/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 58e06ad2bfe6291b37318eea1b313402753118e863671e28178ea60b82260a7e\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.11/i386\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.i386.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/debian/6/i686\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/debian/7/i686\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/el/7/ppc64le\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64le.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 1f9796dfbe38742d0bf4eced3470b9858569fbe0d74866adf2c4eadc3e24f084\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/debian/8/i686\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/el/7/ppc64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 1a5a4f8046459ba77fddca18ba0c72a5507c78845531c9e14909cd1789288c99\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/el/5/i686\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.i386.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 352c4457940eb4788746b419da9aecbfc0139108a942e6457ecc63adf2c21661\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/nexus/7/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/nexus/7/chef-12.13.21+20160802231230-1.nexus7.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 96100a31640ebab2ce87aff3928562d1f41ff89fba22b6b91b2e683043005da1\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/10/i386\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.i386.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 f7846f3961813789e4541dc9ec332208af155f5b009c86136dae6a34787cd438\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/el/6/i686\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.i386.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 0b1589debc9123b0f842c4e6ac2e541a5d60becb716d59c1f450a3f338c8558c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/ios_xr/6/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ios_xr/6/chef-12.13.21+20160802231230-1.ios_xr6.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 70245a37184a31d443e56106f0aaafc07f37a5fa9e527bdfdaa407ab5a3dd12a\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/9/i386\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.i386.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 6dc28814efc61c518a85ae1a7f84da52a2329500a41b392c3b545969e07c05cb\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/el/5/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 38c5e33209e69f9a8595aa9186a1bdd36b457b8f69198eb0bf59ef8a80526123\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/12.04/i686\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/14.04/i686\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/debian/6/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/debian/7/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/debian/8/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/12.04/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/14.04/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/10/amd64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.amd64.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 e833b3bed62715fd1a83b518ebf8049835edf9aa835129b557a001451ec271e3\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/el/6/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 a5b23e1b52741d6f05fcd81485d8879e14b4840801667e153eb83a65abec1968\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/aix/6.1/powerpc\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/6.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/aix/7.1/powerpc\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/7.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/windows/2008r2/i386\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012/i386\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x86.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012r2/i386\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/9/amd64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.amd64.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 8c618c6ba395bc631d59646f052d5e6ebb0fbe8d36db439c81e7524756975973\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/windows/2008r2/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x64.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012r2/x86_64\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.10/sparc\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.sparc.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      >> \"$artifact_info_dir/artifact_info\"\n\n        artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.11/sparc\"\n
      \       mkdir -p $artifact_info_dir\n        touch \"$artifact_info_dir/artifact_info\"\n
      \       echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.sparc.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n        echo \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      >> \"$artifact_info_dir/artifact_info\"\n\n\n      artifact_info_for_platform=\"$tmp_dir/artifact_info/$platform/$platform_version/$machine/artifact_info\"\n\n
      \     download_url=`awk '$1 == \"url\" { print $2 }' \"$artifact_info_for_platform\"`\n
      \     sha256=`awk '$1 == \"sha256\" { print $2 }' \"$artifact_info_for_platform\"`\n\n\n
      \     # fetch_package.sh\n      ############\n      # This section fetchs a
      package from $download_url and verifies its metadata.\n      #\n      # Inputs:\n
      \     # $download_url:\n      # $tmp_dir:\n      # Optional Inputs:\n      #
      $cmdline_filename: Name of the package downloaded on local disk.\n      # $cmdline_dl_dir:
      Name of the directory downloaded package will be saved to on local disk.\n      #\n
      \     # Outputs:\n      # $download_filename: Name of the downloaded file on
      local disk.\n      # $filetype: Type of the file downloaded.\n      ############\n\n
      \     filename=`echo $download_url | sed -e 's/^.*\\///'`\n      filetype=`echo
      $filename | sed -e 's/^.*\\.//'`\n\n      # use either $tmp_dir, the provided
      directory (-d) or the provided filename (-f)\n      if test \"x$cmdline_filename\"
      != \"x\"; then\n        download_filename=\"$cmdline_filename\"\n      elif
      test \"x$cmdline_dl_dir\" != \"x\"; then\n        download_filename=\"$cmdline_dl_dir/$filename\"\n
      \     else\n        download_filename=\"$tmp_dir/$filename\"\n      fi\n\n      #
      ensure the parent directory where to download the installer always exists\n
      \     download_dir=`dirname $download_filename`\n      (umask 077 && mkdir -p
      $download_dir) || exit 1\n\n      # check if we have that file locally available
      and if so verify the checksum\n      cached_file_available=\"false\"\n      if
      test -f $download_filename; then\n        echo \"$download_filename already
      exists, verifiying checksum...\"\n        if do_checksum \"$download_filename\"
      \"$sha256\"; then\n          echo \"checksum compare succeeded, using existing
      file!\"\n          cached_file_available=\"true\"\n        else\n          echo
      \"checksum mismatch, downloading latest version of the file\"\n        fi\n
      \     fi\n\n      # download if no local version of the file available\n      if
      test \"x$cached_file_available\" != \"xtrue\"; then\n        do_download \"$download_url\"
      \ \"$download_filename\"\n        do_checksum \"$download_filename\" \"$sha256\"
      || checksum_mismatch\n      fi\n\n      ############\n      # end of fetch_package.sh\n
      \     ############\n\n\n      # install_package.sh\n      ############\n      #
      Installs a package and removed the temp directory.\n      #\n      # Inputs:\n
      \     # $download_filename: Name of the file to be installed.\n      # $filetype:
      Type of the file to be installed.\n      # $version: The version requested.
      Used only for warning user if not set.\n      ############\n\n      if test
      \"x$version\" = \"x\"; then\n        echo\n        echo \"WARNING WARNING WARNING
      WARNING WARNING WARNING WARNING WARNING WARNING\"\n        echo\n        echo
      \"You are installing an omnibus package without a version pin.  If you are installing\"\n
      \       echo \"on production servers via an automated process this is DANGEROUS
      and you will\"\n        echo \"be upgraded without warning on new releases,
      even to new major releases.\"\n        echo \"Letting the version float is only
      appropriate in desktop, test, development or\"\n        echo \"CI/CD environments.\"\n
      \       echo\n        echo \"WARNING WARNING WARNING WARNING WARNING WARNING
      WARNING WARNING WARNING\"\n        echo\n      fi\n\n      install_file $filetype
      \"$download_filename\"\n\n      if test \"x$tmp_dir\" != \"x\"; then\n        rm
      -r \"$tmp_dir\"\n      fi\n\n      ############\n      # end of install_package.sh\n
      \     ############\n\n      EOL\n      chmod +x /tmp/chef-installer.sh\n      sudo
      -E /tmp/chef-installer.sh)\n             ubuntu 14.04 x86_64\n             downloading
      http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\n
      \              to file /tmp/install.sh.1359/chef_12.13.21+20160802231230-1_amd64.deb\n
      \            trying wget...\n             Comparing checksum with sha256sum...\n
      \            Installing chef 12.13.21+20160802231230\n             installing
      with dpkg...\n             Selecting previously unselected package chef.\n             Waited
      35/300s for instance <i-1b55cab4> to become ready.\n             (Reading database
      ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database
      ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database
      ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database
      ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database
      ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database
      ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database
      ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database
      ... 51172 files and directories currently installed.)\n             Preparing
      to unpack .../chef_12.13.21+20160802231230-1_amd64.deb ...\n             Unpacking
      chef (12.13.21+20160802231230-1) ...\n             Setting up chef (12.13.21+20160802231230-1)
      ...\n             Thank you for installing Chef!\n      D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n      sudo_rm=\"sudo
      -E rm\"\n      dirs=\"/tmp/kitchen/clients /tmp/kitchen/cookbooks /tmp/kitchen/data
      /tmp/kitchen/data_bags /tmp/kitchen/encrypted_data_bag_secret /tmp/kitchen/environments
      /tmp/kitchen/roles\"\n      root_path=\"/tmp/kitchen\"\n\n      $sudo_rm -rf
      $dirs\n      mkdir -p $root_path\n      ')\n             Transferring files
      to <git-default-ubuntu-1404>\n      D      TIMING: scp async upload (Kitchen::Transport::Ssh)\n
      \            Waited 40/300s for instance <i-1b55cab4> to become ready.\n             Waited
      45/300s for instance <i-1b55cab4> to become ready.\n      D      TIMING: scp
      async upload (Kitchen::Transport::Ssh) took (0m9.72s)\n      D      Transfer
      complete\n      D      Attempting to execute command - try 1 of 1.\n      D
      \     [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n      sudo -E
      /opt/chef/bin/chef-client --local-mode --config /tmp/kitchen/client.rb --log_level
      auto --force-formatter --no-color --json-attributes /tmp/kitchen/dna.json --chef-zero-port
      8889\n      ')\n             Starting Chef Client, version 12.13.21\n             Waited
      50/300s for instance <i-1b55cab4> to become ready.\n             Creating a
      new client identity for git-default-ubuntu-1404 using the validator key.\n             resolving
      cookbooks for run list: [\"apt\", \"git\"]\n             Synchronizing Cookbooks:\n
      \              - apt (4.0.1)\n               - git (4.6.0)\n               -
      compat_resource (12.10.7)\n               - build-essential (6.0.3)\n               -
      dmg (2.4.0)\n               - windows (1.44.1)\n               - yum-epel (0.7.0)\n
      \              - seven_zip (2.0.1)\n               - mingw (1.2.4)\n               -
      chef_handler (1.4.0)\n               - yum (3.11.0)\n             Installing
      Cookbook Gems:\n             Compiling Cookbooks...\n             [2016-08-03T02:01:26+00:00]
      WARN: Chef::Provider::AptRepository already exists!  Cannot create deprecation
      class for LWRP provider apt_repository from cookbook apt\n             [2016-08-03T02:01:26+00:00]
      WARN: AptRepository already exists!  Deprecation class overwrites Custom resource
      apt_repository from cookbook apt\n             Converging 10 resources\n             Recipe:
      apt::default\n               * file[/var/lib/apt/periodic/update-success-stamp]
      action nothing (skipped due to action :nothing)\n               * apt_update[periodic]
      action periodic\n                 - update new lists of packages\n                 *
      directory[/var/lib/apt/periodic] action create (up to date)\n                 *
      directory[/etc/apt/apt.conf.d] action create (up to date)\n                 *
      file[/etc/apt/apt.conf.d/15update-stamp] action create_if_missing (up to date)\n
      \            Waited 55/300s for instance <i-1b55cab4> to become ready.\n                 *
      execute[apt-get -q update] action run\n                   - execute apt-get
      -q update\n\n               * execute[apt-get update] action nothing (skipped
      due to action :nothing)\n               * execute[apt-get autoremove] action
      nothing (skipped due to action :nothing)\n               * execute[apt-get autoclean]
      action nothing (skipped due to action :nothing)\n               * directory[/var/cache/local]
      action create\n                 - create new directory /var/cache/local\n                 -
      change mode from '' to '0755'\n                 - change owner from '' to 'root'\n
      \                - change group from '' to 'root'\n               * directory[/var/cache/local/preseeding]
      action create\n                 - create new directory /var/cache/local/preseeding\n
      \                - change mode from '' to '0755'\n                 - change
      owner from '' to 'root'\n                 - change group from '' to 'root'\n
      \              * template[/etc/apt/apt.conf.d/10recommends] action create\n
      \                - create new file /etc/apt/apt.conf.d/10recommends\n                 -
      update content in file /etc/apt/apt.conf.d/10recommends from none to f41e1d\n
      \                --- /etc/apt/apt.conf.d/10recommends  2016-08-03 02:01:34.322014000
      +0000\n                 +++ /etc/apt/apt.conf.d/.chef-10recommends20160803-1526-3bwt00
      \ 2016-08-03 02:01:34.322014000 +0000\n                 @@ -1 +1,4 @@\n                 +#
      Managed by Chef\n                 +APT::Install-Recommends \"1\";\n                 +APT::Install-Suggests
      \"0\";\n                 - change mode from '' to '0644'\n                 -
      change owner from '' to 'root'\n                 - change group from '' to 'root'\n
      \              * apt_package[apt-transport-https] action install (up to date)\n
      \            Recipe: git::package\n               * git_client[default] action
      install\n             Waited 60/300s for instance <i-1b55cab4> to become ready.\n
      \                * apt_package[default :create git] action install\n                   -
      install version 1:1.9.1-1ubuntu0.3 of package git\n\n             Starting audit
      phase\n\n             Finished in 0.00027 seconds (files took 0.2393 seconds
      to load)\n             0 examples, 0 failures\n             Auditing complete\n\n
      \            Running handlers:\n             Running handlers complete\n             Chef
      Client finished, 7/15 resources updated in 15 seconds\n      D      Cleaning
      up local sandbox in /tmp/cheftest/git-default-ubuntu-1404-sandbox-20160803-32371-1dt31m3\n
      \            Finished converging <git-default-ubuntu-1404> (0m38.42s).\n      D
      \     [SSH] shutting previous connection ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n      D      [SSH] closing
      connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n             Waited 65/300s
      for instance <i-1b55cab4> to become ready.\n             Waited 70/300s for
      instance <i-1b55cab4> to become ready.\n             Waited 75/300s for instance
      <i-1b55cab4> to become ready.\n             Waited 80/300s for instance <i-1b55cab4>
      to become ready.\n             Waited 85/300s for instance <i-1b55cab4> to become
      ready.\n             Waited 90/300s for instance <i-1b55cab4> to become ready.\n
      \            Waited 95/300s for instance <i-1b55cab4> to become ready.\n      D
      \     Console output: ---\n      2016/08/03 02:01:50Z: EC2ConfigMonitorState:
      0\n      2016/08/03 02:01:50Z: Windows sysprep configuration complete.\n      2016/08/03
      02:01:53Z: AMI Origin Version: 2016.07.26\n      2016/08/03 02:01:53Z: AMI Origin
      Name: Windows_Server-2012-R2_RTM-English-64Bit-Base\n      2016/08/03 02:01:53Z:
      OS: Microsoft Windows NT 6.3.9600\n      2016/08/03 02:01:53Z: OsVersion: 6.3\n
      \     2016/08/03 02:01:53Z: OsProductName: Windows Server 2012 R2 Standard\n
      \     2016/08/03 02:01:53Z: OsBuildLabEx: 9600.18378.amd64fre.winblue_ltsb.160611-0600\n
      \     2016/08/03 02:01:53Z: Language: en-US\n      2016/08/03 02:01:53Z: TimeZone:
      Coordinated Universal Time\n      2016/08/03 02:01:53Z: Offset: UTC 00:00:00\n
      \     2016/08/03 02:01:53Z: EC2 Agent: Ec2Config service v3.18.1118\n      2016/08/03
      02:01:56Z: Message: Waiting for meta-data accessibility...\n      2016/08/03
      02:01:56Z: Message: Meta-data is now available.\n      2016/08/03 02:01:57Z:
      AMI-ID: ami-2426e944\n      2016/08/03 02:01:57Z: Instance-ID: i-1b55cab4\n
      \     2016/08/03 02:01:59Z: Driver: AWS PV Network Device v7.4.2.0\n      2016/08/03
      02:01:59Z: Driver: AWS PV Storage Host Adapter v7.4.2.0\n      2016/08/03 02:01:59Z:
      Ec2SetPassword: Enabled\n      2016/08/03 02:01:59Z: RDPCERTIFICATE-SUBJECTNAME:
      WIN-S80UEUJGJR0\n      2016/08/03 02:01:59Z: RDPCERTIFICATE-THUMBPRINT: 13A5647F91509F0BCD5959FAC3192B548504422A\n
      \     2016/08/03 02:02:02Z: Username: Administrator\n      2016/08/03 02:02:02Z:
      Password: <Password>\n      tCyeNFWaWBg4OiK8epPxZGWGmqbPP4tIeBpujNR6KOk4Vyx6QFLxWuVDGdydaLoQS683TAaJoiiUOEjon3uKMyH3jPzecZWQdwL78qS29aIeA3nmK7mfyUsYQHA/BXv0ZkzoKfImFO6J4fBTgeFb1i+l9mtlwmgsajiwy7N8VV4TH2nnIVBAid1N6DqkqgCdHBq2BnWrR+3lOULWHEnMNWfp9EN+SwxTSHmtGdrd3TDyMQu5caQltddf8//CuYl/ChfhafkneICPb5O6DyBKUzUWAZyl5iIvPhX9J5VUiTyq6tNkKCkgXWm5PB+Ri0HfFGvaYqAh6NZf/FtzSf1v2A==\n
      \     </Password>\n      2016/08/03 02:02:04Z: Message: Windows is Ready to
      use\n\n             Waited 0/300s for instance <i-1b55cab4> to fetch windows
      admin password.\n             Retrieved Windows password for instance <i-1b55cab4>.\n
      \            EC2 instance <i-1b55cab4> ready.\n      D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      (Write-Host '[WinRM] Established\n      ')\n      D      [WinRM] opening remote
      shell on http://10.194.14.172:5985/wsman\n      D      [WinRM] Waiting for output...\n
      \     D      [WinRM] Processing output\n      D      [WinRM] polling for pipeline
      state. message: #<WinRM::PSRP::Message:0x007f1181e98c90 @data=\"\\xEF\\xBB\\xBF<Obj
      RefId=\\\"0\\\"><MS><Version N=\\\"protocolversion\\\">2.2</Version><Version
      N=\\\"PSVersion\\\">2.0</Version><Version N=\\\"SerializationVersion\\\">1.1.0.1</Version></MS></Obj>\",
      @destination=1, @type=65538, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n      D      [WinRM]
      Waiting for output...\n      D      [WinRM] Processing output\n      D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x007f1181f349d8
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><Obj N=\\\"ApplicationPrivateData\\\"
      RefId=\\\"1\\\"><TN RefId=\\\"0\\\"><T>System.Management.Automation.PSPrimitiveDictionary</T><T>System.Collections.Hashtable</T><T>System.Object</T></TN><DCT><En><S
      N=\\\"Key\\\">DebugMode</S><I32 N=\\\"Value\\\">1</I32></En><En><S N=\\\"Key\\\">DebugStop</S><B
      N=\\\"Value\\\">false</B></En><En><S N=\\\"Key\\\">PSVersionTable</S><Obj N=\\\"Value\\\"
      RefId=\\\"2\\\"><TNRef RefId=\\\"0\\\" /><DCT><En><S N=\\\"Key\\\">PSVersion</S><Version
      N=\\\"Value\\\">2.0</Version></En><En><S N=\\\"Key\\\">PSCompatibleVersions</S><Obj
      N=\\\"Value\\\" RefId=\\\"3\\\"><TN RefId=\\\"1\\\"><T>System.Version[]</T><T>System.Array</T><T>System.Object</T></TN><LST><Version>1.0</Version><Version>2.0</Version><Version>3.0</Version><Version>4.0</Version></LST></Obj></En><En><S
      N=\\\"Key\\\">BuildVersion</S><Version N=\\\"Value\\\">6.3.9600.17400</Version></En><En><S
      N=\\\"Key\\\">CLRVersion</S><Version N=\\\"Value\\\">4.0.30319.42000</Version></En><En><S
      N=\\\"Key\\\">WSManStackVersion</S><Version N=\\\"Value\\\">3.0</Version></En><En><S
      N=\\\"Key\\\">PSRemotingProtocolVersion</S><Version N=\\\"Value\\\">2.2</Version></En><En><S
      N=\\\"Key\\\">SerializationVersion</S><Version N=\\\"Value\\\">1.1.0.1</Version></En></DCT></Obj></En><En><S
      N=\\\"Key\\\">DebugBreakpointCount</S><I32 N=\\\"Value\\\">0</I32></En></DCT></Obj></MS></Obj>\",
      @destination=1, @type=135177, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n      D      [WinRM]
      Waiting for output...\n      D      [WinRM] Processing output\n      D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x007f1181fefa08
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><I32 N=\\\"RunspaceState\\\">2</I32></MS></Obj>\",
      @destination=1, @type=135173, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n      D      [WinRM]
      remote shell created with shell_id: CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D
      \     [WinRM] Command created for Write-Host '[WinRM] Established\n      ' with
      id: EE4C8A9B-BD85-4B8C-BDFD-79A63B57C8C9\n      D      [WinRM] creating command_id:
      EE4C8A9B-BD85-4B8C-BDFD-79A63B57C8C9 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n             [WinRM] Established\n\n      D      [WinRM] cleaning up
      command_id: EE4C8A9B-BD85-4B8C-BDFD-79A63B57C8C9 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] reusing existing connection <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>\n
      \     D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\", :user=>\"administrator\",
      :password=>\"z=7iCL=5rXK\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"z=7iCL=5rXK\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}> (New-Item -Force C:\\chef\\ohai\\hints\\ec2.json -ItemType
      File)\n      D      [WinRM] Command created for New-Item -Force C:\\chef\\ohai\\hints\\ec2.json
      -ItemType File with id: 682872E7-4158-4BF8-8D3E-46B42AE5406F\n      D      [WinRM]
      creating command_id: 682872E7-4158-4BF8-8D3E-46B42AE5406F on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n\n\n                 Directory: C:\\chef\\ohai\\hints\n\n\n             Mode
      \               LastWriteTime     Length Name\n             ----                -------------
      \    ------ ----\n             -a---          8/3/2016   2:02 AM          0
      ec2.json\n\n\n      D      [WinRM] cleaning up command_id: 682872E7-4158-4BF8-8D3E-46B42AE5406F
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      ec2:create '10.194.14.172'\n
      \            Finished creating <git-default-windows-windows-2012r2> (2m16.45s).\n
      \     -----> Converging <git-default-windows-windows-2012r2>...\n             Preparing
      files for transfer\n      D      Creating local sandbox in /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu\n
      \            Preparing dna.json\n      D      Creating dna.json from {:chef_acceptance=>\"true\",
      :use_system_chef=>\"true\", :run_list=>[\"recipe[git]\"]}\n             Resolving
      cookbook dependencies with Berkshelf 4.3.5...\n      D      Using Berksfile
      from /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile\n
      \            Removing non-cookbook files before transfer\n             Preparing
      validation.pem\n      D      Using a dummy validation.pem\n             Preparing
      client.rb\n      D      Creating client.rb from {:node_name=>\"git-default-windows-windows-2012r2\",
      :checksum_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\checksums\", :file_cache_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\cache\",
      :file_backup_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\backup\", :cookbook_path=>[\"\\#{ENV['TEMP']}\\\\kitchen\\\\cookbooks\",
      \"\\#{ENV['TEMP']}\\\\kitchen\\\\site-cookbooks\"], :data_bag_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\data_bags\",
      :environment_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\environments\", :node_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\nodes\",
      :role_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\roles\", :client_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\clients\",
      :user_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\users\", :validation_key=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\validation.pem\",
      :client_key=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\client.pem\", :chef_server_url=>\"http://127.0.0.1:8889\",
      :encrypted_data_bag_secret=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\encrypted_data_bag_secret\",
      :audit_mode=>\":enabled\", :named_run_list=>{}}\n      D      [WinRM] reusing
      existing connection <{:endpoint=>\"http://10.194.14.172:5985/wsman\", :user=>\"administrator\",
      :password=>\"z=7iCL=5rXK\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"z=7iCL=5rXK\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}>\n      D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      (new-module -name Omnitruck -scriptblock {\n      function Get-PlatformVersion
      {\n        switch -regex ((get-wmiobject win32_operatingsystem).version) {\n
      \         '10\\.0\\.\\d+' {$platform_version = '2012r2'}\n          '6\\.3\\.\\d+'
      \ {$platform_version = '2012r2'}\n          '6\\.2\\.\\d+'  {$platform_version
      = '2012'}\n          '6\\.1\\.\\d+'  {$platform_version = '2008r2'}\n          '6\\.0\\.\\d+'
      \ {$platform_version = '2008'}\n        }\n        return $platform_version\n
      \     }\n\n      function Get-PlatformArchitecture {\n        if ((get-wmiobject
      win32_operatingsystem).osarchitecture -like '64-bit') {\n          $architecture
      = 'x86_64'\n        } else {\n          $architecture = 'i386'\n        }\n
      \       return $architecture\n      }\n\n      function New-Uri {\n        param
      ($baseuri, $newuri)\n\n        try {\n        new-object System.Uri $baseuri,
      $newuri\n        }\n        catch [System.Management.Automation.MethodInvocationException]{\n
      \         Write-Error \"$($_.exception.message)\"\n          throw $_.exception\n
      \       }\n      }\n\n      function Get-WebContent {\n        param ($uri,
      $filepath)\n        $proxy = New-Object -TypeName System.Net.WebProxy\n        $wc
      = new-object System.Net.WebClient\n        $proxy.Address = $env:http_proxy\n
      \       $wc.Proxy = $proxy\n\n        try {\n          if ([string]::IsNullOrEmpty($filepath))
      {\n            $wc.downloadstring($uri)\n          }\n          else {\n            $wc.downloadfile($uri,
      $filepath)\n          }\n        }\n        catch {\n          $exception =
      $_.Exception\n          Write-Host \"There was an error: \"\n          do {\n
      \           Write-Host \"`t$($exception.message)\"\n            $exception =
      $exception.innerexception\n          } while ($exception)\n          throw \"Failed
      to download from $uri.\"\n        }\n      }\n\n      function Test-ProjectPackage
      {\n        [cmdletbinding()]\n        param ($Path, $Algorithm = 'SHA256', $Hash)\n\n
      \       if (-not (get-command get-filehash))   {\n          function disposable($o){($o
      -is [IDisposable]) -and (($o | get-member | foreach-object {$_.name}) -contains
      'Dispose')}\n          function use($obj, [scriptblock]$sb){try {& $sb} catch
      [exception]{throw $_} finally {if (disposable $obj) {$obj.Dispose()}} }\n          function
      Get-FileHash ($Path, $Algorithm) {\n            $Path = (resolve-path $path).providerpath\n
      \           $hash = @{Algorithm = $Algorithm; Path = $Path}\n            use
      ($c = New-Object -TypeName Security.Cryptography.SHA256Managed) {\n              use
      ($in = (gi $path).OpenRead()) {\n                $hash.Hash = ([BitConverter]::ToString($c.ComputeHash($in))).Replace(\"-\",
      \"\").ToUpper()\n              }\n            }\n            new-object PSObject
      -Property $hash\n          }\n        }\n        Write-Verbose \"Testing the
      $Algorithm hash for $path.\"\n        $ActualHash = (Get-FileHash -Algorithm
      $Algorithm -Path $Path).Hash.ToLower()\n        Write-Verbose \"`tDesired Hash
      - '$hash'\"\n        Write-Verbose \"`tActual Hash  - '$ActualHash'\"\n        $Valid
      = $ActualHash -eq $Hash\n        if (-not $Valid) {\n          Write-Error \"Failed
      to validate the downloaded installer.  The expected $Algorithm hash was '$Hash'
      and the actual hash was '$ActualHash' for $path\"\n        }\n        return
      $Valid\n      }\n\n      function Get-ProjectMetadata {\n        <#\n          .SYNOPSIS\n
      \         Get metadata for a Chef Software, Inc. project\n          .DESCRIPTION\n
      \         Get metadata for project\n          .EXAMPLE\n          iex (new-object
      net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1'); Get-ProjectMetadata
      -project chef -channel stable\n\n          Gets the download url and SHA256
      checksum for the latest stable release of Chef.\n          .EXAMPLE\n          iex
      (irm 'https://omnitruck.chef.io/install.ps1'); Get-ProjectMetadata -project
      chefdk -channel stable -version 0.8.0\n\n          Gets the download url, and
      SHA256 checksum for ChefDK 0.8.0.\n        #>\n        [cmdletbinding()]\n        param
      (\n          # Base url to retrieve metadata from.\n          [uri]$base_server_uri
      = 'https://omnitruck.chef.io/',\n          [string]\n          # Project to
      install\n          [string]\n          $project = 'chef',\n          # Version
      of the application to install\n          # This parameter is optional, if not
      supplied it will provide the latest version,\n          # and if an iteration
      number is not specified, it will grab the latest available iteration.\n          #
      Partial version numbers are also acceptable (using v=11\n          # will grab
      the latest 11.x client which matches the other flags).\n          [string]\n
      \         $version,\n          # Release channel to install from\n          $channel
      = 'unstable',\n          # The following legacy switches are just aliases for
      the current channel\n          [switch]\n          $prerelease,\n          [switch]\n
      \         $nightlies,\n          [validateset('auto', 'i386', 'x86_64')]\n          [string]\n
      \         $architecture = 'auto'\n        )\n\n        # PowerShell is only
      on Windows ATM\n        $platform = 'windows'\n        Write-Verbose \"Platform:
      $platform\"\n\n        $platform_version = Get-PlatformVersion\n        Write-Verbose
      \"Platform Version: $platform_version\"\n\n        if ($architecture -eq 'auto')
      {\n          $architecture = Get-PlatformArchitecture\n        }\n\n        Write-Verbose
      \"Architecture: $architecture\"\n        Write-Verbose \"Project: $project\"\n\n\n
      \         $artifact_info_dir = \"$($env:temp)/artifact_info/mac_os_x/10.9/x86_64\"\n
      \         New-Item -ItemType directory -Path $artifact_info_dir -force\n          New-Item
      -ItemType file \"$($artifact_info_dir)/artifact_info\" -force\n          \"url
      http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.9/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.10/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.10/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.11/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.11/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/ppc64le\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_ppc64el.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 ac910301f0ed899deb1fe00ab067829dc35e4291ebbde5a5b71a62f020c91699\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/x86_64\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 58e06ad2bfe6291b37318eea1b313402753118e863671e28178ea60b82260a7e\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/i686\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/i686\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64le\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64le.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 1f9796dfbe38742d0bf4eced3470b9858569fbe0d74866adf2c4eadc3e24f084\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/i686\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 1a5a4f8046459ba77fddca18ba0c72a5507c78845531c9e14909cd1789288c99\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/i686\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 352c4457940eb4788746b419da9aecbfc0139108a942e6457ecc63adf2c21661\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/nexus/7/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/nexus/7/chef-12.13.21+20160802231230-1.nexus7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 96100a31640ebab2ce87aff3928562d1f41ff89fba22b6b91b2e683043005da1\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 f7846f3961813789e4541dc9ec332208af155f5b009c86136dae6a34787cd438\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/i686\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 0b1589debc9123b0f842c4e6ac2e541a5d60becb716d59c1f450a3f338c8558c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ios_xr/6/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ios_xr/6/chef-12.13.21+20160802231230-1.ios_xr6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 70245a37184a31d443e56106f0aaafc07f37a5fa9e527bdfdaa407ab5a3dd12a\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 6dc28814efc61c518a85ae1a7f84da52a2329500a41b392c3b545969e07c05cb\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/x86_64\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 38c5e33209e69f9a8595aa9186a1bdd36b457b8f69198eb0bf59ef8a80526123\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/i686\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/i686\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/amd64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 e833b3bed62715fd1a83b518ebf8049835edf9aa835129b557a001451ec271e3\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/x86_64\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a5b23e1b52741d6f05fcd81485d8879e14b4840801667e153eb83a65abec1968\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/6.1/powerpc\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/6.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/7.1/powerpc\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/7.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/amd64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 8c618c6ba395bc631d59646f052d5e6ebb0fbe8d36db439c81e7524756975973\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/sparc\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/sparc\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n\n        $artifact_info_for_platform
      = Get-Content \"$($env:temp)/artifact_info/$($platform)/$($platform_version)/$($architecture)/artifact_info\"\n\n
      \       $package_metadata = ($artifact_info_for_platform).trim() -split '\\n'
      |\n          foreach { $hash = @{} } {$key, $value = $_ -split '\\s+'; $hash.Add($key,
      $value)} {$hash}\n\n        Write-Verbose \"Project details: \"\n        foreach
      ($key in $package_metadata.keys) {\n          Write-Verbose \"`t$key = $($package_metadata[$key])\"\n
      \       }\n        $package_metadata\n      }\n\n      function Install-Project
      {\n        <#\n          .SYNOPSIS\n          Install a Chef Software, Inc.
      product\n          .DESCRIPTION\n          Install a Chef Software, Inc. product\n
      \         .EXAMPLE\n          iex (new-object net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1');
      Install-Project -project chef -channel stable\n\n          Installs the latest
      stable version of Chef.\n          .EXAMPLE\n          iex (irm 'https://omnitruck.chef.io/install.ps1');
      Install-Project -project chefdk -channel current\n\n          Installs the latest
      integration build of the Chef Development Kit\n        #>\n        [cmdletbinding(SupportsShouldProcess=$true)]\n
      \       param (\n          # Project to install\n          [string]\n          $project
      = 'chef',\n          # Release channel to install from\n          [validateset('current',
      'stable', 'unstable')]\n          [string]\n          $channel = 'stable',\n
      \         # Version of the application to install\n          # This parameter
      is optional, if not supplied it will provide the latest version,\n          #
      and if an iteration number is not specified, it will grab the latest available
      iteration.\n          # Partial version numbers are also acceptable (using v=11\n
      \         # will grab the latest 11.x client which matches the other flags).\n
      \         [string]\n          $version,\n          # Full path for the downloaded
      installer.\n          [string]\n          $filename,\n          # Full path
      to the location to download the installer\n          [string]\n          $download_directory
      = $env:temp,\n          # The following legacy switches are just aliases for
      the current channel\n          [switch]\n          $prerelease,\n          [switch]\n
      \         $nightlies,\n          [validateset('auto', 'i386', 'x86_64')]\n          [string]\n
      \         $architecture = 'auto'\n        )\n\n        $package_metadata = Get-ProjectMetadata
      -project $project -channel $channel -version $version -prerelease:$prerelease
      -nightlies:$nightlies -architecture $architecture\n\n        if (-not [string]::IsNullOrEmpty($filename))
      {\n          $download_directory = split-path $filename\n          $filename
      = split-path $filename -leaf\n          if ([string]::IsNullOrEmpty($download_directory))
      {\n            $download_directory = $pwd\n          }\n        }\n        else
      {\n          $filename = ($package_metadata.url -split '/')[-1]\n        }\n
      \       Write-Verbose \"Download directory: $download_directory\"\n        Write-Verbose
      \"Filename: $filename\"\n\n        if (-not (test-path $download_directory))
      {\n          mkdir $download_directory\n        }\n        $download_directory
      = (resolve-path $download_directory).providerpath\n        $download_destination
      = join-path $download_directory $filename\n\n        if ((test-path $download_destination)
      -and\n          (Test-ProjectPackage -Path $download_destination -Algorithm
      'SHA256' -Hash $package_metadata.sha256 -ea SilentlyContinue)){\n          Write-Verbose
      \"Found existing valid installer at $download_destination.\"\n        }\n        else
      {\n          if ($pscmdlet.ShouldProcess(\"$($package_metadata.url)\", \"Download
      $project\")) {\n            Write-Verbose \"Downloading $project from $($package_metadata.url)
      to $download_destination.\"\n            Get-WebContent $package_metadata.url
      -filepath $download_destination\n          }\n        }\n\n        if ($pscmdlet.ShouldProcess(\"$download_destination\",
      \"Installing\")){\n          if (Test-ProjectPackage -Path $download_destination
      -Algorithm 'SHA256' -Hash $package_metadata.sha256) {\n            Write-Host
      \"Installing $project from $download_destination\"\n            $installingProject
      = $True\n            $installAttempts = 0\n            while ($installingProject)
      {\n              $p = Start-Process -FilePath \"msiexec\" -ArgumentList \"/qn
      /i $download_destination\" -Passthru -Wait\n              $p.WaitForExit()\n
      \             if ($p.ExitCode -eq 1618) {\n                Write-Host \"Another
      msi install is in progress (exit code 1618), retrying ($($installAttempts))...\"\n
      \               continue\n              } elseif ($p.ExitCode -ne 0) {\n                throw
      \"msiexec was not successful. Received exit code $($p.ExitCode)\"\n              }\n
      \             $installingProject = $False\n            }\n          }\n          else
      {\n            throw \"Failed to validate the downloaded installer for $project.\"\n
      \         }\n        }\n      }\n      set-alias install -value Install-Project\n
      \     export-modulemember -function 'Install-Project','Get-ProjectMetadata'
      -alias 'install'\n\n      }\n\n      install -project chef -version 12.13.21+20160802231230
      -channel unstable\n      )\n      D      [WinRM] Command created for new-module
      -name Omnitruck -scriptblock {\n      function Get-PlatformVersion {\n        switch
      -regex ((get-wmiobject win32_operatingsystem).version) {\n          '10\\.0\\.\\d+'
      {$platform_version = '2012r2'}\n          '6\\.3\\.\\d+'  {$platform_version
      = '2012r2'}\n          '6\\.2\\.\\d+'  {$platform_version = '2012'}\n          '6\\.1\\.\\d+'
      \ {$platform_version = '2008r2'}\n          '6\\.0\\.\\d+'  {$platform_version
      = '2008'}\n        }\n        return $platform_version\n      }\n\n      function
      Get-PlatformArchitecture {\n        if ((get-wmiobject win32_operatingsystem).osarchitecture
      -like '64-bit') {\n          $architecture = 'x86_64'\n        } else {\n          $architecture
      = 'i386'\n        }\n        return $architecture\n      }\n\n      function
      New-Uri {\n        param ($baseuri, $newuri)\n\n        try {\n        new-object
      System.Uri $baseuri, $newuri\n        }\n        catch [System.Management.Automation.MethodInvocationException]{\n
      \         Write-Error \"$($_.exception.message)\"\n          throw $_.exception\n
      \       }\n      }\n\n      function Get-WebContent {\n        param ($uri,
      $filepath)\n        $proxy = New-Object -TypeName System.Net.WebProxy\n        $wc
      = new-object System.Net.WebClient\n        $proxy.Address = $env:http_proxy\n
      \       $wc.Proxy = $proxy\n\n        try {\n          if ([string]::IsNullOrEmpty($filepath))
      {\n            $wc.downloadstring($uri)\n          }\n          else {\n            $wc.downloadfile($uri,
      $filepath)\n          }\n        }\n        catch {\n          $exception =
      $_.Exception\n          Write-Host \"There was an error: \"\n          do {\n
      \           Write-Host \"`t$($exception.message)\"\n            $exception =
      $exception.innerexception\n          } while ($exception)\n          throw \"Failed
      to download from $uri.\"\n        }\n      }\n\n      function Test-ProjectPackage
      {\n        [cmdletbinding()]\n        param ($Path, $Algorithm = 'SHA256', $Hash)\n\n
      \       if (-not (get-command get-filehash))   {\n          function disposable($o){($o
      -is [IDisposable]) -and (($o | get-member | foreach-object {$_.name}) -contains
      'Dispose')}\n          function use($obj, [scriptblock]$sb){try {& $sb} catch
      [exception]{throw $_} finally {if (disposable $obj) {$obj.Dispose()}} }\n          function
      Get-FileHash ($Path, $Algorithm) {\n            $Path = (resolve-path $path).providerpath\n
      \           $hash = @{Algorithm = $Algorithm; Path = $Path}\n            use
      ($c = New-Object -TypeName Security.Cryptography.SHA256Managed) {\n              use
      ($in = (gi $path).OpenRead()) {\n                $hash.Hash = ([BitConverter]::ToString($c.ComputeHash($in))).Replace(\"-\",
      \"\").ToUpper()\n              }\n            }\n            new-object PSObject
      -Property $hash\n          }\n        }\n        Write-Verbose \"Testing the
      $Algorithm hash for $path.\"\n        $ActualHash = (Get-FileHash -Algorithm
      $Algorithm -Path $Path).Hash.ToLower()\n        Write-Verbose \"`tDesired Hash
      - '$hash'\"\n        Write-Verbose \"`tActual Hash  - '$ActualHash'\"\n        $Valid
      = $ActualHash -eq $Hash\n        if (-not $Valid) {\n          Write-Error \"Failed
      to validate the downloaded installer.  The expected $Algorithm hash was '$Hash'
      and the actual hash was '$ActualHash' for $path\"\n        }\n        return
      $Valid\n      }\n\n      function Get-ProjectMetadata {\n        <#\n          .SYNOPSIS\n
      \         Get metadata for a Chef Software, Inc. project\n          .DESCRIPTION\n
      \         Get metadata for project\n          .EXAMPLE\n          iex (new-object
      net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1'); Get-ProjectMetadata
      -project chef -channel stable\n\n          Gets the download url and SHA256
      checksum for the latest stable release of Chef.\n          .EXAMPLE\n          iex
      (irm 'https://omnitruck.chef.io/install.ps1'); Get-ProjectMetadata -project
      chefdk -channel stable -version 0.8.0\n\n          Gets the download url, and
      SHA256 checksum for ChefDK 0.8.0.\n        #>\n        [cmdletbinding()]\n        param
      (\n          # Base url to retrieve metadata from.\n          [uri]$base_server_uri
      = 'https://omnitruck.chef.io/',\n          [string]\n          # Project to
      install\n          [string]\n          $project = 'chef',\n          # Version
      of the application to install\n          # This parameter is optional, if not
      supplied it will provide the latest version,\n          # and if an iteration
      number is not specified, it will grab the latest available iteration.\n          #
      Partial version numbers are also acceptable (using v=11\n          # will grab
      the latest 11.x client which matches the other flags).\n          [string]\n
      \         $version,\n          # Release channel to install from\n          $channel
      = 'unstable',\n          # The following legacy switches are just aliases for
      the current channel\n          [switch]\n          $prerelease,\n          [switch]\n
      \         $nightlies,\n          [validateset('auto', 'i386', 'x86_64')]\n          [string]\n
      \         $architecture = 'auto'\n        )\n\n        # PowerShell is only
      on Windows ATM\n        $platform = 'windows'\n        Write-Verbose \"Platform:
      $platform\"\n\n        $platform_version = Get-PlatformVersion\n        Write-Verbose
      \"Platform Version: $platform_version\"\n\n        if ($architecture -eq 'auto')
      {\n          $architecture = Get-PlatformArchitecture\n        }\n\n        Write-Verbose
      \"Architecture: $architecture\"\n        Write-Verbose \"Project: $project\"\n\n\n
      \         $artifact_info_dir = \"$($env:temp)/artifact_info/mac_os_x/10.9/x86_64\"\n
      \         New-Item -ItemType directory -Path $artifact_info_dir -force\n          New-Item
      -ItemType file \"$($artifact_info_dir)/artifact_info\" -force\n          \"url
      http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.9/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.10/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.10/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.11/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.11/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/ppc64le\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_ppc64el.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 ac910301f0ed899deb1fe00ab067829dc35e4291ebbde5a5b71a62f020c91699\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/x86_64\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 58e06ad2bfe6291b37318eea1b313402753118e863671e28178ea60b82260a7e\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/i686\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/i686\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64le\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64le.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 1f9796dfbe38742d0bf4eced3470b9858569fbe0d74866adf2c4eadc3e24f084\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/i686\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 1a5a4f8046459ba77fddca18ba0c72a5507c78845531c9e14909cd1789288c99\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/i686\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 352c4457940eb4788746b419da9aecbfc0139108a942e6457ecc63adf2c21661\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/nexus/7/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/nexus/7/chef-12.13.21+20160802231230-1.nexus7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 96100a31640ebab2ce87aff3928562d1f41ff89fba22b6b91b2e683043005da1\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 f7846f3961813789e4541dc9ec332208af155f5b009c86136dae6a34787cd438\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/i686\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 0b1589debc9123b0f842c4e6ac2e541a5d60becb716d59c1f450a3f338c8558c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ios_xr/6/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ios_xr/6/chef-12.13.21+20160802231230-1.ios_xr6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 70245a37184a31d443e56106f0aaafc07f37a5fa9e527bdfdaa407ab5a3dd12a\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 6dc28814efc61c518a85ae1a7f84da52a2329500a41b392c3b545969e07c05cb\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/x86_64\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 38c5e33209e69f9a8595aa9186a1bdd36b457b8f69198eb0bf59ef8a80526123\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/i686\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/i686\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/amd64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 e833b3bed62715fd1a83b518ebf8049835edf9aa835129b557a001451ec271e3\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/x86_64\"\n          New-Item -ItemType directory
      -Path $artifact_info_dir -force\n          New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 a5b23e1b52741d6f05fcd81485d8879e14b4840801667e153eb83a65abec1968\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/6.1/powerpc\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/6.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/7.1/powerpc\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/7.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/i386\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/amd64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 8c618c6ba395bc631d59646f052d5e6ebb0fbe8d36db439c81e7524756975973\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/x86_64\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/sparc\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n          $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/sparc\"\n          New-Item -ItemType
      directory -Path $artifact_info_dir -force\n          New-Item -ItemType file
      \"$($artifact_info_dir)/artifact_info\" -force\n          \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n          \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n\n        $artifact_info_for_platform
      = Get-Content \"$($env:temp)/artifact_info/$($platform)/$($platform_version)/$($architecture)/artifact_info\"\n\n
      \       $package_metadata = ($artifact_info_for_platform).trim() -split '\\n'
      |\n          foreach { $hash = @{} } {$key, $value = $_ -split '\\s+'; $hash.Add($key,
      $value)} {$hash}\n\n        Write-Verbose \"Project details: \"\n        foreach
      ($key in $package_metadata.keys) {\n          Write-Verbose \"`t$key = $($package_metadata[$key])\"\n
      \       }\n        $package_metadata\n      }\n\n      function Install-Project
      {\n        <#\n          .SYNOPSIS\n          Install a Chef Software, Inc.
      product\n          .DESCRIPTION\n          Install a Chef Software, Inc. product\n
      \         .EXAMPLE\n          iex (new-object net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1');
      Install-Project -project chef -channel stable\n\n          Installs the latest
      stable version of Chef.\n          .EXAMPLE\n          iex (irm 'https://omnitruck.chef.io/install.ps1');
      Install-Project -project chefdk -channel current\n\n          Installs the latest
      integration build of the Chef Development Kit\n        #>\n        [cmdletbinding(SupportsShouldProcess=$true)]\n
      \       param (\n          # Project to install\n          [string]\n          $project
      = 'chef',\n          # Release channel to install from\n          [validateset('current',
      'stable', 'unstable')]\n          [string]\n          $channel = 'stable',\n
      \         # Version of the application to install\n          # This parameter
      is optional, if not supplied it will provide the latest version,\n          #
      and if an iteration number is not specified, it will grab the latest available
      iteration.\n          # Partial version numbers are also acceptable (using v=11\n
      \         # will grab the latest 11.x client which matches the other flags).\n
      \         [string]\n          $version,\n          # Full path for the downloaded
      installer.\n          [string]\n          $filename,\n          # Full path
      to the location to download the installer\n          [string]\n          $download_directory
      = $env:temp,\n          # The following legacy switches are just aliases for
      the current channel\n          [switch]\n          $prerelease,\n          [switch]\n
      \         $nightlies,\n          [validateset('auto', 'i386', 'x86_64')]\n          [string]\n
      \         $architecture = 'auto'\n        )\n\n        $package_metadata = Get-ProjectMetadata
      -project $project -channel $channel -version $version -prerelease:$prerelease
      -nightlies:$nightlies -architecture $architecture\n\n        if (-not [string]::IsNullOrEmpty($filename))
      {\n          $download_directory = split-path $filename\n          $filename
      = split-path $filename -leaf\n          if ([string]::IsNullOrEmpty($download_directory))
      {\n            $download_directory = $pwd\n          }\n        }\n        else
      {\n          $filename = ($package_metadata.url -split '/')[-1]\n        }\n
      \       Write-Verbose \"Download directory: $download_directory\"\n        Write-Verbose
      \"Filename: $filename\"\n\n        if (-not (test-path $download_directory))
      {\n          mkdir $download_directory\n        }\n        $download_directory
      = (resolve-path $download_directory).providerpath\n        $download_destination
      = join-path $download_directory $filename\n\n        if ((test-path $download_destination)
      -and\n          (Test-ProjectPackage -Path $download_destination -Algorithm
      'SHA256' -Hash $package_metadata.sha256 -ea SilentlyContinue)){\n          Write-Verbose
      \"Found existing valid installer at $download_destination.\"\n        }\n        else
      {\n          if ($pscmdlet.ShouldProcess(\"$($package_metadata.url)\", \"Download
      $project\")) {\n            Write-Verbose \"Downloading $project from $($package_metadata.url)
      to $download_destination.\"\n            Get-WebContent $package_metadata.url
      -filepath $download_destination\n          }\n        }\n\n        if ($pscmdlet.ShouldProcess(\"$download_destination\",
      \"Installing\")){\n          if (Test-ProjectPackage -Path $download_destination
      -Algorithm 'SHA256' -Hash $package_metadata.sha256) {\n            Write-Host
      \"Installing $project from $download_destination\"\n            $installingProject
      = $True\n            $installAttempts = 0\n            while ($installingProject)
      {\n              $p = Start-Process -FilePath \"msiexec\" -ArgumentList \"/qn
      /i $download_destination\" -Passthru -Wait\n              $p.WaitForExit()\n
      \             if ($p.ExitCode -eq 1618) {\n                Write-Host \"Another
      msi install is in progress (exit code 1618), retrying ($($installAttempts))...\"\n
      \               continue\n              } elseif ($p.ExitCode -ne 0) {\n                throw
      \"msiexec was not successful. Received exit code $($p.ExitCode)\"\n              }\n
      \             $installingProject = $False\n            }\n          }\n          else
      {\n            throw \"Failed to validate the downloaded installer for $project.\"\n
      \         }\n        }\n      }\n      set-alias install -value Install-Project\n
      \     export-modulemember -function 'Install-Project','Get-ProjectMetadata'
      -alias 'install'\n\n      }\n\n      install -project chef -version 12.13.21+20160802231230
      -channel unstable\n       with id: 0BB63762-BA47-4D3B-82E8-97C4F7DEB299\n      D
      \     [WinRM] creating command_id: 0BB63762-BA47-4D3B-82E8-97C4F7DEB299 on shell_id
      CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Waiting for output...\n
      \     D      [WinRM] Processing output\n\n             ModuleType Version    Name
      \                               ExportedCommands\n             ---------- -------
      \   ----                                ----------------\n             Script
      \    0.0        Omnitruck                           {Get-ProjectMetada...\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n             Installing chef from C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\chef-client-12.13.21+20160802231230-1-x64.msi\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] retrying receive
      request after timeout\n      D      [WinRM] Processing output\n\n\n      D      [WinRM]
      cleaning up command_id: 0BB63762-BA47-4D3B-82E8-97C4F7DEB299 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\", :user=>\"administrator\",
      :password=>\"z=7iCL=5rXK\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"z=7iCL=5rXK\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}> ($dirs = @(\"$env:TEMP\\kitchen\\clients\", \"$env:TEMP\\kitchen\\cookbooks\",
      \"$env:TEMP\\kitchen\\data\", \"$env:TEMP\\kitchen\\data_bags\", \"$env:TEMP\\kitchen\\encrypted_data_bag_secret\",
      \"$env:TEMP\\kitchen\\environments\", \"$env:TEMP\\kitchen\\roles\")\n      $root_path
      = \"$env:TEMP\\kitchen\"\n\n      Function Delete-AllDirs($dirs) {\n        $dirs
      | ForEach-Object {\n          if (Test-Path ($path = Unresolve-Path $_)) { Remove-Item
      $path -Recurse -Force }\n        }\n      }\n\n      Function Unresolve-Path($p)
      {\n        if ($p -eq $null) { return $null }\n        else { return $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($p)
      }\n      }\n\n      Function Make-RootPath($p) {\n        $p = Unresolve-Path
      $p\n        if (-Not (Test-Path $p)) { New-Item $p -ItemType directory | Out-Null
      }\n      }\n\n      Delete-AllDirs $dirs\n      Make-RootPath $root_path\n      )\n
      \     D      [WinRM] Command created for $dirs = @(\"$env:TEMP\\kitchen\\clients\",
      \"$env:TEMP\\kitchen\\cookbooks\", \"$env:TEMP\\kitchen\\data\", \"$env:TEMP\\kitchen\\data_bags\",
      \"$env:TEMP\\kitchen\\encrypted_data_bag_secret\", \"$env:TEMP\\kitchen\\environments\",
      \"$env:TEMP\\kitchen\\roles\")\n      $root_path = \"$env:TEMP\\kitchen\"\n\n
      \     Function Delete-AllDirs($dirs) {\n        $dirs | ForEach-Object {\n          if
      (Test-Path ($path = Unresolve-Path $_)) { Remove-Item $path -Recurse -Force
      }\n        }\n      }\n\n      Function Unresolve-Path($p) {\n        if ($p
      -eq $null) { return $null }\n        else { return $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($p)
      }\n      }\n\n      Function Make-RootPath($p) {\n        $p = Unresolve-Path
      $p\n        if (-Not (Test-Path $p)) { New-Item $p -ItemType directory | Out-Null
      }\n      }\n\n      Delete-AllDirs $dirs\n      Make-RootPath $root_path\n       with
      id: 54297A10-98A6-4E65-8514-5208FC20AAB9\n      D      [WinRM] creating command_id:
      54297A10-98A6-4E65-8514-5208FC20AAB9 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 54297A10-98A6-4E65-8514-5208FC20AAB9
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n             Transferring
      files to <git-default-windows-windows-2012r2>\n      D      creating hash for
      file $env:TEMP\\kitchen\n      D      creating hash for file $env:TEMP\\kitchen\n
      \     D      creating hash for directory $env:TEMP\\kitchen\n      D      Populating
      files\n      D      === All files added.\n      D      creating hash for file
      $env:TEMP\\kitchen\n      D      creating hash for directory $env:TEMP\\kitchen\n
      \     D      Populating files\n      D      +++ Adding apt/README.md\n      D
      \     +++ Adding apt/attributes/default.rb\n      D      +++ Adding apt/files/default/15update-stamp\n
      \     D      +++ Adding apt/files/default/apt-proxy-v2.conf\n      D      +++
      Adding apt/libraries/apt_update.rb\n      D      +++ Adding apt/libraries/helpers.rb\n
      \     D      +++ Adding apt/libraries/matchers.rb\n      D      +++ Adding apt/libraries/network.rb\n
      \     D      +++ Adding apt/metadata.json\n      D      +++ Adding apt/providers/preference.rb\n
      \     D      +++ Adding apt/providers/repository.rb\n      D      +++ Adding
      apt/recipes/cacher-client.rb\n      D      +++ Adding apt/recipes/cacher-ng.rb\n
      \     D      +++ Adding apt/recipes/default.rb\n      D      +++ Adding apt/recipes/unattended-upgrades.rb\n
      \     D      +++ Adding apt/resources/preference.rb\n      D      +++ Adding
      apt/resources/repository.rb\n      D      +++ Adding apt/templates/default/01proxy.erb\n
      \     D      +++ Adding apt/templates/default/10recommends.erb\n      D      +++
      Adding apt/templates/default/20auto-upgrades.erb\n      D      +++ Adding apt/templates/default/50unattended-upgrades.erb\n
      \     D      +++ Adding apt/templates/default/acng.conf.erb\n      D      +++
      Adding apt/templates/default/unattended-upgrades.seed.erb\n      D      +++
      Adding build-essential/README.md\n      D      +++ Adding build-essential/attributes/default.rb\n
      \     D      +++ Adding build-essential/libraries/matchers.rb\n      D      +++
      Adding build-essential/libraries/xcode_command_line_tools.rb\n      D      +++
      Adding build-essential/metadata.json\n      D      +++ Adding build-essential/recipes/_windows.rb\n
      \     D      +++ Adding build-essential/recipes/default.rb\n      D      +++
      Adding build-essential/resources/build_essential.rb\n      D      +++ Adding
      chef_handler/README.md\n      D      +++ Adding chef_handler/attributes/default.rb\n
      \     D      +++ Adding chef_handler/files/default/handlers/README\n      D
      \     +++ Adding chef_handler/libraries/helpers.rb\n      D      +++ Adding
      chef_handler/libraries/matchers.rb\n      D      +++ Adding chef_handler/metadata.json\n
      \     D      +++ Adding chef_handler/providers/default.rb\n      D      +++
      Adding chef_handler/recipes/default.rb\n      D      +++ Adding chef_handler/recipes/json_file.rb\n
      \     D      +++ Adding chef_handler/resources/default.rb\n      D      +++
      Adding compat_resource/README.md\n      D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/mixin/properties.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/property.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/recipe.rb\n      D
      \     +++ Adding compat_resource/files/lib/chef_compat/resource/lwrp_base.rb\n
      \     D      +++ Adding compat_resource/files/lib/chef_compat/resource.rb\n
      \     D      +++ Adding compat_resource/files/lib/compat_resource/gemspec.rb\n
      \     D      +++ Adding compat_resource/files/lib/compat_resource/version.rb\n
      \     D      +++ Adding compat_resource/files/lib/compat_resource.rb\n      D
      \     +++ Adding compat_resource/files/spec/cookbook_spec.rb\n      D      +++
      Adding compat_resource/files/spec/data/Gemfile\n      D      +++ Adding compat_resource/files/spec/data/config.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/metadata.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/providers/resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/recipes/default.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/resources/resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/future/libraries/future_custom_resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/future/libraries/super_properties.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/future/metadata.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/future/recipes/declare_resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/future/resources/resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/future/resources/super_resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/libraries/normal_hwrp.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/metadata.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/providers/resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/resources/resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/libraries/normal_hwrp.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/metadata.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/providers/resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/recipes/declare_resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/resources/resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/notifications/metadata.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/notifications/recipes/default.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/notifications/resources/resource.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/test/metadata.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/test/recipes/default.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/cookbooks/test/recipes/test.rb\n
      \     D      +++ Adding compat_resource/files/spec/data/nodes/ettores-mbp.lan.json\n
      \     D      +++ Adding compat_resource/files/spec/spec_helper.rb\n      D      +++
      Adding compat_resource/libraries/autoload.rb\n      D      +++ Adding compat_resource/metadata.json\n
      \     D      +++ Adding dmg/README.md\n      D      +++ Adding dmg/attributes/default.rb\n
      \     D      +++ Adding dmg/libraries/matchers.rb\n      D      +++ Adding dmg/metadata.json\n
      \     D      +++ Adding dmg/providers/package.rb\n      D      +++ Adding dmg/recipes/default.rb\n
      \     D      +++ Adding dmg/resources/package.rb\n      D      +++ Adding freebsd/README.md\n
      \     D      +++ Adding freebsd/attributes/default.rb\n      D      +++ Adding
      freebsd/metadata.json\n      D      +++ Adding freebsd/providers/port_options.rb\n
      \     D      +++ Adding freebsd/recipes/default.rb\n      D      +++ Adding
      freebsd/recipes/pkgng.rb\n      D      +++ Adding freebsd/recipes/portsnap.rb\n
      \     D      +++ Adding freebsd/resources/port_options.rb\n      D      +++
      Adding git/README.md\n      D      +++ Adding git/attributes/default.rb\n      D
      \     +++ Adding git/libraries/helpers.rb\n      D      +++ Adding git/libraries/matchers.rb\n
      \     D      +++ Adding git/libraries/provider_git_client.rb\n      D      +++
      Adding git/libraries/provider_git_client_osx.rb\n      D      +++ Adding git/libraries/provider_git_client_package.rb\n
      \     D      +++ Adding git/libraries/provider_git_client_source.rb\n      D
      \     +++ Adding git/libraries/provider_git_client_windows.rb\n      D      +++
      Adding git/libraries/provider_git_service.rb\n      D      +++ Adding git/libraries/provider_git_service_xinetd.rb\n
      \     D      +++ Adding git/libraries/resource_git_client.rb\n      D      +++
      Adding git/libraries/resource_git_service.rb\n      D      +++ Adding git/libraries/z_provider_mapping.rb\n
      \     D      +++ Adding git/metadata.json\n      D      +++ Adding git/providers/config.rb\n
      \     D      +++ Adding git/recipes/default.rb\n      D      +++ Adding git/recipes/package.rb\n
      \     D      +++ Adding git/recipes/server.rb\n      D      +++ Adding git/recipes/source.rb\n
      \     D      +++ Adding git/recipes/windows.rb\n      D      +++ Adding git/resources/config.rb\n
      \     D      +++ Adding git/templates/default/git-xinetd.d.erb\n      D      +++
      Adding git/templates/default/sv-git-daemon-log-run.erb\n      D      +++ Adding
      git/templates/default/sv-git-daemon-run.erb\n      D      +++ Adding git_test/metadata.json\n
      \     D      +++ Adding git_test/recipes/default.rb\n      D      +++ Adding
      mingw/README.md\n      D      +++ Adding mingw/files/default/bash.bat\n      D
      \     +++ Adding mingw/files/default/custom-upgrade.sh\n      D      +++ Adding
      mingw/files/default/custom_prefix.sh\n      D      +++ Adding mingw/files/default/pthread.h\n
      \     D      +++ Adding mingw/files/default/time.h\n      D      +++ Adding
      mingw/libraries/_helper.rb\n      D      +++ Adding mingw/metadata.json\n      D
      \     +++ Adding mingw/recipes/default.rb\n      D      +++ Adding mingw/resources/get.rb\n
      \     D      +++ Adding mingw/resources/msys2_package.rb\n      D      +++ Adding
      mingw/resources/tdm_gcc.rb\n      D      +++ Adding seven_zip/README.md\n      D
      \     +++ Adding seven_zip/attributes/default.rb\n      D      +++ Adding seven_zip/metadata.json\n
      \     D      +++ Adding seven_zip/providers/archive.rb\n      D      +++ Adding
      seven_zip/recipes/default.rb\n      D      +++ Adding seven_zip/resources/archive.rb\n
      \     D      +++ Adding windows/README.md\n      D      +++ Adding windows/attributes/default.rb\n
      \     D      +++ Adding windows/files/default/handlers/windows_reboot_handler.rb\n
      \     D      +++ Adding windows/libraries/feature_base.rb\n      D      +++
      Adding windows/libraries/matchers.rb\n      D      +++ Adding windows/libraries/powershell_helper.rb\n
      \     D      +++ Adding windows/libraries/powershell_out.rb\n      D      +++
      Adding windows/libraries/registry_helper.rb\n      D      +++ Adding windows/libraries/version.rb\n
      \     D      +++ Adding windows/libraries/windows_architecture_helper.rb\n      D
      \     +++ Adding windows/libraries/windows_helper.rb\n      D      +++ Adding
      windows/libraries/windows_package.rb\n      D      +++ Adding windows/libraries/windows_privileged.rb\n
      \     D      +++ Adding windows/libraries/wmi_helper.rb\n      D      +++ Adding
      windows/metadata.json\n      D      +++ Adding windows/providers/auto_run.rb\n
      \     D      +++ Adding windows/providers/batch.rb\n      D      +++ Adding
      windows/providers/certificate.rb\n      D      +++ Adding windows/providers/certificate_binding.rb\n
      \     D      +++ Adding windows/providers/feature_dism.rb\n      D      +++
      Adding windows/providers/feature_powershell.rb\n      D      +++ Adding windows/providers/feature_servermanagercmd.rb\n
      \     D      +++ Adding windows/providers/font.rb\n      D      +++ Adding windows/providers/http_acl.rb\n
      \     D      +++ Adding windows/providers/pagefile.rb\n      D      +++ Adding
      windows/providers/path.rb\n      D      +++ Adding windows/providers/printer.rb\n
      \     D      +++ Adding windows/providers/printer_port.rb\n      D      +++
      Adding windows/providers/reboot.rb\n      D      +++ Adding windows/providers/registry.rb\n
      \     D      +++ Adding windows/providers/shortcut.rb\n      D      +++ Adding
      windows/providers/task.rb\n      D      +++ Adding windows/providers/zipfile.rb\n
      \     D      +++ Adding windows/recipes/default.rb\n      D      +++ Adding
      windows/recipes/reboot_handler.rb\n      D      +++ Adding windows/resources/auto_run.rb\n
      \     D      +++ Adding windows/resources/batch.rb\n      D      +++ Adding
      windows/resources/certificate.rb\n      D      +++ Adding windows/resources/certificate_binding.rb\n
      \     D      +++ Adding windows/resources/feature.rb\n      D      +++ Adding
      windows/resources/font.rb\n      D      +++ Adding windows/resources/http_acl.rb\n
      \     D      +++ Adding windows/resources/pagefile.rb\n      D      +++ Adding
      windows/resources/path.rb\n      D      +++ Adding windows/resources/printer.rb\n
      \     D      +++ Adding windows/resources/printer_port.rb\n      D      +++
      Adding windows/resources/reboot.rb\n      D      +++ Adding windows/resources/registry.rb\n
      \     D      +++ Adding windows/resources/shortcut.rb\n      D      +++ Adding
      windows/resources/task.rb\n      D      +++ Adding windows/resources/zipfile.rb\n
      \     D      +++ Adding yum/README.md\n      D      +++ Adding yum/attributes/main.rb\n
      \     D      +++ Adding yum/libraries/matchers.rb\n      D      +++ Adding yum/metadata.json\n
      \     D      +++ Adding yum/providers/globalconfig.rb\n      D      +++ Adding
      yum/providers/repository.rb\n      D      +++ Adding yum/recipes/default.rb\n
      \     D      +++ Adding yum/recipes/dnf_yum_compat.rb\n      D      +++ Adding
      yum/resources/globalconfig.rb\n      D      +++ Adding yum/resources/repository.rb\n
      \     D      +++ Adding yum/templates/default/main.erb\n      D      +++ Adding
      yum/templates/default/repo.erb\n      D      +++ Adding yum-epel/README.md\n
      \     D      +++ Adding yum-epel/attributes/default.rb\n      D      +++ Adding
      yum-epel/attributes/epel-debuginfo.rb\n      D      +++ Adding yum-epel/attributes/epel-source.rb\n
      \     D      +++ Adding yum-epel/attributes/epel-testing-debuginfo.rb\n      D
      \     +++ Adding yum-epel/attributes/epel-testing-source.rb\n      D      +++
      Adding yum-epel/attributes/epel-testing.rb\n      D      +++ Adding yum-epel/attributes/epel.rb\n
      \     D      +++ Adding yum-epel/metadata.json\n      D      +++ Adding yum-epel/recipes/default.rb\n
      \     D      === All files added.\n      D      Running check_files.ps1\n      D
      \     [WinRM] Command created for $hash_file = @{\n        \"54ce43514c1dfebadb3cf9347d7c4b78\"
      = @{\n          \"target\" = \"$env:TEMP\\kitchen\";\n          \"src_basename\"
      = \"dna.json\";\n          \"dst\" = \"$env:TEMP\\kitchen\"\n        };\n        \"0683ca8a80a8b4e614fa1057f4aafe38\"
      = @{\n          \"target\" = \"$env:TEMP\\kitchen\";\n          \"src_basename\"
      = \"client.rb\";\n          \"dst\" = \"$env:TEMP\\kitchen\"\n        };\n        \"76cdb2bad9582d23c1f6f4d868218d6c\"
      = @{\n          \"target\" = \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\";\n
      \         \"src_basename\" = \"cache\";\n          \"dst\" = \"$env:TEMP\\kitchen\\cache\"\n
      \       };\n        \"49abb94825cb80b9a9cd59e5f76daf4a\" = @{\n          \"target\"
      = \"$env:TEMP\\kitchen\";\n          \"src_basename\" = \"validation.pem\";\n
      \         \"dst\" = \"$env:TEMP\\kitchen\"\n        };\n        \"5bac8b06fc48d51e72b8760b38d59b0f\"
      = @{\n          \"target\" = \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\";\n
      \         \"src_basename\" = \"cookbooks\";\n          \"dst\" = \"$env:TEMP\\kitchen\\cookbooks\"\n
      \       }\n      }\n\n      Function Cleanup($disposable) {\n        if (($disposable
      -ne $null) -and ($disposable.GetType().GetMethod(\"Dispose\") -ne $null)) {\n
      \         $disposable.Dispose()\n        }\n      }\n\n      Function Check-Files($h)
      {\n        return $h.GetEnumerator() | ForEach-Object {\n          $dst = Unresolve-Path
      $_.Value.target\n          $dst_changed = $false\n          if(Test-Path $dst
      -PathType Container) {\n            $dst_changed = $true\n            $dst =
      Join-Path $dst $_.Value.src_basename\n          }\n          New-Object psobject
      -Property @{\n            chk_exists = ($exists = Test-Path $dst -PathType Leaf)\n
      \           src_md5 = ($sMd5 = $_.Key)\n            dst_md5 = ($dMd5 = if ($exists)
      { Get-MD5Sum $dst } else { $null })\n            chk_dirty = ($dirty = if ($sMd5
      -ne $dMd5) { $true } else { $false })\n            verifies = if ($dirty -eq
      $false) { $true } else { $false }\n            target_is_folder = $dst_changed\n
      \         }\n        } | Select-Object -Property chk_exists,src_md5,dst_md5,chk_dirty,verifies,target_is_folder\n
      \     }\n\n      Function Get-MD5Sum($src) {\n        Try {\n          $c =
      [System.Security.Cryptography.MD5]::Create()\n          $bytes = $c.ComputeHash(($in
      = (Get-Item $src).OpenRead()))\n          return ([System.BitConverter]::ToString($bytes)).Replace(\"-\",
      \"\").ToLower()\n        }\n        Finally {\n          Cleanup $c\n          Cleanup
      $in\n        }\n      }\n\n      Function Unresolve-Path($path) {\n        if
      ($path -eq $null) {\n          return $null\n        }\n        else {\n          return
      $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($path)\n
      \       }\n      }\n\n      Check-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \      with id: 4EDE68EB-53B5-497B-B5B2-53ECC79740FC\n      D      [WinRM] creating
      command_id: 4EDE68EB-53B5-497B-B5B2-53ECC79740FC on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 4EDE68EB-53B5-497B-B5B2-53ECC79740FC
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      Parsing CSV Response\n
      \     D      \"chk_exists\",\"src_md5\",\"dst_md5\",\"chk_dirty\",\"verifies\",\"target_is_folder\"\n
      \     \"False\",\"76cdb2bad9582d23c1f6f4d868218d6c\",,\"True\",\"False\",\"False\"\n
      \     \"False\",\"0683ca8a80a8b4e614fa1057f4aafe38\",,\"True\",\"False\",\"True\"\n
      \     \"False\",\"49abb94825cb80b9a9cd59e5f76daf4a\",,\"True\",\"False\",\"True\"\n
      \     \"False\",\"5bac8b06fc48d51e72b8760b38d59b0f\",,\"True\",\"False\",\"False\"\n
      \     \"False\",\"54ce43514c1dfebadb3cf9347d7c4b78\",,\"True\",\"False\",\"True\"\n\n
      \     D      Uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/dna.json
      to $env:TEMP\\kitchen/dna.json\n      D      [WinRM] Command created for             $parent
      = Split-Path \"$env:TEMP\\kitchen/dna.json\"\n                  if(!(Test-path
      $parent)) { mkdir $parent | Out-Null}\n                  $fileStream = New-Object
      -TypeName System.IO.FileStream -ArgumentList @(\n                      \"$env:TEMP\\kitchen/dna.json\",\n
      \                     [system.io.filemode]::Create,\n                      [System.io.FileAccess]::Write,\n
      \                     [System.IO.FileShare]::ReadWrite\n                  )\n
      \      with id: E97FFE31-1238-4134-8AC0-AC78D3775D5C\n      D      [WinRM] creating
      command_id: E97FFE31-1238-4134-8AC0-AC78D3775D5C on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: E97FFE31-1238-4134-8AC0-AC78D3775D5C
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('eyJjaGVmX2FjY2VwdGFuY2UiOiJ0cnVlIiwidXNlX3N5c3RlbV9jaGVmIjoidHJ1ZSIsInJ1bl9saXN0IjpbInJlY2lwZVtnaXRdIl19')\n
      \                 $fileStream.Write($bytes, 0, $bytes.length)\n       with id:
      966DF6BB-AF87-4511-B971-3C18D4535B3B\n      D      [WinRM] creating command_id:
      966DF6BB-AF87-4511-B971-3C18D4535B3B on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 966DF6BB-AF87-4511-B971-3C18D4535B3B
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Command
      created for $fileStream.Dispose() with id: 75A522CB-2792-4965-968C-6485AD9487FB\n
      \     D      [WinRM] creating command_id: 75A522CB-2792-4965-968C-6485AD9487FB
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Waiting
      for output...\n      D      [WinRM] Processing output\n      D      [WinRM]
      cleaning up command_id: 75A522CB-2792-4965-968C-6485AD9487FB on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      Finished uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/dna.json
      to $env:TEMP\\kitchen/dna.json (0.104 KB over 1 chunks) in (0m0.45s)\n      D
      \     Uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/client.rb
      to $env:TEMP\\kitchen/client.rb\n      D      [WinRM] Command created for             $parent
      = Split-Path \"$env:TEMP\\kitchen/client.rb\"\n                  if(!(Test-path
      $parent)) { mkdir $parent | Out-Null}\n                  $fileStream = New-Object
      -TypeName System.IO.FileStream -ArgumentList @(\n                      \"$env:TEMP\\kitchen/client.rb\",\n
      \                     [system.io.filemode]::Create,\n                      [System.io.FileAccess]::Write,\n
      \                     [System.IO.FileShare]::ReadWrite\n                  )\n
      \      with id: B8AD3F35-E4E5-4210-8EB7-0BA02A3EA30D\n      D      [WinRM] creating
      command_id: B8AD3F35-E4E5-4210-8EB7-0BA02A3EA30D on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: B8AD3F35-E4E5-4210-8EB7-0BA02A3EA30D
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('bm9kZV9uYW1lICJnaXQtZGVmYXVsdC13aW5kb3dzLXdpbmRvd3MtMjAxMnIyIgpjaGVja3N1bV9wYXRoICIje0VOVlsnVEVNUCddfVxca2l0Y2hlblxcY2hlY2tzdW1zIgpmaWxlX2NhY2hlX3BhdGggIiN7RU5WWydURU1QJ119XFxraXRjaGVuXFxjYWNoZSIKZmlsZV9iYWNrdXBfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGJhY2t1cCIKY29va2Jvb2tfcGF0aCBbIiN7RU5WWydURU1QJ119XFxraXRjaGVuXFxjb29rYm9va3MiLCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHNpdGUtY29va2Jvb2tzIl0KZGF0YV9iYWdfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGRhdGFfYmFncyIKZW52aXJvbm1lbnRfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGVudmlyb25tZW50cyIKbm9kZV9wYXRoICIje0VOVlsnVEVNUCddfVxca2l0Y2hlblxcbm9kZXMiCnJvbGVfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHJvbGVzIgpjbGllbnRfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGNsaWVudHMiCnVzZXJfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHVzZXJzIgp2YWxpZGF0aW9uX2tleSAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHZhbGlkYXRpb24ucGVtIgpjbGllbnRfa2V5ICIje0VOVlsnVEVNUCddfVxca2l0Y2hlblxcY2xpZW50LnBlbSIKY2hlZl9zZXJ2ZXJfdXJsICJodHRwOi8vMTI3LjAuMC4xOjg4ODkiCmVuY3J5cHRlZF9kYXRhX2JhZ19zZWNyZXQgIiN7RU5WWydURU1QJ119XFxraXRjaGVuXFxlbmNyeXB0ZWRfZGF0YV9iYWdfc2VjcmV0IgphdWRpdF9tb2RlIDplbmFibGVkCm5hbWVkX3J1bl9saXN0IHt9')\n
      \                 $fileStream.Write($bytes, 0, $bytes.length)\n       with id:
      C6B0B0CF-D24C-4259-9651-3CE4E7FBDC60\n      D      [WinRM] creating command_id:
      C6B0B0CF-D24C-4259-9651-3CE4E7FBDC60 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: C6B0B0CF-D24C-4259-9651-3CE4E7FBDC60
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Command
      created for $fileStream.Dispose() with id: 093D11B6-AEE7-4916-973B-7EC59C138BBC\n
      \     D      [WinRM] creating command_id: 093D11B6-AEE7-4916-973B-7EC59C138BBC
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Waiting
      for output...\n      D      [WinRM] Processing output\n      D      [WinRM]
      cleaning up command_id: 093D11B6-AEE7-4916-973B-7EC59C138BBC on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      Finished uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/client.rb
      to $env:TEMP\\kitchen/client.rb (1.12 KB over 1 chunks) in (0m0.40s)\n      D
      \     Uploading /tmp/cheftest/tmpzip-20160803-32371-164l9z6.zip to $env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\n
      \     D      [WinRM] Command created for             $parent = Split-Path \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\"\n
      \                 if(!(Test-path $parent)) { mkdir $parent | Out-Null}\n                  $fileStream
      = New-Object -TypeName System.IO.FileStream -ArgumentList @(\n                      \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\",\n
      \                     [system.io.filemode]::Create,\n                      [System.io.FileAccess]::Write,\n
      \                     [System.IO.FileShare]::ReadWrite\n                  )\n
      \      with id: 6EB8C5D8-DDEA-49C7-89D3-753E78F4F986\n      D      [WinRM] creating
      command_id: 6EB8C5D8-DDEA-49C7-89D3-753E78F4F986 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 6EB8C5D8-DDEA-49C7-89D3-753E78F4F986
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('UEsFBgAAAAAAAAAAAAAAAAAAAAAAAA==')\n
      \                 $fileStream.Write($bytes, 0, $bytes.length)\n       with id:
      56651146-AEDE-48F7-BC96-4FFBC13C9783\n      D      [WinRM] creating command_id:
      56651146-AEDE-48F7-BC96-4FFBC13C9783 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 56651146-AEDE-48F7-BC96-4FFBC13C9783
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Command
      created for $fileStream.Dispose() with id: 0609EC74-A6B7-47A9-9909-90D0061EE204\n
      \     D      [WinRM] creating command_id: 0609EC74-A6B7-47A9-9909-90D0061EE204
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Waiting
      for output...\n      D      [WinRM] Processing output\n      D      [WinRM]
      cleaning up command_id: 0609EC74-A6B7-47A9-9909-90D0061EE204 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      Finished uploading /tmp/cheftest/tmpzip-20160803-32371-164l9z6.zip
      to $env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip (0.028
      KB over 1 chunks) in (0m0.44s)\n      D      Uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/validation.pem
      to $env:TEMP\\kitchen/validation.pem\n      D      [WinRM] Command created for
      \            $parent = Split-Path \"$env:TEMP\\kitchen/validation.pem\"\n                  if(!(Test-path
      $parent)) { mkdir $parent | Out-Null}\n                  $fileStream = New-Object
      -TypeName System.IO.FileStream -ArgumentList @(\n                      \"$env:TEMP\\kitchen/validation.pem\",\n
      \                     [system.io.filemode]::Create,\n                      [System.io.FileAccess]::Write,\n
      \                     [System.IO.FileShare]::ReadWrite\n                  )\n
      \      with id: AEEA6A16-9248-4826-8F24-D800CCAAE634\n      D      [WinRM] creating
      command_id: AEEA6A16-9248-4826-8F24-D800CCAAE634 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: AEEA6A16-9248-4826-8F24-D800CCAAE634
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMHNPWTl0SHZWdExaNnhtVm1IOGQ4THJSck5jV09YYnJ2dkNyYWkrVDNHdFJ2UlNMCmhrc0xycE9wRDBMOUVITTZOZFRoTkYvZUdBOU9xK1VLQWU2eVhSMGh3c0t1eEtYcVE4U0VtbGhaWjlHaXVnZ0QKQi96WUQzSXRCNlNHcGRrUmU3a1FxVENoUXlySVhxYlJrSnF4b1RYTHllSkRGMHNDeVRkcDNMOElaQ1VXb2RNOApvVjlUbFFCSkhZdEcxZ0xVd0lpOGtjTVZFb0NuMlE4bHRDajAvZnRud2hUdHdPNTJSa1dBMHVZT0xHVmF5SHNMClNDRmZ4K0FDV1BVL29XQ3dXNS9LQnFiM3ZlVHYwYUVnL25oMFFzRnpSTG9UeDZTUkZJNWRUMk5mOGlpSmU0V0MKVUc4V0tFQjJHOFFQbnhzeGZPUFlEQmRUSjRDWEVpMmUrejQxVlFJREFRQUJBb0lCQUFMaHFiVzJLUStHMG5QawpaYWN3RmJpMDFTa0h4OFlCV2pmQ0VwWGhFS1J5MHl0Q25LVzVZTytDRlUyZ0hOV2N2YTcrdWhWOU9nd2FLWGt3CktITGVVSkgxVkFEVnFJNEh0cXcyZzVtWW02QlB2V25Oc2p6cHVBcCtCUitWb0VHa05oajY3cjloYXRNQVFyMEkKaXRUdlNINXJ2ZDJFdW1ZWElIS2Z6MUsxU2VnVWsxdTFFTDFSY016Um1aZTRnRGI2ZU5CczlTZzRpbTR5YlRHNgpwUEl5dEE4dkJRVldoanVBUjJUbSt3WkhpeTBBejZWdTdjMm1TMDdGU1g2Rk80RThTeFdmOGlkYUs5aWpNR1NxCkZ2SVMwNG1yWTZYQ1BVUFVDNHFtMXFObmhEUHBPcjdDcEkyT085OFNxR2FuU3RTNU5GbFNGWGVYUHBNMjgwL3UKZlpVQTBBRUNnWUVBK3g3UVVuZmZEcnQ3TEsyY1g2d2J2bjRtUm5GeGV0N2JKanJmV0lIZitSbTBVUmlrYU5tYQpoMC93TktwS0J3SUgrZUhLL0xzbGd6Y3BscnFQeXRHR0hMT0c5N0d5bzV0R0F6eUxIVVdCbXNOa1Jrc1kyc1BMCnVIcTZwWVdKTmtxaG5XR25JYm1xQ3IwRVdpaDgyeC95NHF4YkpZcFlxWE1yaXQwd1ZmN3lBZ2tDZ1lFQTF0d0kKZ0ZhWHFlc2V0VFBvRUhTUVNnQzhTNEQ1L05rZHJpVVhDWWIwNlJFY3ZvOUlwRk11aU9rVlVZTk41ZDNNRE5UUApJZEJpY2ZtdmZORUx2QnRYRG9tRVVEOGxzMVV1b1RJWFJOR1owVnNaWHU3T0VyWENLMEpLTk55cVJtT3djdllMCkpScUxmbmxlaTVOZG8xbHUyODZ5TDc0YzVyZFRMcy9uSTJwNGUrMENnWUIwNzlabWNMZUlMcm1mQm9GSTgrWS8KZ0pMbVByRnZYQk9FNitsUlY3a3FVRlB0WjZJM3lRenljY0VUWlREdnJueDBXamFpRmF2VVBIMjdXTWpZMDFTMgpUTXRPMElxMU1Qc2JTcmdsTzFhczhNdmpCOWxkRmN2cDdneTRRMFN2NlhUMHlxSi9TK3ZvOERmMG0rSDRVQnBVCmY1bzZFd0JTZC9VUXh3dFpJRTBsc1FLQmdRQ3N3ZmpYOEVnOEtML2xKTnBJT09FM2o0WFhFOXB0a3NtSmwyc0IKanhEblFZb2lNcVZPODA4c2FIVnF1Qy92VHJwZDZ0S3ROcGVoV3dqZVRGdXFJVFdMaThqbW1RK2dOVEtzQzlHbgoxUHhmMkdiNjdQcW5FcHdRR2xuK1RSdGdRNUhCcmRIaVFJaSs1YW0rZ253ODlwRHJqak81clp3aGFuQW82S1BKCjF6Y1BOUUtCZ1FEeEZ1OHY0ZnJEbVJOQ1ZhWlM0ZjFCNndUcmNNcm5pYklEbG56cks5R0c2SHoxVTdkRHY4czgKTmY0VW1lTXpEWGpsUFdaVk92UzUrOUhLSlBkUGo3L29udjhCMm0xOCtsY2dUVERKQmt6YTdSMW1qTDFDamUvWgpLY1ZHc3J5S042Y2pFN3lDRGFzbkE3UjJyVkJWLzdOV2VKVjc3Ym16VDVPLy9yVzR5SWZVSWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=')\n
      \                 $fileStream.Write($bytes, 0, $bytes.length)\n       with id:
      34799AEF-1C87-4CA5-99C0-9A86B4B4D605\n      D      [WinRM] creating command_id:
      34799AEF-1C87-4CA5-99C0-9A86B4B4D605 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 34799AEF-1C87-4CA5-99C0-9A86B4B4D605
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Command
      created for $fileStream.Dispose() with id: 052385D6-ABDE-43FA-8784-6F515FB4D039\n
      \     D      [WinRM] creating command_id: 052385D6-ABDE-43FA-8784-6F515FB4D039
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Waiting
      for output...\n      D      [WinRM] Processing output\n      D      [WinRM]
      cleaning up command_id: 052385D6-ABDE-43FA-8784-6F515FB4D039 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      Finished uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/validation.pem
      to $env:TEMP\\kitchen/validation.pem (2.236 KB over 1 chunks) in (0m0.32s)\n
      \     D      Uploading /tmp/cheftest/tmpzip-20160803-32371-onl7co.zip to $env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\n
      \     D      [WinRM] Command created for             $parent = Split-Path \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\"\n
      \                 if(!(Test-path $parent)) { mkdir $parent | Out-Null}\n                  $fileStream
      = New-Object -TypeName System.IO.FileStream -ArgumentList @(\n                      \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\",\n
      \                     [system.io.filemode]::Create,\n                      [System.io.FileAccess]::Write,\n
      \                     [System.IO.FileShare]::ReadWrite\n                  )\n
      \      with id: 7250459D-5923-494F-ABE6-1A9D3F99B5F2\n      D      [WinRM] creating
      command_id: 7250459D-5923-494F-ABE6-1A9D3F99B5F2 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 7250459D-5923-494F-ABE6-1A9D3F99B5F2
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('')\n
      \                 $fileStream.Write($bytes, 0, $bytes.length)\n       with id:
      F439A2E6-3A91-40BF-9A57-2302C58F819E\n      D      [WinRM] creating command_id:
      F439A2E6-3A91-40BF-9A57-2302C58F819E on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: F439A2E6-3A91-40BF-9A57-2302C58F819E
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('')\n
      \                 $fileStream.Write($bytes, 0, $bytes.length)\n       with id:
      449EFD87-D447-42F1-8F23-1641A2A5BA44\n      D      [WinRM] creating command_id:
      449EFD87-D447-42F1-8F23-1641A2A5BA44 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 449EFD87-D447-42F1-8F23-1641A2A5BA44
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Command
      created for $fileStream.Dispose() with id: B6907F07-4199-4B64-9E27-A49AADA54453\n
      \     D      [WinRM] creating command_id: B6907F07-4199-4B64-9E27-A49AADA54453
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      [WinRM] Waiting
      for output...\n      D      [WinRM] Processing output\n      D      [WinRM]
      cleaning up command_id: B6907F07-4199-4B64-9E27-A49AADA54453 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      Finished uploading /tmp/cheftest/tmpzip-20160803-32371-onl7co.zip
      to $env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip (409.904
      KB over 2 chunks) in (0m1.21s)\n      D      Running extract_files.ps1\n      D
      \     [WinRM] Command created for trap {\n        $e = $_.Exception\n        $e.InvocationInfo.ScriptName\n
      \       do {\n          $e.Message\n          $e = $e.InnerException\n        }
      while ($e)\n        break\n      }\n\n      function folder($path){\n        $path
      | ? {-not (test-path $_)} | % {$null = mkdir $_}\n      }\n\n      Function
      Decode-Files($hash) {\n        foreach ($key in $hash.keys) {\n          $value
      = $hash[$key]\n          $tzip, $dst = $Value[\"tmpzip\"], $Value[\"dst\"]\n
      \         if ($tzip) {Unzip-File $tzip $dst}\n          New-Object psobject
      -Property @{dst=$dst;src_md5=$key;tmpzip=$tzip}\n        }\n      }\n\n      Function
      Unzip-File($src, $dst) {\n        $unpack = $src -replace '\\.zip'\n        $dst_parent
      = Split-Path -Path $dst -Parent\n        if(!(Test-Path $dst_parent)) { $dst
      = $dst_parent }\n        folder $unpack, $dst\n        try {\n          try{\n
      \           [IO.Compression.ZipFile]::ExtractToDirectory($src, $unpack)\n          }\n
      \         catch {\n            Add-Type -AssemblyName System.IO.Compression.FileSystem
      -ErrorAction Stop\n            [IO.Compression.ZipFile]::ExtractToDirectory($src,
      $unpack)\n          }\n        }\n        catch {\n          Try {\n            $s
      = New-Object -ComObject Shell.Application\n            ($s.NameSpace($unpack)).CopyHere(($s.NameSpace($src)).Items(),
      0x610)\n          }\n          Finally {\n            [void][Runtime.Interopservices.Marshal]::ReleaseComObject($s)\n
      \         }\n        }\n        dir $unpack | cp -dest \"$dst/\" -force -recurse\n
      \       rm $unpack -recurse -force\n      }\n\n      $hash_file = @{\n        \"76cdb2bad9582d23c1f6f4d868218d6c\"
      = @{\n          \"dst\" = \"$env:TEMP\\kitchen\\cache\";\n          \"tmpzip\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\"\n
      \       };\n        \"5bac8b06fc48d51e72b8760b38d59b0f\" = @{\n          \"dst\"
      = \"$env:TEMP\\kitchen\\cookbooks\";\n          \"tmpzip\" = \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\"\n
      \       }\n      }\n      Decode-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \      with id: 9BC922BA-731B-41DD-81B1-2CBE9F1A525B\n      D      [WinRM] creating
      command_id: 9BC922BA-731B-41DD-81B1-2CBE9F1A525B on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 9BC922BA-731B-41DD-81B1-2CBE9F1A525B
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      Parsing CSV Response\n
      \     D      \"src_md5\",\"tmpzip\",\"dst\"\n      \"76cdb2bad9582d23c1f6f4d868218d6c\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\kitchen\\cache\"\n
      \     \"5bac8b06fc48d51e72b8760b38d59b0f\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\kitchen\\cookbooks\"\n\n
      \     D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160803-32371-164l9z6.zip\n
      \     D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160803-32371-onl7co.zip\n
      \     D      Uploaded 5 items dirty_check: (0m0.76s) stream_files: (0m2.82s)
      extract: (0m1.25s)\n      D      Transfer complete\n      D      Attempting
      to execute command - try 1 of 1.\n      D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     & $env:systemdrive\\opscode\\chef\\bin\\chef-client.bat --local-mode --config
      $env:TEMP\\kitchen\\client.rb --log_level auto --force-formatter --no-color
      --json-attributes $env:TEMP\\kitchen\\dna.json --chef-zero-port 8889 ; exit
      $LastExitCode)\n      D      [WinRM] Command created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     & $env:systemdrive\\opscode\\chef\\bin\\chef-client.bat --local-mode --config
      $env:TEMP\\kitchen\\client.rb --log_level auto --force-formatter --no-color
      --json-attributes $env:TEMP\\kitchen\\dna.json --chef-zero-port 8889 ; exit
      $LastExitCode with id: F9897435-4EBF-4895-8F7B-19891DB5CEC7\n      D      [WinRM]
      creating command_id: F9897435-4EBF-4895-8F7B-19891DB5CEC7 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n             Starting Chef Client, version 12.13.21\n      D      [WinRM]
      Waiting for output...\n      D      [WinRM] Processing output\n             Creating
      a new client identity for git-default-windows-windows-2012r2 using the validator
      key.\n             resolving cookbooks for run list: [\"git\"]\n             Synchronizing
      Cookbooks:\n             Installing Cookbook Gems:\n             Compiling Cookbooks...\n\n
      \            ================================================================================\n
      \            Recipe Compile Error\n             ================================================================================\n\n
      \            Chef::Exceptions::RecipeNotFound\n             --------------------------------\n
      \            could not find recipe default for cookbook git\n\n             Platform:\n
      \            ---------\n             x64-mingw32\n\n\n             Running handlers:\n
      \            [2016-08-03T02:04:45+00:00] ERROR: Running exception handlers\n
      \            Running handlers complete\n             [2016-08-03T02:04:45+00:00]
      ERROR: Exception handlers complete\n             Chef Client failed. 0 resources
      updated in 31 seconds\n             [2016-08-03T02:04:45+00:00] FATAL: Stacktrace
      dumped to C:/Users/ADMINI~1/AppData/Local/Temp/kitchen/cache/chef-stacktrace.out\n
      \            [2016-08-03T02:04:45+00:00] FATAL: Please provide the contents
      of the stacktrace.out file if you file a bug report\n             [2016-08-03T02:04:45+00:00]
      FATAL: Chef::Exceptions::RunFailedWrappingError: Found 1 errors, they are stored
      in the backtrace\n      D      [WinRM] cleaning up command_id: F9897435-4EBF-4895-8F7B-19891DB5CEC7
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n      D      Cleaning up local
      sandbox in /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu\n
      \     D      ------Exception-------\n      D      Class: Kitchen::ActionFailed\n
      \     D      Message: 1 actions failed.\n      >>>>>>     Converge failed on
      instance <git-default-windows-windows-2012r2>.  Please see .kitchen/logs/git-default-windows-windows-2012r2.log
      for more details\n      D      ----------------------\n      D      ------Backtrace-------\n
      \     D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:187:in
      `report_errors'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:178:in
      `run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:39:in
      `block in call'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:37:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:56:in
      `perform'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:184:in
      `block (2 levels) in <class:CLI>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/command.rb:27:in
      `run'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/invocation.rb:126:in
      `invoke_command'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:325:in
      `invoke_task'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor.rb:359:in
      `dispatch'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/base.rb:440:in
      `start'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `block in <top (required)>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/errors.rb:174:in
      `with_friendly_errors'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `<top (required)>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `load'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `<top (required)>'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `load'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `kernel_load'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:24:in
      `run'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:304:in
      `exec'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/command.rb:27:in
      `run'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in
      `invoke_command'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor.rb:359:in
      `dispatch'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/base.rb:440:in
      `start'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:11:in
      `start'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:27:in
      `block in <top (required)>'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/friendly_errors.rb:98:in
      `with_friendly_errors'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:19:in
      `<top (required)>'\n      D      /opt/chefdk/embedded/bin/bundle:22:in `load'\n
      \     D      /opt/chefdk/embedded/bin/bundle:22:in `<main>'\n      D      ----End
      Backtrace-----\n      D      -Composite Exception--\n      D      Class: Kitchen::InstanceFailure\n
      \     D      Message: Converge failed on instance <git-default-windows-windows-2012r2>.
      \ Please see .kitchen/logs/git-default-windows-windows-2012r2.log for more details\n
      \     D      ----------------------\n      D      ------Backtrace-------\n      D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:86:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:89:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:373:in
      `block in converge_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:369:in
      `converge_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:138:in
      `converge'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n      D      ----End Backtrace-----\n
      \     D      ---Nested Exception---\n      D      Class: Kitchen::ActionFailed\n
      \     D      Message: WinRM exited (1) for command: [$env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     & $env:systemdrive\\opscode\\chef\\bin\\chef-client.bat --local-mode --config
      $env:TEMP\\kitchen\\client.rb --log_level auto --force-formatter --no-color
      --json-attributes $env:TEMP\\kitchen\\dna.json --chef-zero-port 8889 ; exit
      $LastExitCode]\n      D      ----------------------\n      D      ------Backtrace-------\n
      \     D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:86:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:89:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:373:in
      `block in converge_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:369:in
      `converge_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:138:in
      `converge'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n      D      ----End Backtrace-----\n
      \     STDERR: >>>>>> ------Exception-------\n      >>>>>> Class: Kitchen::ActionFailed\n
      \     >>>>>> Message: 1 actions failed.\n      >>>>>>     Converge failed on
      instance <git-default-windows-windows-2012r2>.  Please see .kitchen/logs/git-default-windows-windows-2012r2.log
      for more details\n      >>>>>> ----------------------\n      >>>>>> Please see
      .kitchen/logs/kitchen.log for more details\n      >>>>>> Also try running `kitchen
      diagnose --all` for configuration\n      ---- End output of bundle exec kitchen
      converge  -c -l debug ----\n      Ran bundle exec kitchen converge  -c -l debug
      returned 20\n\n      Cookbook Trace:\n      ---------------\n      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in
      `block (3 levels) in <class:Kitchen>'\n\n      Resource Declaration:\n      ---------------------\n
      \     # In /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/acceptance-cookbook/libraries/top_cookbooks.rb\n\n
      \      12:     cookbook_kitchen \"#{command} git\" do\n       13:     end\n
      \      14:\n\n      Compiled Resource:\n      ------------------\n      # Declared
      in /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/acceptance-cookbook/libraries/top_cookbooks.rb:12:in
      `block in <class:TopCookbooks>'\n\n      cookbook_kitchen(\"converge git\")
      do\n        action [:run]\n        updated true\n        updated_by_last_action
      true\n        retries 0\n        retry_delay 2\n        default_guard_interpreter
      :default\n        declared_type :cookbook_kitchen\n        cookbook_name \"acceptance-cookbook\"\n
      \       repository \"https://github.com/chef-cookbooks/git.git\"\n        test_cookbook
      \"git\"\n        repository_root \"/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git\"\n
      \       branch \"master\"\n        chef_product \"chef\"\n        env {\"BUNDLE_GEMFILE\"=>\"/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/Gemfile\",
      \"KITCHEN_YAML\"=>\"/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/.kitchen.git.yml\"}\n
      \       kitchen_dir \"/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/\"\n
      \       command \"converge\"\n        kitchen_options \"-c -l debug\"\n      end\n\n
      \     Platform:\n      ---------\n      x86_64-linux\n\n\n    ================================================================================\n
      \   Error executing action `run` on resource 'top_cookbooks[converge]'\n    ================================================================================\n\n
      \   Mixlib::ShellOut::ShellCommandFailed\n    ------------------------------------\n
      \   cookbook_kitchen[converge git] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/acceptance-cookbook/libraries/top_cookbooks.rb
      line 12) had an error: Mixlib::ShellOut::ShellCommandFailed: ruby_block[copy_kitchen_logs_to_data_path]
      (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb
      line 39) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process
      to exit with [0], but received '20'\n    ---- Begin output of bundle exec kitchen
      converge  -c -l debug ----\n    STDOUT: -----> Starting Kitchen (v1.10.2)\n
      \   D      Berksfile found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile,
      loading Berkshelf\n    D      Berkshelf 4.3.5 library loaded\n    D      Berksfile
      found at /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile,
      loading Berkshelf\n    D      Berkshelf 4.3.5 previously loaded\n    D      winrm
      requested, loading winrm gem ([\"~> 2.0\"])\n    D      winrm is loaded.\n    D
      \     winrm-fs requested, loading winrm-fs gem ([\"~> 1.0\"])\n    D      winrm-fs
      is loaded.\n    -----> Creating <git-default-ubuntu-1404>...\n           If
      you are not using an account that qualifies under the AWS\n    free-tier, you
      may be charged to run these suites. The charge\n    should be minimal, but neither
      Test Kitchen nor its maintainers\n    are responsible for your incurred costs.\n\n
      \   -----> Creating <git-default-windows-windows-2012r2>...\n    D      platform
      name windows-2012r2 appears to be a standard platform. Searching for windows
      2012r2 ...\n    D      Searching for images matching {:name=>\"Windows_Server-2012-R2*-English-*-Base-*\",
      :\"owner-alias\"=>\"amazon\", :architecture=>\"x86_64\", :\"virtualization-type\"=>\"hvm\",
      :\"block-device-mapping.volume-type\"=>\"gp2\", :\"image-type\"=>\"machine\"}
      ...\n    D      platform name ubuntu-14.04 appears to be a standard platform.
      Searching for ubuntu 14.04 ...\n    D      Searching for images matching {:name=>\"ubuntu/images/*/ubuntu-*-14.04-*-server-*\",
      :\"owner-id\"=>\"099720109477\", :architecture=>\"x86_64\", :\"virtualization-type\"=>\"hvm\",
      :\"block-device-mapping.volume-type\"=>\"gp2\", :\"image-type\"=>\"machine\"}
      ...\n    D      Search returned 4 images:\n    D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.26:
      Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm,
      Storage: ebs gp2, Created: 2016-07-27T08:44:14.000Z\n    D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.13:
      Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm,
      Storage: ebs gp2, Created: 2016-07-14T09:59:33.000Z\n    D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.06.15:
      Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm,
      Storage: ebs gp2, Created: 2016-06-16T16:58:39.000Z\n    D      - Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.05.11:
      Detected windows 2012r2rtm x86_64.  Architecture: x86_64, Virtualization: hvm,
      Storage: ebs gp2, Created: 2016-05-12T20:22:38.000Z\n    D      Image for git-default-windows-windows-2012r2:
      Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.07.26.  Architecture: x86_64,
      Virtualization: hvm, Storage: ebs gp2, Created: 2016-07-27T08:44:14.000Z\n           Detected
      platform: windows version 2012r2rtm on x86_64. Instance Type: m3.large. Default
      username: administrator (default).\n    D      No SSH username specified: using
      default username administrator  for image ami-2426e944, which we detected as
      windows 2012r2rtm x86_64.\n           If you are not using an account that qualifies
      under the AWS\n    free-tier, you may be charged to run these suites. The charge\n
      \   should be minimal, but neither Test Kitchen nor its maintainers\n    are
      responsible for your incurred costs.\n\n    D      Creating EC2 instance in
      region us-west-2 with properties:\n    D      - instance_type = \"m3.large\"\n
      \   D      - ebs_optimized = false\n    D      - image_id = \"ami-2426e944\"\n
      \   D      - key_name = \"jenkins\"\n    D      - subnet_id = \"subnet-19ac017c\"\n
      \   D      - private_ip_address = nil\n    D      - placement = {:availability_zone=>\"us-west-2a\"}\n
      \   D      - security_group_ids = [\"sg-e401eb83\", \"sg-96274af3\"]\n    D
      \     - user_data = \"PHBvd2Vyc2hlbGw+CiYgbmV0c2ggYWR2ZmlyZXdhbGwgZmlyZXdhbGwgc2V0\\nIHJ1bGUgbmFtZT0iV2luZG93cyBSZW1vdGUgTWFuYWdlbWVudCAoSFRUUC1J\\nbikiIHByb2ZpbGU9cHVibGljIHByb3RvY29sPXRjcCBsb2NhbHBvcnQ9NTk4\\nNSByZW1vdGVpcD1sb2NhbHN1Ym5ldCBuZXcgcmVtb3RlaXA9YW55CiNTZXQg\\nc2NyaXB0IGV4ZWN1dGlvbiB0byB1bnJlc3RyaWN0ZWQKJiBTZXQtRXhlY3V0\\naW9uUG9saWN5IFVucmVzdHJpY3RlZCAtRm9yY2UKPC9wb3dlcnNoZWxsPgo=\\n\"\n
      \   D      Search returned 59 images:\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160714:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-07-15T10:37:25.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160627:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-06-29T15:13:53.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160620:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-06-21T12:07:59.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160602:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-06-03T01:17:21.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160516:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-05-17T09:54:45.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160509.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-05-10T11:55:52.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160406:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-04-06T22:01:48.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160314:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-03-15T08:30:56.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160222:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-02-23T13:53:30.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160217.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-02-18T01:37:46.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160201:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-02-02T12:11:43.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160119:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-01-20T12:15:17.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160114.5:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2016-01-15T22:11:35.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151218:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-12-20T01:45:49.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151217:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-12-18T09:40:49.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151117:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-11-18T08:17:32.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151105:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-11-06T23:03:53.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151019:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-20T09:04:11.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151015:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-15T20:43:54.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151008:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-09T08:48:14.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151007:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-08T08:57:50.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20151005:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-06T09:26:41.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150930:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-10-01T11:24:14.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150928:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-29T11:13:44.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150924:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-25T13:37:47.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150908:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-09T05:59:15.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150901.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-09-02T05:15:07.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150814:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-15T08:11:39.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150813:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-14T07:14:42.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150812:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-13T08:50:05.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150810:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-11T11:43:49.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150805:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-06T19:29:13.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150731:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-08-01T09:17:08.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150727:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-07-28T07:13:51.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150724:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-07-25T05:22:13.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150629:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-30T09:14:39.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150609:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-09T17:42:29.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150608:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-09T03:54:29.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150603:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-06-04T08:13:50.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150528:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-05-29T10:15:24.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150506:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-05-07T08:14:11.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150417:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-04-17T12:06:11.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150408.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-04-09T08:52:15.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150325:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-03-25T23:56:26.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150305:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-03-05T11:02:56.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150227.2:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-02-28T07:15:31.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150225.2:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-02-26T06:03:04.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150209.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-02-10T05:22:56.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20150123:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2015-01-23T10:57:13.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20141125:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-11-26T01:50:28.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140927:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-30T00:19:14.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140926:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-26T16:05:00.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140924:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-25T14:07:23.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140923:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-09-23T14:15:33.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140829:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-08-29T18:46:07.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140816:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-08-16T22:57:30.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140813:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-08-14T00:50:31.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140724:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-07-25T08:28:59.000Z\n    D      - ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20140607.1:
      Detected ubuntu 14.04 x86_64.  Architecture: x86_64, Virtualization: hvm, Storage:
      ebs gp2, Created: 2014-07-23T18:05:49.000Z\n    D      Creating EC2 instance
      in region us-west-2 with properties:\n    D      - instance_type = \"m3.large\"\n
      \   D      - ebs_optimized = false\n    D      - image_id = \"ami-d732f0b7\"\n
      \   D      - key_name = \"jenkins\"\n    D      - subnet_id = \"subnet-19ac017c\"\n
      \   D      - private_ip_address = nil\n    D      - placement = {:availability_zone=>\"us-west-2a\"}\n
      \   D      - security_group_ids = [\"sg-e401eb83\", \"sg-96274af3\"]\n           Instance
      <i-b452cd1b> requested.\n           Polling AWS for existence, attempt 0...\n
      \          Instance <i-1b55cab4> requested.\n           Polling AWS for existence,
      attempt 0...\n           Attempting to tag the instance, 0 retries\n           Attempting
      to tag the instance, 0 retries\n           EC2 instance <i-1b55cab4> created.\n
      \          Waited 0/300s for instance <i-1b55cab4> to become ready.\n           EC2
      instance <i-b452cd1b> created.\n           Waited 0/300s for instance <i-b452cd1b>
      to become ready.\n           Waited 5/300s for instance <i-1b55cab4> to become
      ready.\n           Waited 5/300s for instance <i-b452cd1b> to become ready.\n
      \          Waited 10/300s for instance <i-1b55cab4> to become ready.\n           Waited
      10/300s for instance <i-b452cd1b> to become ready.\n           Waited 15/300s
      for instance <i-1b55cab4> to become ready.\n           Waited 15/300s for instance
      <i-b452cd1b> to become ready.\n           Waited 20/300s for instance <i-1b55cab4>
      to become ready.\n           Waited 20/300s for instance <i-b452cd1b> to become
      ready.\n           EC2 instance <i-b452cd1b> ready.\n    D      [SSH] opening
      connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n    D      [SSH] connection failed (#<Errno::ECONNREFUSED:
      Connection refused - connect(2) for 10.194.15.201:22>)\n           Waiting for
      SSH service on 10.194.15.201:22, retrying in 3 seconds\n    D      [SSH] opening
      connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n    D      [SSH] connection
      failed (#<Errno::ECONNREFUSED: Connection refused - connect(2) for 10.194.15.201:22>)\n
      \          Waiting for SSH service on 10.194.15.201:22, retrying in 3 seconds\n
      \          Waited 25/300s for instance <i-1b55cab4> to become ready.\n    D
      \     [SSH] opening connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n    D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (echo '[SSH] Established')\n
      \          [SSH] Established\n    D      Using sudo_command='sudo -E' for ohai
      hints\n    D      [SSH] reusing existing connection ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n    D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sudo -E mkdir -p /etc/chef/ohai/hints;
      sudo -E touch /etc/chef/ohai/hints/ec2.json)\n    D      ec2:create '10.194.15.201'\n
      \          Finished creating <git-default-ubuntu-1404> (0m31.30s).\n    ----->
      Converging <git-default-ubuntu-1404>...\n           Preparing files for transfer\n
      \   D      Creating local sandbox in /tmp/cheftest/git-default-ubuntu-1404-sandbox-20160803-32371-1dt31m3\n
      \          Preparing dna.json\n    D      Creating dna.json from {:chef_acceptance=>\"true\",
      :use_system_chef=>\"true\", :run_list=>[\"recipe[apt]\", \"recipe[git]\"]}\n
      \          Resolving cookbook dependencies with Berkshelf 4.3.5...\n    D      Using
      Berksfile from /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile\n
      \          Waited 30/300s for instance <i-1b55cab4> to become ready.\n           Removing
      non-cookbook files before transfer\n           Preparing validation.pem\n    D
      \     Using a dummy validation.pem\n           Preparing client.rb\n    D      Creating
      client.rb from {:node_name=>\"git-default-ubuntu-1404\", :checksum_path=>\"/tmp/kitchen/checksums\",
      :file_cache_path=>\"/tmp/kitchen/cache\", :file_backup_path=>\"/tmp/kitchen/backup\",
      :cookbook_path=>[\"/tmp/kitchen/cookbooks\", \"/tmp/kitchen/site-cookbooks\"],
      :data_bag_path=>\"/tmp/kitchen/data_bags\", :environment_path=>\"/tmp/kitchen/environments\",
      :node_path=>\"/tmp/kitchen/nodes\", :role_path=>\"/tmp/kitchen/roles\", :client_path=>\"/tmp/kitchen/clients\",
      :user_path=>\"/tmp/kitchen/users\", :validation_key=>\"/tmp/kitchen/validation.pem\",
      :client_key=>\"/tmp/kitchen/client.pem\", :chef_server_url=>\"http://127.0.0.1:8889\",
      :encrypted_data_bag_secret=>\"/tmp/kitchen/encrypted_data_bag_secret\", :audit_mode=>\":enabled\",
      :named_run_list=>{}}\n    D      [SSH] reusing existing connection ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n    D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sudo -E cat > /tmp/chef-installer.sh
      <<\"EOL\"\n    #!/bin/bash\n    #!/bin/sh\n    # WARNING: REQUIRES /bin/sh\n
      \   #\n    # - must run on /bin/sh on solaris 9\n    # - must run on /bin/sh
      on AIX 6.x\n    #\n    # Copyright:: Copyright (c) 2010-2015 Chef Software,
      Inc.\n    # License:: Apache License, Version 2.0\n    #\n    # Licensed under
      the Apache License, Version 2.0 (the \"License\");\n    # you may not use this
      file except in compliance with the License.\n    # You may obtain a copy of
      the License at\n    #\n    #     http://www.apache.org/licenses/LICENSE-2.0\n
      \   #\n    # Unless required by applicable law or agreed to in writing, software\n
      \   # distributed under the License is distributed on an \"AS IS\" BASIS,\n
      \   # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n
      \   # See the License for the specific language governing permissions and\n
      \   # limitations under the License.\n    #\n\n    # helpers.sh\n    ############\n
      \   # This section has some helper functions to make life easier.\n    #\n    #
      Outputs:\n    # $tmp_dir: secure-ish temp directory that can be used during
      installation.\n    ############\n\n    # Check whether a command exists - returns
      0 if it does, 1 if it does not\n    exists() {\n      if command -v $1 >/dev/null
      2>&1\n      then\n        return 0\n      else\n        return 1\n      fi\n
      \   }\n\n    # Output the instructions to report bug about this script\n    report_bug()
      {\n      echo \"Version: $version\"\n      echo \"\"\n      echo \"Please file
      a Bug Report at https://github.com/chef/omnitruck/issues/new\"\n      echo \"Alternatively,
      feel free to open a Support Ticket at https://www.chef.io/support/tickets\"\n
      \     echo \"More Chef support resources can be found at https://www.chef.io/support\"\n
      \     echo \"\"\n      echo \"Please include as many details about the problem
      as possible i.e., how to reproduce\"\n      echo \"the problem (if possible),
      type of the Operating System and its version, etc.,\"\n      echo \"and any
      other relevant details that might help us with troubleshooting.\"\n      echo
      \"\"\n    }\n\n    checksum_mismatch() {\n      echo \"Package checksum mismatch!\"\n
      \     report_bug\n      exit 1\n    }\n\n    unable_to_retrieve_package() {\n
      \     echo \"Unable to retrieve a valid package!\"\n      report_bug\n      echo
      \"Metadata URL: $metadata_url\"\n      if test \"x$download_url\" != \"x\";
      then\n        echo \"Download URL: $download_url\"\n      fi\n      if test
      \"x$stderr_results\" != \"x\"; then\n        echo \"\\nDEBUG OUTPUT FOLLOWS:\\n$stderr_results\"\n
      \     fi\n      exit 1\n    }\n\n    http_404_error() {\n      echo \"Omnitruck
      artifact does not exist for version $version on platform $platform\"\n      echo
      \"\"\n      echo \"Either this means:\"\n      echo \"   - We do not support
      $platform\"\n      echo \"   - We do not have an artifact for $version\"\n      echo
      \"\"\n      echo \"This is often the latter case due to running a prerelease
      or RC version of chef\"\n      echo \"or a gem version which was only pushed
      to rubygems and not omnitruck.\"\n      echo \"\"\n      echo \"You may be able
      to set your knife[:bootstrap_version] to the most recent stable\"\n      echo
      \"release of Chef to fix this problem (or the most recent stable major version
      number).\"\n      echo \"\"\n      echo \"In order to test the version parameter,
      adventurous users may take the Metadata URL\"\n      echo \"below and modify
      the '&v=<number>' parameter until you successfully get a URL that\"\n      echo
      \"does not 404 (e.g. via curl or wget).  You should be able to use '&v=11' or
      '&v=12'\"\n      echo \"succesfully.\"\n      echo \"\"\n      echo \"If you
      cannot fix this problem by setting the bootstrap_version, it probably means\"\n
      \     echo \"that $platform is not supported.\"\n      echo \"\"\n      # deliberately
      do not call report_bug to suppress bug report noise.\n      echo \"Metadata
      URL: $metadata_url\"\n      if test \"x$download_url\" != \"x\"; then\n        echo
      \"Download URL: $download_url\"\n      fi\n      if test \"x$stderr_results\"
      != \"x\"; then\n        echo \"\\nDEBUG OUTPUT FOLLOWS:\\n$stderr_results\"\n
      \     fi\n      exit 1\n    }\n\n    capture_tmp_stderr() {\n      # spool up
      /tmp/stderr from all the commands we called\n      if test -f \"$tmp_dir/stderr\";
      then\n        output=`cat $tmp_dir/stderr`\n        stderr_results=\"${stderr_results}\\nSTDERR
      from $1:\\n\\n$output\\n\"\n        rm $tmp_dir/stderr\n      fi\n    }\n\n
      \   # do_wget URL FILENAME\n    do_wget() {\n      echo \"trying wget...\"\n
      \     wget -O \"$2\" \"$1\" 2>$tmp_dir/stderr\n      rc=$?\n      # check for
      404\n      grep \"ERROR 404\" $tmp_dir/stderr 2>&1 >/dev/null\n      if test
      $? -eq 0; then\n        echo \"ERROR 404\"\n        http_404_error\n      fi\n\n
      \     # check for bad return status or empty output\n      if test $rc -ne 0
      || test ! -s \"$2\"; then\n        capture_tmp_stderr \"wget\"\n        return
      1\n      fi\n\n      return 0\n    }\n\n    # do_curl URL FILENAME\n    do_curl()
      {\n      echo \"trying curl...\"\n      curl --retry 5 -sL -D $tmp_dir/stderr
      \"$1\" > \"$2\"\n      rc=$?\n      # check for 404\n      grep \"404 Not Found\"
      $tmp_dir/stderr 2>&1 >/dev/null\n      if test $? -eq 0; then\n        echo
      \"ERROR 404\"\n        http_404_error\n      fi\n\n      # check for bad return
      status or empty output\n      if test $rc -ne 0 || test ! -s \"$2\"; then\n
      \       capture_tmp_stderr \"curl\"\n        return 1\n      fi\n\n      return
      0\n    }\n\n    # do_fetch URL FILENAME\n    do_fetch() {\n      echo \"trying
      fetch...\"\n      fetch -o \"$2\" \"$1\" 2>$tmp_dir/stderr\n      # check for
      bad return status\n      test $? -ne 0 && return 1\n      return 0\n    }\n\n
      \   # do_perl URL FILENAME\n    do_perl() {\n      echo \"trying perl...\"\n
      \     perl -e 'use LWP::Simple; getprint($ARGV[0]);' \"$1\" > \"$2\" 2>$tmp_dir/stderr\n
      \     rc=$?\n      # check for 404\n      grep \"404 Not Found\" $tmp_dir/stderr
      2>&1 >/dev/null\n      if test $? -eq 0; then\n        echo \"ERROR 404\"\n
      \       http_404_error\n      fi\n\n      # check for bad return status or empty
      output\n      if test $rc -ne 0 || test ! -s \"$2\"; then\n        capture_tmp_stderr
      \"perl\"\n        return 1\n      fi\n\n      return 0\n    }\n\n    # do_python
      URL FILENAME\n    do_python() {\n      echo \"trying python...\"\n      python
      -c \"import sys,urllib2 ; sys.stdout.write(urllib2.urlopen(sys.argv[1]).read())\"
      \"$1\" > \"$2\" 2>$tmp_dir/stderr\n      rc=$?\n      # check for 404\n      grep
      \"HTTP Error 404\" $tmp_dir/stderr 2>&1 >/dev/null\n      if test $? -eq 0;
      then\n        echo \"ERROR 404\"\n        http_404_error\n      fi\n\n      #
      check for bad return status or empty output\n      if test $rc -ne 0 || test
      ! -s \"$2\"; then\n        capture_tmp_stderr \"python\"\n        return 1\n
      \     fi\n      return 0\n    }\n\n    # returns 0 if checksums match\n    do_checksum()
      {\n      if exists sha256sum; then\n        echo \"Comparing checksum with sha256sum...\"\n
      \       checksum=`sha256sum $1 | awk '{ print $1 }'`\n        return `test \"x$checksum\"
      = \"x$2\"`\n      elif exists shasum; then\n        echo \"Comparing checksum
      with shasum...\"\n        checksum=`shasum -a 256 $1 | awk '{ print $1 }'`\n
      \       return `test \"x$checksum\" = \"x$2\"`\n      else\n        echo \"WARNING:
      could not find a valid checksum program, pre-install shasum or sha256sum in
      your O/S image to get valdation...\"\n        return 0\n      fi\n    }\n\n
      \   # do_download URL FILENAME\n    do_download() {\n      echo \"downloading
      $1\"\n      echo \"  to file $2\"\n\n      url=`echo $1`\n      if test \"x$platform\"
      = \"xsolaris2\"; then\n        if test \"x$platform_version\" = \"x5.9\" -o
      \"x$platform_version\" = \"x5.10\"; then\n          # solaris 9 lacks openssl,
      solaris 10 lacks recent enough credentials - your base O/S is completely insecure,
      please upgrade\n          url=`echo $url | sed -e 's/https/http/'`\n        fi\n
      \     fi\n\n      # we try all of these until we get success.\n      # perl,
      in particular may be present but LWP::Simple may not be installed\n\n      if
      exists wget; then\n        do_wget $url $2 && return 0\n      fi\n\n      if
      exists curl; then\n        do_curl $url $2 && return 0\n      fi\n\n      if
      exists fetch; then\n        do_fetch $url $2 && return 0\n      fi\n\n      if
      exists perl; then\n        do_perl $url $2 && return 0\n      fi\n\n      if
      exists python; then\n        do_python $url $2 && return 0\n      fi\n\n      unable_to_retrieve_package\n
      \   }\n\n    # install_file TYPE FILENAME\n    # TYPE is \"rpm\", \"deb\", \"solaris\",
      \"sh\", etc.\n    install_file() {\n      echo \"Installing $project $version\"\n
      \     case \"$1\" in\n        \"rpm\")\n          if test \"x$platform\" = \"xnexus\"
      || test \"x$platform\" = \"xios_xr\"; then\n            echo \"installing with
      yum...\"\n            yum install -yv \"$2\"\n          else\n            echo
      \"installing with rpm...\"\n            rpm -Uvh --oldpackage --replacepkgs
      \"$2\"\n          fi\n          ;;\n        \"deb\")\n          echo \"installing
      with dpkg...\"\n          dpkg -i \"$2\"\n          ;;\n        \"bff\")\n          echo
      \"installing with installp...\"\n          installp -aXYgd \"$2\" all\n          ;;\n
      \       \"solaris\")\n          echo \"installing with pkgadd...\"\n          echo
      \"conflict=nocheck\" > $tmp_dir/nocheck\n          echo \"action=nocheck\" >>
      $tmp_dir/nocheck\n          echo \"mail=\" >> $tmp_dir/nocheck\n          pkgrm
      -a $tmp_dir/nocheck -n $project >/dev/null 2>&1 || true\n          pkgadd -G
      -n -d \"$2\" -a $tmp_dir/nocheck $project\n          ;;\n        \"pkg\")\n
      \         echo \"installing with installer...\"\n          cd / && /usr/sbin/installer
      -pkg \"$2\" -target /\n          ;;\n        \"dmg\")\n          echo \"installing
      dmg file...\"\n          hdiutil detach \"/Volumes/chef_software\" >/dev/null
      2>&1 || true\n          hdiutil attach \"$2\" -mountpoint \"/Volumes/chef_software\"\n
      \         cd / && /usr/sbin/installer -pkg `find \"/Volumes/chef_software\"
      -name \\*.pkg` -target /\n          hdiutil detach \"/Volumes/chef_software\"\n
      \         ;;\n        \"sh\" )\n          echo \"installing with sh...\"\n          sh
      \"$2\"\n          ;;\n        *)\n          echo \"Unknown filetype: $1\"\n
      \         report_bug\n          exit 1\n          ;;\n      esac\n      if test
      $? -ne 0; then\n        echo \"Installation failed\"\n        report_bug\n        exit
      1\n      fi\n    }\n\n    if test \"x$TMPDIR\" = \"x\"; then\n      tmp=\"/tmp\"\n
      \   else\n      tmp=$TMPDIR\n    fi\n    # secure-ish temp dir creation without
      having mktemp available (DDoS-able but not expliotable)\n    tmp_dir=\"$tmp/install.sh.$$\"\n
      \   (umask 077 && mkdir $tmp_dir) || exit 1\n\n    ############\n    # end of
      helpers.sh\n    ############\n\n\n    project=chef\n    version=12.13.21+20160802231230\n
      \   channel=unstable\n\n\n    # platform_detection.sh\n    ############\n    #
      This section makes platform detection compatible with omnitruck on the system\n
      \   #   it runs.\n    #\n    # Outputs:\n    # $platform: Name of the platform.\n
      \   # $platform_version: Version of the platform.\n    # $machine: System's
      architecture.\n    ############\n\n    #\n    # Platform and Platform Version
      detection\n    #\n    # NOTE: This should now match ohai platform and platform_version
      matching.\n    # do not invented new platform and platform_version schemas,
      just make this behave\n    # like what ohai returns as platform and platform_version
      for the server.\n    #\n    # ALSO NOTE: Do not mangle platform or platform_version
      here.  It is less error\n    # prone and more future-proof to do that in the
      server, and then all omnitruck clients\n    # will 'inherit' the changes (install.sh
      is not the only client of the omnitruck\n    # endpoint out there).\n    #\n\n
      \   machine=`uname -m`\n    os=`uname -s`\n\n    if test -f \"/etc/lsb-release\"
      && grep -q DISTRIB_ID /etc/lsb-release && ! grep -q wrlinux /etc/lsb-release;
      then\n      platform=`grep DISTRIB_ID /etc/lsb-release | cut -d \"=\" -f 2 |
      tr '[A-Z]' '[a-z]'`\n      platform_version=`grep DISTRIB_RELEASE /etc/lsb-release
      | cut -d \"=\" -f 2`\n    elif test -f \"/etc/debian_version\"; then\n      platform=\"debian\"\n
      \     platform_version=`cat /etc/debian_version`\n    elif test -f \"/etc/redhat-release\";
      then\n      platform=`sed 's/^\\(.\\+\\) release.*/\\1/' /etc/redhat-release
      | tr '[A-Z]' '[a-z]'`\n      platform_version=`sed 's/^.\\+ release \\([.0-9]\\+\\).*/\\1/'
      /etc/redhat-release`\n\n      # If /etc/redhat-release exists, we act like RHEL
      by default\n      if test \"$platform\" = \"fedora\"; then\n        # FIXME:
      stop remapping fedora to el\n        # FIXME: remove client side platform_version
      mangling and hard coded yolo\n        # Change platform version for use below.\n
      \       platform_version=\"6.0\"\n      fi\n\n      if test \"$platform\" =
      \"xenserver\"; then\n        # Current XenServer 6.2 is based on CentOS 5, platform
      is not reset to \"el\" server should hanlde response\n        platform=\"xenserver\"\n
      \     else\n        # FIXME: use \"redhat\"\n        platform=\"el\"\n      fi\n\n
      \   elif test -f \"/etc/system-release\"; then\n      platform=`sed 's/^\\(.\\+\\)
      release.\\+/\\1/' /etc/system-release | tr '[A-Z]' '[a-z]'`\n      platform_version=`sed
      's/^.\\+ release \\([.0-9]\\+\\).*/\\1/' /etc/system-release | tr '[A-Z]' '[a-z]'`\n
      \     # amazon is built off of fedora, so act like RHEL\n      if test \"$platform\"
      = \"amazon linux ami\"; then\n        # FIXME: remove client side platform_version
      mangling and hard coded yolo, and remapping to deprecated \"el\"\n        platform=\"el\"\n
      \       platform_version=\"6.0\"\n      fi\n    # Apple OS X\n    elif test
      -f \"/usr/bin/sw_vers\"; then\n      platform=\"mac_os_x\"\n      # Matching
      the tab-space with sed is error-prone\n      platform_version=`sw_vers | awk
      '/^ProductVersion:/ { print $2 }' | cut -d. -f1,2`\n\n      # x86_64 Apple hardware
      often runs 32-bit kernels (see OHAI-63)\n      x86_64=`sysctl -n hw.optional.x86_64`\n
      \     if test $x86_64 -eq 1; then\n        machine=\"x86_64\"\n      fi\n    elif
      test -f \"/etc/release\"; then\n      machine=`/usr/bin/uname -p`\n      if
      grep -q SmartOS /etc/release; then\n        platform=\"smartos\"\n        platform_version=`grep
      ^Image /etc/product | awk '{ print $3 }'`\n      else\n        platform=\"solaris2\"\n
      \       platform_version=`/usr/bin/uname -r`\n      fi\n    elif test -f \"/etc/SuSE-release\";
      then\n      if grep -q 'Enterprise' /etc/SuSE-release;\n      then\n          platform=\"sles\"\n
      \         platform_version=`awk '/^VERSION/ {V = $3}; /^PATCHLEVEL/ {P = $3};
      END {print V \".\" P}' /etc/SuSE-release`\n      else\n          platform=\"suse\"\n
      \         platform_version=`awk '/^VERSION =/ { print $3 }' /etc/SuSE-release`\n
      \     fi\n    elif test \"x$os\" = \"xFreeBSD\"; then\n      platform=\"freebsd\"\n
      \     platform_version=`uname -r | sed 's/-.*//'`\n    elif test \"x$os\" =
      \"xAIX\"; then\n      platform=\"aix\"\n      platform_version=\"`uname -v`.`uname
      -r`\"\n      machine=\"powerpc\"\n    elif test -f \"/etc/os-release\"; then\n
      \     . /etc/os-release\n      if test \"x$CISCO_RELEASE_INFO\" != \"x\"; then\n
      \       . $CISCO_RELEASE_INFO\n      fi\n\n      platform=$ID\n      platform_version=$VERSION\n
      \   fi\n\n    if test \"x$platform\" = \"x\"; then\n      echo \"Unable to determine
      platform version!\"\n      report_bug\n      exit 1\n    fi\n\n    #\n    #
      NOTE: platform manging in the install.sh is DEPRECATED\n    #\n    # - install.sh
      should be true to ohai and should not remap\n    #   platform or platform versions.\n
      \   #\n    # - remapping platform and mangling platform version numbers is\n
      \   #   now the complete responsibility of the server-side endpoints\n    #\n\n
      \   major_version=`echo $platform_version | cut -d. -f1`\n    case $platform
      in\n      # FIXME: should remove this case statement completely\n      \"el\")\n
      \       # FIXME:  \"el\" is deprecated, should use \"redhat\"\n        platform_version=$major_version\n
      \       ;;\n      \"debian\")\n        if test \"x$major_version\" = \"x5\";
      then\n          # This is here for potential back-compat.\n          # We do
      not have 5 in versions we publish for anymore but we\n          # might have
      it for earlier versions.\n          platform_version=\"6\"\n        else\n          platform_version=$major_version\n
      \       fi\n        ;;\n      \"freebsd\")\n        platform_version=$major_version\n
      \       ;;\n      \"sles\")\n        platform_version=$major_version\n        ;;\n
      \     \"suse\")\n        platform_version=$major_version\n        ;;\n    esac\n\n
      \   # normalize the architecture we detected\n    case $machine in\n      \"x86_64\"|\"amd64\"|\"x64\")\n
      \       machine=\"x86_64\"\n        ;;\n      \"i386\"|\"i86pc\"|\"x86\"|\"i686\")\n
      \       machine=\"i386\"\n        ;;\n      \"sparc\"|\"sun4u\"|\"sun4v\")\n
      \       machine=\"sparc\"\n        ;;\n    esac\n\n    if test \"x$platform_version\"
      = \"x\"; then\n      echo \"Unable to determine platform version!\"\n      report_bug\n
      \     exit 1\n    fi\n\n    if test \"x$platform\" = \"xsolaris2\"; then\n      #
      hack up the path on Solaris to find wget, pkgadd\n      PATH=/usr/sfw/bin:/usr/sbin:$PATH\n
      \     export PATH\n    fi\n\n    echo \"$platform $platform_version $machine\"\n\n
      \   ############\n    # end of platform_detection.sh\n    ############\n\n\n
      \   # artifactory_urls.sh\n    ############\n    # This section sets up the
      information for a build to be installed from artifactory\n    #  then uses $platform,
      $platform_version and $machine to select the correct\n    #  version.\n    #\n
      \   # Inputs:\n    # $platform:\n    # $platform_version:\n    # $machine:\n
      \   #\n    # Outputs:\n    # $download_url:\n    # $sha256:\n    ############\n\n\n
      \     artifact_info_dir=\"$tmp_dir/artifact_info/mac_os_x/10.9/x86_64\"\n      mkdir
      -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n      echo
      \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.9/chef-12.13.21+20160802231230-1.dmg\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/mac_os_x/10.10/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.10/chef-12.13.21+20160802231230-1.dmg\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/mac_os_x/10.11/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.11/chef-12.13.21+20160802231230-1.dmg\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/14.04/ppc64le\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_ppc64el.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 ac910301f0ed899deb1fe00ab067829dc35e4291ebbde5a5b71a62f020c91699\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.10/i386\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.i386.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/el/7/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 58e06ad2bfe6291b37318eea1b313402753118e863671e28178ea60b82260a7e\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.11/i386\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.i386.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/debian/6/i686\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/debian/7/i686\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/el/7/ppc64le\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64le.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 1f9796dfbe38742d0bf4eced3470b9858569fbe0d74866adf2c4eadc3e24f084\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/debian/8/i686\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/el/7/ppc64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 1a5a4f8046459ba77fddca18ba0c72a5507c78845531c9e14909cd1789288c99\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/el/5/i686\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.i386.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 352c4457940eb4788746b419da9aecbfc0139108a942e6457ecc63adf2c21661\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/nexus/7/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/nexus/7/chef-12.13.21+20160802231230-1.nexus7.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 96100a31640ebab2ce87aff3928562d1f41ff89fba22b6b91b2e683043005da1\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/10/i386\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.i386.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 f7846f3961813789e4541dc9ec332208af155f5b009c86136dae6a34787cd438\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/el/6/i686\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.i386.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 0b1589debc9123b0f842c4e6ac2e541a5d60becb716d59c1f450a3f338c8558c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/ios_xr/6/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ios_xr/6/chef-12.13.21+20160802231230-1.ios_xr6.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 70245a37184a31d443e56106f0aaafc07f37a5fa9e527bdfdaa407ab5a3dd12a\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/9/i386\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.i386.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 6dc28814efc61c518a85ae1a7f84da52a2329500a41b392c3b545969e07c05cb\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/el/5/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 38c5e33209e69f9a8595aa9186a1bdd36b457b8f69198eb0bf59ef8a80526123\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/12.04/i686\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/14.04/i686\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_i386.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/debian/6/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/debian/7/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/debian/8/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/12.04/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/ubuntu/14.04/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/10/amd64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.amd64.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 e833b3bed62715fd1a83b518ebf8049835edf9aa835129b557a001451ec271e3\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/el/6/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.x86_64.rpm\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 a5b23e1b52741d6f05fcd81485d8879e14b4840801667e153eb83a65abec1968\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/aix/6.1/powerpc\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/6.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/aix/7.1/powerpc\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/7.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/windows/2008r2/i386\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012/i386\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x86.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012r2/i386\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/freebsd/9/amd64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.amd64.sh\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 8c618c6ba395bc631d59646f052d5e6ebb0fbe8d36db439c81e7524756975973\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/windows/2008r2/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x64.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/windows/2012r2/x86_64\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.10/sparc\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.sparc.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      >> \"$artifact_info_dir/artifact_info\"\n\n      artifact_info_dir=\"$tmp_dir/artifact_info/solaris2/5.11/sparc\"\n
      \     mkdir -p $artifact_info_dir\n      touch \"$artifact_info_dir/artifact_info\"\n
      \     echo \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.sparc.solaris\"
      >> \"$artifact_info_dir/artifact_info\"\n      echo \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      >> \"$artifact_info_dir/artifact_info\"\n\n\n    artifact_info_for_platform=\"$tmp_dir/artifact_info/$platform/$platform_version/$machine/artifact_info\"\n\n
      \   download_url=`awk '$1 == \"url\" { print $2 }' \"$artifact_info_for_platform\"`\n
      \   sha256=`awk '$1 == \"sha256\" { print $2 }' \"$artifact_info_for_platform\"`\n\n\n
      \   # fetch_package.sh\n    ############\n    # This section fetchs a package
      from $download_url and verifies its metadata.\n    #\n    # Inputs:\n    # $download_url:\n
      \   # $tmp_dir:\n    # Optional Inputs:\n    # $cmdline_filename: Name of the
      package downloaded on local disk.\n    # $cmdline_dl_dir: Name of the directory
      downloaded package will be saved to on local disk.\n    #\n    # Outputs:\n
      \   # $download_filename: Name of the downloaded file on local disk.\n    #
      $filetype: Type of the file downloaded.\n    ############\n\n    filename=`echo
      $download_url | sed -e 's/^.*\\///'`\n    filetype=`echo $filename | sed -e
      's/^.*\\.//'`\n\n    # use either $tmp_dir, the provided directory (-d) or the
      provided filename (-f)\n    if test \"x$cmdline_filename\" != \"x\"; then\n
      \     download_filename=\"$cmdline_filename\"\n    elif test \"x$cmdline_dl_dir\"
      != \"x\"; then\n      download_filename=\"$cmdline_dl_dir/$filename\"\n    else\n
      \     download_filename=\"$tmp_dir/$filename\"\n    fi\n\n    # ensure the parent
      directory where to download the installer always exists\n    download_dir=`dirname
      $download_filename`\n    (umask 077 && mkdir -p $download_dir) || exit 1\n\n
      \   # check if we have that file locally available and if so verify the checksum\n
      \   cached_file_available=\"false\"\n    if test -f $download_filename; then\n
      \     echo \"$download_filename already exists, verifiying checksum...\"\n      if
      do_checksum \"$download_filename\" \"$sha256\"; then\n        echo \"checksum
      compare succeeded, using existing file!\"\n        cached_file_available=\"true\"\n
      \     else\n        echo \"checksum mismatch, downloading latest version of
      the file\"\n      fi\n    fi\n\n    # download if no local version of the file
      available\n    if test \"x$cached_file_available\" != \"xtrue\"; then\n      do_download
      \"$download_url\"  \"$download_filename\"\n      do_checksum \"$download_filename\"
      \"$sha256\" || checksum_mismatch\n    fi\n\n    ############\n    # end of fetch_package.sh\n
      \   ############\n\n\n    # install_package.sh\n    ############\n    # Installs
      a package and removed the temp directory.\n    #\n    # Inputs:\n    # $download_filename:
      Name of the file to be installed.\n    # $filetype: Type of the file to be installed.\n
      \   # $version: The version requested. Used only for warning user if not set.\n
      \   ############\n\n    if test \"x$version\" = \"x\"; then\n      echo\n      echo
      \"WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING\"\n
      \     echo\n      echo \"You are installing an omnibus package without a version
      pin.  If you are installing\"\n      echo \"on production servers via an automated
      process this is DANGEROUS and you will\"\n      echo \"be upgraded without warning
      on new releases, even to new major releases.\"\n      echo \"Letting the version
      float is only appropriate in desktop, test, development or\"\n      echo \"CI/CD
      environments.\"\n      echo\n      echo \"WARNING WARNING WARNING WARNING WARNING
      WARNING WARNING WARNING WARNING\"\n      echo\n    fi\n\n    install_file $filetype
      \"$download_filename\"\n\n    if test \"x$tmp_dir\" != \"x\"; then\n      rm
      -r \"$tmp_dir\"\n    fi\n\n    ############\n    # end of install_package.sh\n
      \   ############\n\n    EOL\n    chmod +x /tmp/chef-installer.sh\n    sudo -E
      /tmp/chef-installer.sh)\n           ubuntu 14.04 x86_64\n           downloading
      http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\n
      \            to file /tmp/install.sh.1359/chef_12.13.21+20160802231230-1_amd64.deb\n
      \          trying wget...\n           Comparing checksum with sha256sum...\n
      \          Installing chef 12.13.21+20160802231230\n           installing with
      dpkg...\n           Selecting previously unselected package chef.\n           Waited
      35/300s for instance <i-1b55cab4> to become ready.\n           (Reading database
      ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database
      ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database
      ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database
      ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database
      ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database
      ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database
      ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database
      ... 51172 files and directories currently installed.)\n           Preparing
      to unpack .../chef_12.13.21+20160802231230-1_amd64.deb ...\n           Unpacking
      chef (12.13.21+20160802231230-1) ...\n           Setting up chef (12.13.21+20160802231230-1)
      ...\n           Thank you for installing Chef!\n    D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n    sudo_rm=\"sudo
      -E rm\"\n    dirs=\"/tmp/kitchen/clients /tmp/kitchen/cookbooks /tmp/kitchen/data
      /tmp/kitchen/data_bags /tmp/kitchen/encrypted_data_bag_secret /tmp/kitchen/environments
      /tmp/kitchen/roles\"\n    root_path=\"/tmp/kitchen\"\n\n    $sudo_rm -rf $dirs\n
      \   mkdir -p $root_path\n    ')\n           Transferring files to <git-default-ubuntu-1404>\n
      \   D      TIMING: scp async upload (Kitchen::Transport::Ssh)\n           Waited
      40/300s for instance <i-1b55cab4> to become ready.\n           Waited 45/300s
      for instance <i-1b55cab4> to become ready.\n    D      TIMING: scp async upload
      (Kitchen::Transport::Ssh) took (0m9.72s)\n    D      Transfer complete\n    D
      \     Attempting to execute command - try 1 of 1.\n    D      [SSH] ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}> (sh -c '\n    sudo -E /opt/chef/bin/chef-client
      --local-mode --config /tmp/kitchen/client.rb --log_level auto --force-formatter
      --no-color --json-attributes /tmp/kitchen/dna.json --chef-zero-port 8889\n    ')\n
      \          Starting Chef Client, version 12.13.21\n           Waited 50/300s
      for instance <i-1b55cab4> to become ready.\n           Creating a new client
      identity for git-default-ubuntu-1404 using the validator key.\n           resolving
      cookbooks for run list: [\"apt\", \"git\"]\n           Synchronizing Cookbooks:\n
      \            - apt (4.0.1)\n             - git (4.6.0)\n             - compat_resource
      (12.10.7)\n             - build-essential (6.0.3)\n             - dmg (2.4.0)\n
      \            - windows (1.44.1)\n             - yum-epel (0.7.0)\n             -
      seven_zip (2.0.1)\n             - mingw (1.2.4)\n             - chef_handler
      (1.4.0)\n             - yum (3.11.0)\n           Installing Cookbook Gems:\n
      \          Compiling Cookbooks...\n           [2016-08-03T02:01:26+00:00] WARN:
      Chef::Provider::AptRepository already exists!  Cannot create deprecation class
      for LWRP provider apt_repository from cookbook apt\n           [2016-08-03T02:01:26+00:00]
      WARN: AptRepository already exists!  Deprecation class overwrites Custom resource
      apt_repository from cookbook apt\n           Converging 10 resources\n           Recipe:
      apt::default\n             * file[/var/lib/apt/periodic/update-success-stamp]
      action nothing (skipped due to action :nothing)\n             * apt_update[periodic]
      action periodic\n               - update new lists of packages\n               *
      directory[/var/lib/apt/periodic] action create (up to date)\n               *
      directory[/etc/apt/apt.conf.d] action create (up to date)\n               *
      file[/etc/apt/apt.conf.d/15update-stamp] action create_if_missing (up to date)\n
      \          Waited 55/300s for instance <i-1b55cab4> to become ready.\n               *
      execute[apt-get -q update] action run\n                 - execute apt-get -q
      update\n\n             * execute[apt-get update] action nothing (skipped due
      to action :nothing)\n             * execute[apt-get autoremove] action nothing
      (skipped due to action :nothing)\n             * execute[apt-get autoclean]
      action nothing (skipped due to action :nothing)\n             * directory[/var/cache/local]
      action create\n               - create new directory /var/cache/local\n               -
      change mode from '' to '0755'\n               - change owner from '' to 'root'\n
      \              - change group from '' to 'root'\n             * directory[/var/cache/local/preseeding]
      action create\n               - create new directory /var/cache/local/preseeding\n
      \              - change mode from '' to '0755'\n               - change owner
      from '' to 'root'\n               - change group from '' to 'root'\n             *
      template[/etc/apt/apt.conf.d/10recommends] action create\n               - create
      new file /etc/apt/apt.conf.d/10recommends\n               - update content in
      file /etc/apt/apt.conf.d/10recommends from none to f41e1d\n               ---
      /etc/apt/apt.conf.d/10recommends  2016-08-03 02:01:34.322014000 +0000\n               +++
      /etc/apt/apt.conf.d/.chef-10recommends20160803-1526-3bwt00  2016-08-03 02:01:34.322014000
      +0000\n               @@ -1 +1,4 @@\n               +# Managed by Chef\n               +APT::Install-Recommends
      \"1\";\n               +APT::Install-Suggests \"0\";\n               - change
      mode from '' to '0644'\n               - change owner from '' to 'root'\n               -
      change group from '' to 'root'\n             * apt_package[apt-transport-https]
      action install (up to date)\n           Recipe: git::package\n             *
      git_client[default] action install\n           Waited 60/300s for instance <i-1b55cab4>
      to become ready.\n               * apt_package[default :create git] action install\n
      \                - install version 1:1.9.1-1ubuntu0.3 of package git\n\n           Starting
      audit phase\n\n           Finished in 0.00027 seconds (files took 0.2393 seconds
      to load)\n           0 examples, 0 failures\n           Auditing complete\n\n
      \          Running handlers:\n           Running handlers complete\n           Chef
      Client finished, 7/15 resources updated in 15 seconds\n    D      Cleaning up
      local sandbox in /tmp/cheftest/git-default-ubuntu-1404-sandbox-20160803-32371-1dt31m3\n
      \          Finished converging <git-default-ubuntu-1404> (0m38.42s).\n    D
      \     [SSH] shutting previous connection ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n    D      [SSH] closing
      connection to ubuntu@10.194.15.201<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"ubuntu\"}>\n           Waited 65/300s
      for instance <i-1b55cab4> to become ready.\n           Waited 70/300s for instance
      <i-1b55cab4> to become ready.\n           Waited 75/300s for instance <i-1b55cab4>
      to become ready.\n           Waited 80/300s for instance <i-1b55cab4> to become
      ready.\n           Waited 85/300s for instance <i-1b55cab4> to become ready.\n
      \          Waited 90/300s for instance <i-1b55cab4> to become ready.\n           Waited
      95/300s for instance <i-1b55cab4> to become ready.\n    D      Console output:
      ---\n    2016/08/03 02:01:50Z: EC2ConfigMonitorState: 0\n    2016/08/03 02:01:50Z:
      Windows sysprep configuration complete.\n    2016/08/03 02:01:53Z: AMI Origin
      Version: 2016.07.26\n    2016/08/03 02:01:53Z: AMI Origin Name: Windows_Server-2012-R2_RTM-English-64Bit-Base\n
      \   2016/08/03 02:01:53Z: OS: Microsoft Windows NT 6.3.9600\n    2016/08/03
      02:01:53Z: OsVersion: 6.3\n    2016/08/03 02:01:53Z: OsProductName: Windows
      Server 2012 R2 Standard\n    2016/08/03 02:01:53Z: OsBuildLabEx: 9600.18378.amd64fre.winblue_ltsb.160611-0600\n
      \   2016/08/03 02:01:53Z: Language: en-US\n    2016/08/03 02:01:53Z: TimeZone:
      Coordinated Universal Time\n    2016/08/03 02:01:53Z: Offset: UTC 00:00:00\n
      \   2016/08/03 02:01:53Z: EC2 Agent: Ec2Config service v3.18.1118\n    2016/08/03
      02:01:56Z: Message: Waiting for meta-data accessibility...\n    2016/08/03 02:01:56Z:
      Message: Meta-data is now available.\n    2016/08/03 02:01:57Z: AMI-ID: ami-2426e944\n
      \   2016/08/03 02:01:57Z: Instance-ID: i-1b55cab4\n    2016/08/03 02:01:59Z:
      Driver: AWS PV Network Device v7.4.2.0\n    2016/08/03 02:01:59Z: Driver: AWS
      PV Storage Host Adapter v7.4.2.0\n    2016/08/03 02:01:59Z: Ec2SetPassword:
      Enabled\n    2016/08/03 02:01:59Z: RDPCERTIFICATE-SUBJECTNAME: WIN-S80UEUJGJR0\n
      \   2016/08/03 02:01:59Z: RDPCERTIFICATE-THUMBPRINT: 13A5647F91509F0BCD5959FAC3192B548504422A\n
      \   2016/08/03 02:02:02Z: Username: Administrator\n    2016/08/03 02:02:02Z:
      Password: <Password>\n    tCyeNFWaWBg4OiK8epPxZGWGmqbPP4tIeBpujNR6KOk4Vyx6QFLxWuVDGdydaLoQS683TAaJoiiUOEjon3uKMyH3jPzecZWQdwL78qS29aIeA3nmK7mfyUsYQHA/BXv0ZkzoKfImFO6J4fBTgeFb1i+l9mtlwmgsajiwy7N8VV4TH2nnIVBAid1N6DqkqgCdHBq2BnWrR+3lOULWHEnMNWfp9EN+SwxTSHmtGdrd3TDyMQu5caQltddf8//CuYl/ChfhafkneICPb5O6DyBKUzUWAZyl5iIvPhX9J5VUiTyq6tNkKCkgXWm5PB+Ri0HfFGvaYqAh6NZf/FtzSf1v2A==\n
      \   </Password>\n    2016/08/03 02:02:04Z: Message: Windows is Ready to use\n\n
      \          Waited 0/300s for instance <i-1b55cab4> to fetch windows admin password.\n
      \          Retrieved Windows password for instance <i-1b55cab4>.\n           EC2
      instance <i-1b55cab4> ready.\n    D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      (Write-Host '[WinRM] Established\n    ')\n    D      [WinRM] opening remote
      shell on http://10.194.14.172:5985/wsman\n    D      [WinRM] Waiting for output...\n
      \   D      [WinRM] Processing output\n    D      [WinRM] polling for pipeline
      state. message: #<WinRM::PSRP::Message:0x007f1181e98c90 @data=\"\\xEF\\xBB\\xBF<Obj
      RefId=\\\"0\\\"><MS><Version N=\\\"protocolversion\\\">2.2</Version><Version
      N=\\\"PSVersion\\\">2.0</Version><Version N=\\\"SerializationVersion\\\">1.1.0.1</Version></MS></Obj>\",
      @destination=1, @type=65538, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n    D      [WinRM]
      Waiting for output...\n    D      [WinRM] Processing output\n    D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x007f1181f349d8
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><Obj N=\\\"ApplicationPrivateData\\\"
      RefId=\\\"1\\\"><TN RefId=\\\"0\\\"><T>System.Management.Automation.PSPrimitiveDictionary</T><T>System.Collections.Hashtable</T><T>System.Object</T></TN><DCT><En><S
      N=\\\"Key\\\">DebugMode</S><I32 N=\\\"Value\\\">1</I32></En><En><S N=\\\"Key\\\">DebugStop</S><B
      N=\\\"Value\\\">false</B></En><En><S N=\\\"Key\\\">PSVersionTable</S><Obj N=\\\"Value\\\"
      RefId=\\\"2\\\"><TNRef RefId=\\\"0\\\" /><DCT><En><S N=\\\"Key\\\">PSVersion</S><Version
      N=\\\"Value\\\">2.0</Version></En><En><S N=\\\"Key\\\">PSCompatibleVersions</S><Obj
      N=\\\"Value\\\" RefId=\\\"3\\\"><TN RefId=\\\"1\\\"><T>System.Version[]</T><T>System.Array</T><T>System.Object</T></TN><LST><Version>1.0</Version><Version>2.0</Version><Version>3.0</Version><Version>4.0</Version></LST></Obj></En><En><S
      N=\\\"Key\\\">BuildVersion</S><Version N=\\\"Value\\\">6.3.9600.17400</Version></En><En><S
      N=\\\"Key\\\">CLRVersion</S><Version N=\\\"Value\\\">4.0.30319.42000</Version></En><En><S
      N=\\\"Key\\\">WSManStackVersion</S><Version N=\\\"Value\\\">3.0</Version></En><En><S
      N=\\\"Key\\\">PSRemotingProtocolVersion</S><Version N=\\\"Value\\\">2.2</Version></En><En><S
      N=\\\"Key\\\">SerializationVersion</S><Version N=\\\"Value\\\">1.1.0.1</Version></En></DCT></Obj></En><En><S
      N=\\\"Key\\\">DebugBreakpointCount</S><I32 N=\\\"Value\\\">0</I32></En></DCT></Obj></MS></Obj>\",
      @destination=1, @type=135177, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n    D      [WinRM]
      Waiting for output...\n    D      [WinRM] Processing output\n    D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x007f1181fefa08
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><I32 N=\\\"RunspaceState\\\">2</I32></MS></Obj>\",
      @destination=1, @type=135173, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n    D      [WinRM]
      remote shell created with shell_id: CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D
      \     [WinRM] Command created for Write-Host '[WinRM] Established\n    ' with
      id: EE4C8A9B-BD85-4B8C-BDFD-79A63B57C8C9\n    D      [WinRM] creating command_id:
      EE4C8A9B-BD85-4B8C-BDFD-79A63B57C8C9 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \          [WinRM] Established\n\n    D      [WinRM] cleaning up command_id:
      EE4C8A9B-BD85-4B8C-BDFD-79A63B57C8C9 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] reusing existing connection <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>\n
      \   D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\", :user=>\"administrator\",
      :password=>\"z=7iCL=5rXK\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"z=7iCL=5rXK\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}> (New-Item -Force C:\\chef\\ohai\\hints\\ec2.json -ItemType
      File)\n    D      [WinRM] Command created for New-Item -Force C:\\chef\\ohai\\hints\\ec2.json
      -ItemType File with id: 682872E7-4158-4BF8-8D3E-46B42AE5406F\n    D      [WinRM]
      creating command_id: 682872E7-4158-4BF8-8D3E-46B42AE5406F on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n\n\n
      \              Directory: C:\\chef\\ohai\\hints\n\n\n           Mode                LastWriteTime
      \    Length Name\n           ----                -------------     ------ ----\n
      \          -a---          8/3/2016   2:02 AM          0 ec2.json\n\n\n    D
      \     [WinRM] cleaning up command_id: 682872E7-4158-4BF8-8D3E-46B42AE5406F on
      shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      ec2:create '10.194.14.172'\n
      \          Finished creating <git-default-windows-windows-2012r2> (2m16.45s).\n
      \   -----> Converging <git-default-windows-windows-2012r2>...\n           Preparing
      files for transfer\n    D      Creating local sandbox in /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu\n
      \          Preparing dna.json\n    D      Creating dna.json from {:chef_acceptance=>\"true\",
      :use_system_chef=>\"true\", :run_list=>[\"recipe[git]\"]}\n           Resolving
      cookbook dependencies with Berkshelf 4.3.5...\n    D      Using Berksfile from
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/top-cookbooks/test_run/git/Berksfile\n
      \          Removing non-cookbook files before transfer\n           Preparing
      validation.pem\n    D      Using a dummy validation.pem\n           Preparing
      client.rb\n    D      Creating client.rb from {:node_name=>\"git-default-windows-windows-2012r2\",
      :checksum_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\checksums\", :file_cache_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\cache\",
      :file_backup_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\backup\", :cookbook_path=>[\"\\#{ENV['TEMP']}\\\\kitchen\\\\cookbooks\",
      \"\\#{ENV['TEMP']}\\\\kitchen\\\\site-cookbooks\"], :data_bag_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\data_bags\",
      :environment_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\environments\", :node_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\nodes\",
      :role_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\roles\", :client_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\clients\",
      :user_path=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\users\", :validation_key=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\validation.pem\",
      :client_key=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\client.pem\", :chef_server_url=>\"http://127.0.0.1:8889\",
      :encrypted_data_bag_secret=>\"\\#{ENV['TEMP']}\\\\kitchen\\\\encrypted_data_bag_secret\",
      :audit_mode=>\":enabled\", :named_run_list=>{}}\n    D      [WinRM] reusing
      existing connection <{:endpoint=>\"http://10.194.14.172:5985/wsman\", :user=>\"administrator\",
      :password=>\"z=7iCL=5rXK\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"z=7iCL=5rXK\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}>\n    D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      (new-module -name Omnitruck -scriptblock {\n    function Get-PlatformVersion
      {\n      switch -regex ((get-wmiobject win32_operatingsystem).version) {\n        '10\\.0\\.\\d+'
      {$platform_version = '2012r2'}\n        '6\\.3\\.\\d+'  {$platform_version =
      '2012r2'}\n        '6\\.2\\.\\d+'  {$platform_version = '2012'}\n        '6\\.1\\.\\d+'
      \ {$platform_version = '2008r2'}\n        '6\\.0\\.\\d+'  {$platform_version
      = '2008'}\n      }\n      return $platform_version\n    }\n\n    function Get-PlatformArchitecture
      {\n      if ((get-wmiobject win32_operatingsystem).osarchitecture -like '64-bit')
      {\n        $architecture = 'x86_64'\n      } else {\n        $architecture =
      'i386'\n      }\n      return $architecture\n    }\n\n    function New-Uri {\n
      \     param ($baseuri, $newuri)\n\n      try {\n      new-object System.Uri
      $baseuri, $newuri\n      }\n      catch [System.Management.Automation.MethodInvocationException]{\n
      \       Write-Error \"$($_.exception.message)\"\n        throw $_.exception\n
      \     }\n    }\n\n    function Get-WebContent {\n      param ($uri, $filepath)\n
      \     $proxy = New-Object -TypeName System.Net.WebProxy\n      $wc = new-object
      System.Net.WebClient\n      $proxy.Address = $env:http_proxy\n      $wc.Proxy
      = $proxy\n\n      try {\n        if ([string]::IsNullOrEmpty($filepath)) {\n
      \         $wc.downloadstring($uri)\n        }\n        else {\n          $wc.downloadfile($uri,
      $filepath)\n        }\n      }\n      catch {\n        $exception = $_.Exception\n
      \       Write-Host \"There was an error: \"\n        do {\n          Write-Host
      \"`t$($exception.message)\"\n          $exception = $exception.innerexception\n
      \       } while ($exception)\n        throw \"Failed to download from $uri.\"\n
      \     }\n    }\n\n    function Test-ProjectPackage {\n      [cmdletbinding()]\n
      \     param ($Path, $Algorithm = 'SHA256', $Hash)\n\n      if (-not (get-command
      get-filehash))   {\n        function disposable($o){($o -is [IDisposable]) -and
      (($o | get-member | foreach-object {$_.name}) -contains 'Dispose')}\n        function
      use($obj, [scriptblock]$sb){try {& $sb} catch [exception]{throw $_} finally
      {if (disposable $obj) {$obj.Dispose()}} }\n        function Get-FileHash ($Path,
      $Algorithm) {\n          $Path = (resolve-path $path).providerpath\n          $hash
      = @{Algorithm = $Algorithm; Path = $Path}\n          use ($c = New-Object -TypeName
      Security.Cryptography.SHA256Managed) {\n            use ($in = (gi $path).OpenRead())
      {\n              $hash.Hash = ([BitConverter]::ToString($c.ComputeHash($in))).Replace(\"-\",
      \"\").ToUpper()\n            }\n          }\n          new-object PSObject -Property
      $hash\n        }\n      }\n      Write-Verbose \"Testing the $Algorithm hash
      for $path.\"\n      $ActualHash = (Get-FileHash -Algorithm $Algorithm -Path
      $Path).Hash.ToLower()\n      Write-Verbose \"`tDesired Hash - '$hash'\"\n      Write-Verbose
      \"`tActual Hash  - '$ActualHash'\"\n      $Valid = $ActualHash -eq $Hash\n      if
      (-not $Valid) {\n        Write-Error \"Failed to validate the downloaded installer.
      \ The expected $Algorithm hash was '$Hash' and the actual hash was '$ActualHash'
      for $path\"\n      }\n      return $Valid\n    }\n\n    function Get-ProjectMetadata
      {\n      <#\n        .SYNOPSIS\n        Get metadata for a Chef Software, Inc.
      project\n        .DESCRIPTION\n        Get metadata for project\n        .EXAMPLE\n
      \       iex (new-object net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1');
      Get-ProjectMetadata -project chef -channel stable\n\n        Gets the download
      url and SHA256 checksum for the latest stable release of Chef.\n        .EXAMPLE\n
      \       iex (irm 'https://omnitruck.chef.io/install.ps1'); Get-ProjectMetadata
      -project chefdk -channel stable -version 0.8.0\n\n        Gets the download
      url, and SHA256 checksum for ChefDK 0.8.0.\n      #>\n      [cmdletbinding()]\n
      \     param (\n        # Base url to retrieve metadata from.\n        [uri]$base_server_uri
      = 'https://omnitruck.chef.io/',\n        [string]\n        # Project to install\n
      \       [string]\n        $project = 'chef',\n        # Version of the application
      to install\n        # This parameter is optional, if not supplied it will provide
      the latest version,\n        # and if an iteration number is not specified,
      it will grab the latest available iteration.\n        # Partial version numbers
      are also acceptable (using v=11\n        # will grab the latest 11.x client
      which matches the other flags).\n        [string]\n        $version,\n        #
      Release channel to install from\n        $channel = 'unstable',\n        # The
      following legacy switches are just aliases for the current channel\n        [switch]\n
      \       $prerelease,\n        [switch]\n        $nightlies,\n        [validateset('auto',
      'i386', 'x86_64')]\n        [string]\n        $architecture = 'auto'\n      )\n\n
      \     # PowerShell is only on Windows ATM\n      $platform = 'windows'\n      Write-Verbose
      \"Platform: $platform\"\n\n      $platform_version = Get-PlatformVersion\n      Write-Verbose
      \"Platform Version: $platform_version\"\n\n      if ($architecture -eq 'auto')
      {\n        $architecture = Get-PlatformArchitecture\n      }\n\n      Write-Verbose
      \"Architecture: $architecture\"\n      Write-Verbose \"Project: $project\"\n\n\n
      \       $artifact_info_dir = \"$($env:temp)/artifact_info/mac_os_x/10.9/x86_64\"\n
      \       New-Item -ItemType directory -Path $artifact_info_dir -force\n        New-Item
      -ItemType file \"$($artifact_info_dir)/artifact_info\" -force\n        \"url
      http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.9/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.10/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.10/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.11/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.11/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/ppc64le\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_ppc64el.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 ac910301f0ed899deb1fe00ab067829dc35e4291ebbde5a5b71a62f020c91699\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/x86_64\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 58e06ad2bfe6291b37318eea1b313402753118e863671e28178ea60b82260a7e\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/i686\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/i686\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64le\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64le.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 1f9796dfbe38742d0bf4eced3470b9858569fbe0d74866adf2c4eadc3e24f084\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/i686\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 1a5a4f8046459ba77fddca18ba0c72a5507c78845531c9e14909cd1789288c99\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/i686\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 352c4457940eb4788746b419da9aecbfc0139108a942e6457ecc63adf2c21661\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/nexus/7/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/nexus/7/chef-12.13.21+20160802231230-1.nexus7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 96100a31640ebab2ce87aff3928562d1f41ff89fba22b6b91b2e683043005da1\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 f7846f3961813789e4541dc9ec332208af155f5b009c86136dae6a34787cd438\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/i686\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 0b1589debc9123b0f842c4e6ac2e541a5d60becb716d59c1f450a3f338c8558c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ios_xr/6/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ios_xr/6/chef-12.13.21+20160802231230-1.ios_xr6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 70245a37184a31d443e56106f0aaafc07f37a5fa9e527bdfdaa407ab5a3dd12a\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 6dc28814efc61c518a85ae1a7f84da52a2329500a41b392c3b545969e07c05cb\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/x86_64\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 38c5e33209e69f9a8595aa9186a1bdd36b457b8f69198eb0bf59ef8a80526123\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/i686\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/i686\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/amd64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 e833b3bed62715fd1a83b518ebf8049835edf9aa835129b557a001451ec271e3\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/x86_64\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a5b23e1b52741d6f05fcd81485d8879e14b4840801667e153eb83a65abec1968\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/6.1/powerpc\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/6.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/7.1/powerpc\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/7.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/amd64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 8c618c6ba395bc631d59646f052d5e6ebb0fbe8d36db439c81e7524756975973\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/sparc\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/sparc\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n\n      $artifact_info_for_platform
      = Get-Content \"$($env:temp)/artifact_info/$($platform)/$($platform_version)/$($architecture)/artifact_info\"\n\n
      \     $package_metadata = ($artifact_info_for_platform).trim() -split '\\n'
      |\n        foreach { $hash = @{} } {$key, $value = $_ -split '\\s+'; $hash.Add($key,
      $value)} {$hash}\n\n      Write-Verbose \"Project details: \"\n      foreach
      ($key in $package_metadata.keys) {\n        Write-Verbose \"`t$key = $($package_metadata[$key])\"\n
      \     }\n      $package_metadata\n    }\n\n    function Install-Project {\n
      \     <#\n        .SYNOPSIS\n        Install a Chef Software, Inc. product\n
      \       .DESCRIPTION\n        Install a Chef Software, Inc. product\n        .EXAMPLE\n
      \       iex (new-object net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1');
      Install-Project -project chef -channel stable\n\n        Installs the latest
      stable version of Chef.\n        .EXAMPLE\n        iex (irm 'https://omnitruck.chef.io/install.ps1');
      Install-Project -project chefdk -channel current\n\n        Installs the latest
      integration build of the Chef Development Kit\n      #>\n      [cmdletbinding(SupportsShouldProcess=$true)]\n
      \     param (\n        # Project to install\n        [string]\n        $project
      = 'chef',\n        # Release channel to install from\n        [validateset('current',
      'stable', 'unstable')]\n        [string]\n        $channel = 'stable',\n        #
      Version of the application to install\n        # This parameter is optional,
      if not supplied it will provide the latest version,\n        # and if an iteration
      number is not specified, it will grab the latest available iteration.\n        #
      Partial version numbers are also acceptable (using v=11\n        # will grab
      the latest 11.x client which matches the other flags).\n        [string]\n        $version,\n
      \       # Full path for the downloaded installer.\n        [string]\n        $filename,\n
      \       # Full path to the location to download the installer\n        [string]\n
      \       $download_directory = $env:temp,\n        # The following legacy switches
      are just aliases for the current channel\n        [switch]\n        $prerelease,\n
      \       [switch]\n        $nightlies,\n        [validateset('auto', 'i386',
      'x86_64')]\n        [string]\n        $architecture = 'auto'\n      )\n\n      $package_metadata
      = Get-ProjectMetadata -project $project -channel $channel -version $version
      -prerelease:$prerelease -nightlies:$nightlies -architecture $architecture\n\n
      \     if (-not [string]::IsNullOrEmpty($filename)) {\n        $download_directory
      = split-path $filename\n        $filename = split-path $filename -leaf\n        if
      ([string]::IsNullOrEmpty($download_directory)) {\n          $download_directory
      = $pwd\n        }\n      }\n      else {\n        $filename = ($package_metadata.url
      -split '/')[-1]\n      }\n      Write-Verbose \"Download directory: $download_directory\"\n
      \     Write-Verbose \"Filename: $filename\"\n\n      if (-not (test-path $download_directory))
      {\n        mkdir $download_directory\n      }\n      $download_directory = (resolve-path
      $download_directory).providerpath\n      $download_destination = join-path $download_directory
      $filename\n\n      if ((test-path $download_destination) -and\n        (Test-ProjectPackage
      -Path $download_destination -Algorithm 'SHA256' -Hash $package_metadata.sha256
      -ea SilentlyContinue)){\n        Write-Verbose \"Found existing valid installer
      at $download_destination.\"\n      }\n      else {\n        if ($pscmdlet.ShouldProcess(\"$($package_metadata.url)\",
      \"Download $project\")) {\n          Write-Verbose \"Downloading $project from
      $($package_metadata.url) to $download_destination.\"\n          Get-WebContent
      $package_metadata.url -filepath $download_destination\n        }\n      }\n\n
      \     if ($pscmdlet.ShouldProcess(\"$download_destination\", \"Installing\")){\n
      \       if (Test-ProjectPackage -Path $download_destination -Algorithm 'SHA256'
      -Hash $package_metadata.sha256) {\n          Write-Host \"Installing $project
      from $download_destination\"\n          $installingProject = $True\n          $installAttempts
      = 0\n          while ($installingProject) {\n            $p = Start-Process
      -FilePath \"msiexec\" -ArgumentList \"/qn /i $download_destination\" -Passthru
      -Wait\n            $p.WaitForExit()\n            if ($p.ExitCode -eq 1618) {\n
      \             Write-Host \"Another msi install is in progress (exit code 1618),
      retrying ($($installAttempts))...\"\n              continue\n            } elseif
      ($p.ExitCode -ne 0) {\n              throw \"msiexec was not successful. Received
      exit code $($p.ExitCode)\"\n            }\n            $installingProject =
      $False\n          }\n        }\n        else {\n          throw \"Failed to
      validate the downloaded installer for $project.\"\n        }\n      }\n    }\n
      \   set-alias install -value Install-Project\n    export-modulemember -function
      'Install-Project','Get-ProjectMetadata' -alias 'install'\n\n    }\n\n    install
      -project chef -version 12.13.21+20160802231230 -channel unstable\n    )\n    D
      \     [WinRM] Command created for new-module -name Omnitruck -scriptblock {\n
      \   function Get-PlatformVersion {\n      switch -regex ((get-wmiobject win32_operatingsystem).version)
      {\n        '10\\.0\\.\\d+' {$platform_version = '2012r2'}\n        '6\\.3\\.\\d+'
      \ {$platform_version = '2012r2'}\n        '6\\.2\\.\\d+'  {$platform_version
      = '2012'}\n        '6\\.1\\.\\d+'  {$platform_version = '2008r2'}\n        '6\\.0\\.\\d+'
      \ {$platform_version = '2008'}\n      }\n      return $platform_version\n    }\n\n
      \   function Get-PlatformArchitecture {\n      if ((get-wmiobject win32_operatingsystem).osarchitecture
      -like '64-bit') {\n        $architecture = 'x86_64'\n      } else {\n        $architecture
      = 'i386'\n      }\n      return $architecture\n    }\n\n    function New-Uri
      {\n      param ($baseuri, $newuri)\n\n      try {\n      new-object System.Uri
      $baseuri, $newuri\n      }\n      catch [System.Management.Automation.MethodInvocationException]{\n
      \       Write-Error \"$($_.exception.message)\"\n        throw $_.exception\n
      \     }\n    }\n\n    function Get-WebContent {\n      param ($uri, $filepath)\n
      \     $proxy = New-Object -TypeName System.Net.WebProxy\n      $wc = new-object
      System.Net.WebClient\n      $proxy.Address = $env:http_proxy\n      $wc.Proxy
      = $proxy\n\n      try {\n        if ([string]::IsNullOrEmpty($filepath)) {\n
      \         $wc.downloadstring($uri)\n        }\n        else {\n          $wc.downloadfile($uri,
      $filepath)\n        }\n      }\n      catch {\n        $exception = $_.Exception\n
      \       Write-Host \"There was an error: \"\n        do {\n          Write-Host
      \"`t$($exception.message)\"\n          $exception = $exception.innerexception\n
      \       } while ($exception)\n        throw \"Failed to download from $uri.\"\n
      \     }\n    }\n\n    function Test-ProjectPackage {\n      [cmdletbinding()]\n
      \     param ($Path, $Algorithm = 'SHA256', $Hash)\n\n      if (-not (get-command
      get-filehash))   {\n        function disposable($o){($o -is [IDisposable]) -and
      (($o | get-member | foreach-object {$_.name}) -contains 'Dispose')}\n        function
      use($obj, [scriptblock]$sb){try {& $sb} catch [exception]{throw $_} finally
      {if (disposable $obj) {$obj.Dispose()}} }\n        function Get-FileHash ($Path,
      $Algorithm) {\n          $Path = (resolve-path $path).providerpath\n          $hash
      = @{Algorithm = $Algorithm; Path = $Path}\n          use ($c = New-Object -TypeName
      Security.Cryptography.SHA256Managed) {\n            use ($in = (gi $path).OpenRead())
      {\n              $hash.Hash = ([BitConverter]::ToString($c.ComputeHash($in))).Replace(\"-\",
      \"\").ToUpper()\n            }\n          }\n          new-object PSObject -Property
      $hash\n        }\n      }\n      Write-Verbose \"Testing the $Algorithm hash
      for $path.\"\n      $ActualHash = (Get-FileHash -Algorithm $Algorithm -Path
      $Path).Hash.ToLower()\n      Write-Verbose \"`tDesired Hash - '$hash'\"\n      Write-Verbose
      \"`tActual Hash  - '$ActualHash'\"\n      $Valid = $ActualHash -eq $Hash\n      if
      (-not $Valid) {\n        Write-Error \"Failed to validate the downloaded installer.
      \ The expected $Algorithm hash was '$Hash' and the actual hash was '$ActualHash'
      for $path\"\n      }\n      return $Valid\n    }\n\n    function Get-ProjectMetadata
      {\n      <#\n        .SYNOPSIS\n        Get metadata for a Chef Software, Inc.
      project\n        .DESCRIPTION\n        Get metadata for project\n        .EXAMPLE\n
      \       iex (new-object net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1');
      Get-ProjectMetadata -project chef -channel stable\n\n        Gets the download
      url and SHA256 checksum for the latest stable release of Chef.\n        .EXAMPLE\n
      \       iex (irm 'https://omnitruck.chef.io/install.ps1'); Get-ProjectMetadata
      -project chefdk -channel stable -version 0.8.0\n\n        Gets the download
      url, and SHA256 checksum for ChefDK 0.8.0.\n      #>\n      [cmdletbinding()]\n
      \     param (\n        # Base url to retrieve metadata from.\n        [uri]$base_server_uri
      = 'https://omnitruck.chef.io/',\n        [string]\n        # Project to install\n
      \       [string]\n        $project = 'chef',\n        # Version of the application
      to install\n        # This parameter is optional, if not supplied it will provide
      the latest version,\n        # and if an iteration number is not specified,
      it will grab the latest available iteration.\n        # Partial version numbers
      are also acceptable (using v=11\n        # will grab the latest 11.x client
      which matches the other flags).\n        [string]\n        $version,\n        #
      Release channel to install from\n        $channel = 'unstable',\n        # The
      following legacy switches are just aliases for the current channel\n        [switch]\n
      \       $prerelease,\n        [switch]\n        $nightlies,\n        [validateset('auto',
      'i386', 'x86_64')]\n        [string]\n        $architecture = 'auto'\n      )\n\n
      \     # PowerShell is only on Windows ATM\n      $platform = 'windows'\n      Write-Verbose
      \"Platform: $platform\"\n\n      $platform_version = Get-PlatformVersion\n      Write-Verbose
      \"Platform Version: $platform_version\"\n\n      if ($architecture -eq 'auto')
      {\n        $architecture = Get-PlatformArchitecture\n      }\n\n      Write-Verbose
      \"Architecture: $architecture\"\n      Write-Verbose \"Project: $project\"\n\n\n
      \       $artifact_info_dir = \"$($env:temp)/artifact_info/mac_os_x/10.9/x86_64\"\n
      \       New-Item -ItemType directory -Path $artifact_info_dir -force\n        New-Item
      -ItemType file \"$($artifact_info_dir)/artifact_info\" -force\n        \"url
      http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.9/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.10/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.10/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/mac_os_x/10.11/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/mac_os_x/10.11/chef-12.13.21+20160802231230-1.dmg\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a4a6936e8986a44f769ef6f83675137354d67b4ac0bf38337902da45cfce2df5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/ppc64le\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_ppc64el.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 ac910301f0ed899deb1fe00ab067829dc35e4291ebbde5a5b71a62f020c91699\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/x86_64\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 58e06ad2bfe6291b37318eea1b313402753118e863671e28178ea60b82260a7e\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.i386.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a158c1ca6dd9ecc9b22e6415ed4bcece62ca8485bd05356aa7fd31a6dd78d460\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/i686\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/i686\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64le\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64le.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 1f9796dfbe38742d0bf4eced3470b9858569fbe0d74866adf2c4eadc3e24f084\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/i686\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 deddfe6be4fbbe34342584079b5845ef08e1556c3b7ed0fd0a2d88b97e2e183c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/7/ppc64\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/7/chef-12.13.21+20160802231230-1.el7.ppc64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 1a5a4f8046459ba77fddca18ba0c72a5507c78845531c9e14909cd1789288c99\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/i686\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 352c4457940eb4788746b419da9aecbfc0139108a942e6457ecc63adf2c21661\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/nexus/7/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/nexus/7/chef-12.13.21+20160802231230-1.nexus7.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 96100a31640ebab2ce87aff3928562d1f41ff89fba22b6b91b2e683043005da1\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 f7846f3961813789e4541dc9ec332208af155f5b009c86136dae6a34787cd438\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/i686\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.i386.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 0b1589debc9123b0f842c4e6ac2e541a5d60becb716d59c1f450a3f338c8558c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ios_xr/6/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ios_xr/6/chef-12.13.21+20160802231230-1.ios_xr6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 70245a37184a31d443e56106f0aaafc07f37a5fa9e527bdfdaa407ab5a3dd12a\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.i386.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 6dc28814efc61c518a85ae1a7f84da52a2329500a41b392c3b545969e07c05cb\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/5/x86_64\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/5/chef-12.13.21+20160802231230-1.el5.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 38c5e33209e69f9a8595aa9186a1bdd36b457b8f69198eb0bf59ef8a80526123\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/i686\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/i686\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_i386.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 c423705c27b16bf311671995388826f2de937d0afa7966ad5bce6253fb87e983\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/6/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/6/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/7/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/7/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/debian/8/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/debian/8/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cdb950368d6be5ec254cfbeb50501a9bceafeacc2f16c1b513c7c41f408525fa\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/12.04/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/12.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/ubuntu/14.04/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/ubuntu/14.04/chef_12.13.21+20160802231230-1_amd64.deb\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 5de2c3cd2dca58598897c686f0ae031647734ec5cdd26338d243903e253dd68c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/10/amd64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/10/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 e833b3bed62715fd1a83b518ebf8049835edf9aa835129b557a001451ec271e3\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/el/6/x86_64\"\n        New-Item -ItemType directory
      -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/el/6/chef-12.13.21+20160802231230-1.el6.x86_64.rpm\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 a5b23e1b52741d6f05fcd81485d8879e14b4840801667e153eb83a65abec1968\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/6.1/powerpc\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/6.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/aix/7.1/powerpc\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/aix/7.1/chef-12.13.21+20160802231230-1.powerpc.bff\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 b1ed8cf89f57d1df731591a24143a7de366ec469269df4a4123082883445a09d\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/i386\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x86.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 cd9adda32557338cf3a45a76f05457b5404afae734dfd3e59aa99b80a0d4ed1c\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/freebsd/9/amd64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/freebsd/9/chef-12.13.21+20160802231230_1.amd64.sh\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 8c618c6ba395bc631d59646f052d5e6ebb0fbe8d36db439c81e7524756975973\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2008r2/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2008r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/windows/2012r2/x86_64\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/windows/2012r2/chef-client-12.13.21+20160802231230-1-x64.msi\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 5209e5d6e8fd110827b3ce7e576c85b7f89127fc6eedf62335049104664b32c5\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.10/sparc\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.10/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n        $artifact_info_dir
      = \"$($env:temp)/artifact_info/solaris2/5.11/sparc\"\n        New-Item -ItemType
      directory -Path $artifact_info_dir -force\n        New-Item -ItemType file \"$($artifact_info_dir)/artifact_info\"
      -force\n        \"url http://artifactory.chef.co:8081/omnibus-unstable-local/com/getchef/chef/12.13.21+20160802231230/solaris2/5.11/chef-12.13.21+20160802231230-1.sparc.solaris\"
      | out-file \"$artifact_info_dir/artifact_info\"\n        \"sha256 6e1c2ffcb1571f6f826a40f87756784882a5a34c966fcc2fef3dbb902de78126\"
      | out-file \"$artifact_info_dir/artifact_info\" -Append\n\n\n      $artifact_info_for_platform
      = Get-Content \"$($env:temp)/artifact_info/$($platform)/$($platform_version)/$($architecture)/artifact_info\"\n\n
      \     $package_metadata = ($artifact_info_for_platform).trim() -split '\\n'
      |\n        foreach { $hash = @{} } {$key, $value = $_ -split '\\s+'; $hash.Add($key,
      $value)} {$hash}\n\n      Write-Verbose \"Project details: \"\n      foreach
      ($key in $package_metadata.keys) {\n        Write-Verbose \"`t$key = $($package_metadata[$key])\"\n
      \     }\n      $package_metadata\n    }\n\n    function Install-Project {\n
      \     <#\n        .SYNOPSIS\n        Install a Chef Software, Inc. product\n
      \       .DESCRIPTION\n        Install a Chef Software, Inc. product\n        .EXAMPLE\n
      \       iex (new-object net.webclient).downloadstring('https://omnitruck.chef.io/install.ps1');
      Install-Project -project chef -channel stable\n\n        Installs the latest
      stable version of Chef.\n        .EXAMPLE\n        iex (irm 'https://omnitruck.chef.io/install.ps1');
      Install-Project -project chefdk -channel current\n\n        Installs the latest
      integration build of the Chef Development Kit\n      #>\n      [cmdletbinding(SupportsShouldProcess=$true)]\n
      \     param (\n        # Project to install\n        [string]\n        $project
      = 'chef',\n        # Release channel to install from\n        [validateset('current',
      'stable', 'unstable')]\n        [string]\n        $channel = 'stable',\n        #
      Version of the application to install\n        # This parameter is optional,
      if not supplied it will provide the latest version,\n        # and if an iteration
      number is not specified, it will grab the latest available iteration.\n        #
      Partial version numbers are also acceptable (using v=11\n        # will grab
      the latest 11.x client which matches the other flags).\n        [string]\n        $version,\n
      \       # Full path for the downloaded installer.\n        [string]\n        $filename,\n
      \       # Full path to the location to download the installer\n        [string]\n
      \       $download_directory = $env:temp,\n        # The following legacy switches
      are just aliases for the current channel\n        [switch]\n        $prerelease,\n
      \       [switch]\n        $nightlies,\n        [validateset('auto', 'i386',
      'x86_64')]\n        [string]\n        $architecture = 'auto'\n      )\n\n      $package_metadata
      = Get-ProjectMetadata -project $project -channel $channel -version $version
      -prerelease:$prerelease -nightlies:$nightlies -architecture $architecture\n\n
      \     if (-not [string]::IsNullOrEmpty($filename)) {\n        $download_directory
      = split-path $filename\n        $filename = split-path $filename -leaf\n        if
      ([string]::IsNullOrEmpty($download_directory)) {\n          $download_directory
      = $pwd\n        }\n      }\n      else {\n        $filename = ($package_metadata.url
      -split '/')[-1]\n      }\n      Write-Verbose \"Download directory: $download_directory\"\n
      \     Write-Verbose \"Filename: $filename\"\n\n      if (-not (test-path $download_directory))
      {\n        mkdir $download_directory\n      }\n      $download_directory = (resolve-path
      $download_directory).providerpath\n      $download_destination = join-path $download_directory
      $filename\n\n      if ((test-path $download_destination) -and\n        (Test-ProjectPackage
      -Path $download_destination -Algorithm 'SHA256' -Hash $package_metadata.sha256
      -ea SilentlyContinue)){\n        Write-Verbose \"Found existing valid installer
      at $download_destination.\"\n      }\n      else {\n        if ($pscmdlet.ShouldProcess(\"$($package_metadata.url)\",
      \"Download $project\")) {\n          Write-Verbose \"Downloading $project from
      $($package_metadata.url) to $download_destination.\"\n          Get-WebContent
      $package_metadata.url -filepath $download_destination\n        }\n      }\n\n
      \     if ($pscmdlet.ShouldProcess(\"$download_destination\", \"Installing\")){\n
      \       if (Test-ProjectPackage -Path $download_destination -Algorithm 'SHA256'
      -Hash $package_metadata.sha256) {\n          Write-Host \"Installing $project
      from $download_destination\"\n          $installingProject = $True\n          $installAttempts
      = 0\n          while ($installingProject) {\n            $p = Start-Process
      -FilePath \"msiexec\" -ArgumentList \"/qn /i $download_destination\" -Passthru
      -Wait\n            $p.WaitForExit()\n            if ($p.ExitCode -eq 1618) {\n
      \             Write-Host \"Another msi install is in progress (exit code 1618),
      retrying ($($installAttempts))...\"\n              continue\n            } elseif
      ($p.ExitCode -ne 0) {\n              throw \"msiexec was not successful. Received
      exit code $($p.ExitCode)\"\n            }\n            $installingProject =
      $False\n          }\n        }\n        else {\n          throw \"Failed to
      validate the downloaded installer for $project.\"\n        }\n      }\n    }\n
      \   set-alias install -value Install-Project\n    export-modulemember -function
      'Install-Project','Get-ProjectMetadata' -alias 'install'\n\n    }\n\n    install
      -project chef -version 12.13.21+20160802231230 -channel unstable\n     with
      id: 0BB63762-BA47-4D3B-82E8-97C4F7DEB299\n    D      [WinRM] creating command_id:
      0BB63762-BA47-4D3B-82E8-97C4F7DEB299 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n\n
      \          ModuleType Version    Name                                ExportedCommands\n
      \          ---------- -------    ----                                ----------------\n
      \          Script     0.0        Omnitruck                           {Get-ProjectMetada...\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \          Installing chef from C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\chef-client-12.13.21+20160802231230-1-x64.msi\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] retrying receive
      request after timeout\n    D      [WinRM] Processing output\n\n\n    D      [WinRM]
      cleaning up command_id: 0BB63762-BA47-4D3B-82E8-97C4F7DEB299 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\", :user=>\"administrator\",
      :password=>\"z=7iCL=5rXK\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"z=7iCL=5rXK\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}> ($dirs = @(\"$env:TEMP\\kitchen\\clients\", \"$env:TEMP\\kitchen\\cookbooks\",
      \"$env:TEMP\\kitchen\\data\", \"$env:TEMP\\kitchen\\data_bags\", \"$env:TEMP\\kitchen\\encrypted_data_bag_secret\",
      \"$env:TEMP\\kitchen\\environments\", \"$env:TEMP\\kitchen\\roles\")\n    $root_path
      = \"$env:TEMP\\kitchen\"\n\n    Function Delete-AllDirs($dirs) {\n      $dirs
      | ForEach-Object {\n        if (Test-Path ($path = Unresolve-Path $_)) { Remove-Item
      $path -Recurse -Force }\n      }\n    }\n\n    Function Unresolve-Path($p) {\n
      \     if ($p -eq $null) { return $null }\n      else { return $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($p)
      }\n    }\n\n    Function Make-RootPath($p) {\n      $p = Unresolve-Path $p\n
      \     if (-Not (Test-Path $p)) { New-Item $p -ItemType directory | Out-Null
      }\n    }\n\n    Delete-AllDirs $dirs\n    Make-RootPath $root_path\n    )\n
      \   D      [WinRM] Command created for $dirs = @(\"$env:TEMP\\kitchen\\clients\",
      \"$env:TEMP\\kitchen\\cookbooks\", \"$env:TEMP\\kitchen\\data\", \"$env:TEMP\\kitchen\\data_bags\",
      \"$env:TEMP\\kitchen\\encrypted_data_bag_secret\", \"$env:TEMP\\kitchen\\environments\",
      \"$env:TEMP\\kitchen\\roles\")\n    $root_path = \"$env:TEMP\\kitchen\"\n\n
      \   Function Delete-AllDirs($dirs) {\n      $dirs | ForEach-Object {\n        if
      (Test-Path ($path = Unresolve-Path $_)) { Remove-Item $path -Recurse -Force
      }\n      }\n    }\n\n    Function Unresolve-Path($p) {\n      if ($p -eq $null)
      { return $null }\n      else { return $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($p)
      }\n    }\n\n    Function Make-RootPath($p) {\n      $p = Unresolve-Path $p\n
      \     if (-Not (Test-Path $p)) { New-Item $p -ItemType directory | Out-Null
      }\n    }\n\n    Delete-AllDirs $dirs\n    Make-RootPath $root_path\n     with
      id: 54297A10-98A6-4E65-8514-5208FC20AAB9\n    D      [WinRM] creating command_id:
      54297A10-98A6-4E65-8514-5208FC20AAB9 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: 54297A10-98A6-4E65-8514-5208FC20AAB9
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n           Transferring files
      to <git-default-windows-windows-2012r2>\n    D      creating hash for file $env:TEMP\\kitchen\n
      \   D      creating hash for file $env:TEMP\\kitchen\n    D      creating hash
      for directory $env:TEMP\\kitchen\n    D      Populating files\n    D      ===
      All files added.\n    D      creating hash for file $env:TEMP\\kitchen\n    D
      \     creating hash for directory $env:TEMP\\kitchen\n    D      Populating
      files\n    D      +++ Adding apt/README.md\n    D      +++ Adding apt/attributes/default.rb\n
      \   D      +++ Adding apt/files/default/15update-stamp\n    D      +++ Adding
      apt/files/default/apt-proxy-v2.conf\n    D      +++ Adding apt/libraries/apt_update.rb\n
      \   D      +++ Adding apt/libraries/helpers.rb\n    D      +++ Adding apt/libraries/matchers.rb\n
      \   D      +++ Adding apt/libraries/network.rb\n    D      +++ Adding apt/metadata.json\n
      \   D      +++ Adding apt/providers/preference.rb\n    D      +++ Adding apt/providers/repository.rb\n
      \   D      +++ Adding apt/recipes/cacher-client.rb\n    D      +++ Adding apt/recipes/cacher-ng.rb\n
      \   D      +++ Adding apt/recipes/default.rb\n    D      +++ Adding apt/recipes/unattended-upgrades.rb\n
      \   D      +++ Adding apt/resources/preference.rb\n    D      +++ Adding apt/resources/repository.rb\n
      \   D      +++ Adding apt/templates/default/01proxy.erb\n    D      +++ Adding
      apt/templates/default/10recommends.erb\n    D      +++ Adding apt/templates/default/20auto-upgrades.erb\n
      \   D      +++ Adding apt/templates/default/50unattended-upgrades.erb\n    D
      \     +++ Adding apt/templates/default/acng.conf.erb\n    D      +++ Adding
      apt/templates/default/unattended-upgrades.seed.erb\n    D      +++ Adding build-essential/README.md\n
      \   D      +++ Adding build-essential/attributes/default.rb\n    D      +++
      Adding build-essential/libraries/matchers.rb\n    D      +++ Adding build-essential/libraries/xcode_command_line_tools.rb\n
      \   D      +++ Adding build-essential/metadata.json\n    D      +++ Adding build-essential/recipes/_windows.rb\n
      \   D      +++ Adding build-essential/recipes/default.rb\n    D      +++ Adding
      build-essential/resources/build_essential.rb\n    D      +++ Adding chef_handler/README.md\n
      \   D      +++ Adding chef_handler/attributes/default.rb\n    D      +++ Adding
      chef_handler/files/default/handlers/README\n    D      +++ Adding chef_handler/libraries/helpers.rb\n
      \   D      +++ Adding chef_handler/libraries/matchers.rb\n    D      +++ Adding
      chef_handler/metadata.json\n    D      +++ Adding chef_handler/providers/default.rb\n
      \   D      +++ Adding chef_handler/recipes/default.rb\n    D      +++ Adding
      chef_handler/recipes/json_file.rb\n    D      +++ Adding chef_handler/resources/default.rb\n
      \   D      +++ Adding compat_resource/README.md\n    D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/copied_from_chef.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/mixin/properties.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches/chef.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/monkeypatches.rb\n
      \   D      +++ Adding compat_resource/files/lib/chef_compat/property.rb\n    D
      \     +++ Adding compat_resource/files/lib/chef_compat/recipe.rb\n    D      +++
      Adding compat_resource/files/lib/chef_compat/resource/lwrp_base.rb\n    D      +++
      Adding compat_resource/files/lib/chef_compat/resource.rb\n    D      +++ Adding
      compat_resource/files/lib/compat_resource/gemspec.rb\n    D      +++ Adding
      compat_resource/files/lib/compat_resource/version.rb\n    D      +++ Adding
      compat_resource/files/lib/compat_resource.rb\n    D      +++ Adding compat_resource/files/spec/cookbook_spec.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/Gemfile\n    D      +++
      Adding compat_resource/files/spec/data/config.rb\n    D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/metadata.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/providers/resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/recipes/default.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/cloning/resources/resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/future/libraries/future_custom_resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/future/libraries/super_properties.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/future/metadata.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/future/recipes/declare_resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/future/resources/resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/future/resources/super_resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/libraries/normal_hwrp.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/metadata.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/providers/resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/hybrid/resources/resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/libraries/normal_hwrp.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/metadata.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/providers/resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/recipes/declare_resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/normal/resources/resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/notifications/metadata.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/notifications/recipes/default.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/notifications/resources/resource.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/test/metadata.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/test/recipes/default.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/cookbooks/test/recipes/test.rb\n
      \   D      +++ Adding compat_resource/files/spec/data/nodes/ettores-mbp.lan.json\n
      \   D      +++ Adding compat_resource/files/spec/spec_helper.rb\n    D      +++
      Adding compat_resource/libraries/autoload.rb\n    D      +++ Adding compat_resource/metadata.json\n
      \   D      +++ Adding dmg/README.md\n    D      +++ Adding dmg/attributes/default.rb\n
      \   D      +++ Adding dmg/libraries/matchers.rb\n    D      +++ Adding dmg/metadata.json\n
      \   D      +++ Adding dmg/providers/package.rb\n    D      +++ Adding dmg/recipes/default.rb\n
      \   D      +++ Adding dmg/resources/package.rb\n    D      +++ Adding freebsd/README.md\n
      \   D      +++ Adding freebsd/attributes/default.rb\n    D      +++ Adding freebsd/metadata.json\n
      \   D      +++ Adding freebsd/providers/port_options.rb\n    D      +++ Adding
      freebsd/recipes/default.rb\n    D      +++ Adding freebsd/recipes/pkgng.rb\n
      \   D      +++ Adding freebsd/recipes/portsnap.rb\n    D      +++ Adding freebsd/resources/port_options.rb\n
      \   D      +++ Adding git/README.md\n    D      +++ Adding git/attributes/default.rb\n
      \   D      +++ Adding git/libraries/helpers.rb\n    D      +++ Adding git/libraries/matchers.rb\n
      \   D      +++ Adding git/libraries/provider_git_client.rb\n    D      +++ Adding
      git/libraries/provider_git_client_osx.rb\n    D      +++ Adding git/libraries/provider_git_client_package.rb\n
      \   D      +++ Adding git/libraries/provider_git_client_source.rb\n    D      +++
      Adding git/libraries/provider_git_client_windows.rb\n    D      +++ Adding git/libraries/provider_git_service.rb\n
      \   D      +++ Adding git/libraries/provider_git_service_xinetd.rb\n    D      +++
      Adding git/libraries/resource_git_client.rb\n    D      +++ Adding git/libraries/resource_git_service.rb\n
      \   D      +++ Adding git/libraries/z_provider_mapping.rb\n    D      +++ Adding
      git/metadata.json\n    D      +++ Adding git/providers/config.rb\n    D      +++
      Adding git/recipes/default.rb\n    D      +++ Adding git/recipes/package.rb\n
      \   D      +++ Adding git/recipes/server.rb\n    D      +++ Adding git/recipes/source.rb\n
      \   D      +++ Adding git/recipes/windows.rb\n    D      +++ Adding git/resources/config.rb\n
      \   D      +++ Adding git/templates/default/git-xinetd.d.erb\n    D      +++
      Adding git/templates/default/sv-git-daemon-log-run.erb\n    D      +++ Adding
      git/templates/default/sv-git-daemon-run.erb\n    D      +++ Adding git_test/metadata.json\n
      \   D      +++ Adding git_test/recipes/default.rb\n    D      +++ Adding mingw/README.md\n
      \   D      +++ Adding mingw/files/default/bash.bat\n    D      +++ Adding mingw/files/default/custom-upgrade.sh\n
      \   D      +++ Adding mingw/files/default/custom_prefix.sh\n    D      +++ Adding
      mingw/files/default/pthread.h\n    D      +++ Adding mingw/files/default/time.h\n
      \   D      +++ Adding mingw/libraries/_helper.rb\n    D      +++ Adding mingw/metadata.json\n
      \   D      +++ Adding mingw/recipes/default.rb\n    D      +++ Adding mingw/resources/get.rb\n
      \   D      +++ Adding mingw/resources/msys2_package.rb\n    D      +++ Adding
      mingw/resources/tdm_gcc.rb\n    D      +++ Adding seven_zip/README.md\n    D
      \     +++ Adding seven_zip/attributes/default.rb\n    D      +++ Adding seven_zip/metadata.json\n
      \   D      +++ Adding seven_zip/providers/archive.rb\n    D      +++ Adding
      seven_zip/recipes/default.rb\n    D      +++ Adding seven_zip/resources/archive.rb\n
      \   D      +++ Adding windows/README.md\n    D      +++ Adding windows/attributes/default.rb\n
      \   D      +++ Adding windows/files/default/handlers/windows_reboot_handler.rb\n
      \   D      +++ Adding windows/libraries/feature_base.rb\n    D      +++ Adding
      windows/libraries/matchers.rb\n    D      +++ Adding windows/libraries/powershell_helper.rb\n
      \   D      +++ Adding windows/libraries/powershell_out.rb\n    D      +++ Adding
      windows/libraries/registry_helper.rb\n    D      +++ Adding windows/libraries/version.rb\n
      \   D      +++ Adding windows/libraries/windows_architecture_helper.rb\n    D
      \     +++ Adding windows/libraries/windows_helper.rb\n    D      +++ Adding
      windows/libraries/windows_package.rb\n    D      +++ Adding windows/libraries/windows_privileged.rb\n
      \   D      +++ Adding windows/libraries/wmi_helper.rb\n    D      +++ Adding
      windows/metadata.json\n    D      +++ Adding windows/providers/auto_run.rb\n
      \   D      +++ Adding windows/providers/batch.rb\n    D      +++ Adding windows/providers/certificate.rb\n
      \   D      +++ Adding windows/providers/certificate_binding.rb\n    D      +++
      Adding windows/providers/feature_dism.rb\n    D      +++ Adding windows/providers/feature_powershell.rb\n
      \   D      +++ Adding windows/providers/feature_servermanagercmd.rb\n    D      +++
      Adding windows/providers/font.rb\n    D      +++ Adding windows/providers/http_acl.rb\n
      \   D      +++ Adding windows/providers/pagefile.rb\n    D      +++ Adding windows/providers/path.rb\n
      \   D      +++ Adding windows/providers/printer.rb\n    D      +++ Adding windows/providers/printer_port.rb\n
      \   D      +++ Adding windows/providers/reboot.rb\n    D      +++ Adding windows/providers/registry.rb\n
      \   D      +++ Adding windows/providers/shortcut.rb\n    D      +++ Adding windows/providers/task.rb\n
      \   D      +++ Adding windows/providers/zipfile.rb\n    D      +++ Adding windows/recipes/default.rb\n
      \   D      +++ Adding windows/recipes/reboot_handler.rb\n    D      +++ Adding
      windows/resources/auto_run.rb\n    D      +++ Adding windows/resources/batch.rb\n
      \   D      +++ Adding windows/resources/certificate.rb\n    D      +++ Adding
      windows/resources/certificate_binding.rb\n    D      +++ Adding windows/resources/feature.rb\n
      \   D      +++ Adding windows/resources/font.rb\n    D      +++ Adding windows/resources/http_acl.rb\n
      \   D      +++ Adding windows/resources/pagefile.rb\n    D      +++ Adding windows/resources/path.rb\n
      \   D      +++ Adding windows/resources/printer.rb\n    D      +++ Adding windows/resources/printer_port.rb\n
      \   D      +++ Adding windows/resources/reboot.rb\n    D      +++ Adding windows/resources/registry.rb\n
      \   D      +++ Adding windows/resources/shortcut.rb\n    D      +++ Adding windows/resources/task.rb\n
      \   D      +++ Adding windows/resources/zipfile.rb\n    D      +++ Adding yum/README.md\n
      \   D      +++ Adding yum/attributes/main.rb\n    D      +++ Adding yum/libraries/matchers.rb\n
      \   D      +++ Adding yum/metadata.json\n    D      +++ Adding yum/providers/globalconfig.rb\n
      \   D      +++ Adding yum/providers/repository.rb\n    D      +++ Adding yum/recipes/default.rb\n
      \   D      +++ Adding yum/recipes/dnf_yum_compat.rb\n    D      +++ Adding yum/resources/globalconfig.rb\n
      \   D      +++ Adding yum/resources/repository.rb\n    D      +++ Adding yum/templates/default/main.erb\n
      \   D      +++ Adding yum/templates/default/repo.erb\n    D      +++ Adding
      yum-epel/README.md\n    D      +++ Adding yum-epel/attributes/default.rb\n    D
      \     +++ Adding yum-epel/attributes/epel-debuginfo.rb\n    D      +++ Adding
      yum-epel/attributes/epel-source.rb\n    D      +++ Adding yum-epel/attributes/epel-testing-debuginfo.rb\n
      \   D      +++ Adding yum-epel/attributes/epel-testing-source.rb\n    D      +++
      Adding yum-epel/attributes/epel-testing.rb\n    D      +++ Adding yum-epel/attributes/epel.rb\n
      \   D      +++ Adding yum-epel/metadata.json\n    D      +++ Adding yum-epel/recipes/default.rb\n
      \   D      === All files added.\n    D      Running check_files.ps1\n    D      [WinRM]
      Command created for $hash_file = @{\n      \"54ce43514c1dfebadb3cf9347d7c4b78\"
      = @{\n        \"target\" = \"$env:TEMP\\kitchen\";\n        \"src_basename\"
      = \"dna.json\";\n        \"dst\" = \"$env:TEMP\\kitchen\"\n      };\n      \"0683ca8a80a8b4e614fa1057f4aafe38\"
      = @{\n        \"target\" = \"$env:TEMP\\kitchen\";\n        \"src_basename\"
      = \"client.rb\";\n        \"dst\" = \"$env:TEMP\\kitchen\"\n      };\n      \"76cdb2bad9582d23c1f6f4d868218d6c\"
      = @{\n        \"target\" = \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\";\n
      \       \"src_basename\" = \"cache\";\n        \"dst\" = \"$env:TEMP\\kitchen\\cache\"\n
      \     };\n      \"49abb94825cb80b9a9cd59e5f76daf4a\" = @{\n        \"target\"
      = \"$env:TEMP\\kitchen\";\n        \"src_basename\" = \"validation.pem\";\n
      \       \"dst\" = \"$env:TEMP\\kitchen\"\n      };\n      \"5bac8b06fc48d51e72b8760b38d59b0f\"
      = @{\n        \"target\" = \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\";\n
      \       \"src_basename\" = \"cookbooks\";\n        \"dst\" = \"$env:TEMP\\kitchen\\cookbooks\"\n
      \     }\n    }\n\n    Function Cleanup($disposable) {\n      if (($disposable
      -ne $null) -and ($disposable.GetType().GetMethod(\"Dispose\") -ne $null)) {\n
      \       $disposable.Dispose()\n      }\n    }\n\n    Function Check-Files($h)
      {\n      return $h.GetEnumerator() | ForEach-Object {\n        $dst = Unresolve-Path
      $_.Value.target\n        $dst_changed = $false\n        if(Test-Path $dst -PathType
      Container) {\n          $dst_changed = $true\n          $dst = Join-Path $dst
      $_.Value.src_basename\n        }\n        New-Object psobject -Property @{\n
      \         chk_exists = ($exists = Test-Path $dst -PathType Leaf)\n          src_md5
      = ($sMd5 = $_.Key)\n          dst_md5 = ($dMd5 = if ($exists) { Get-MD5Sum $dst
      } else { $null })\n          chk_dirty = ($dirty = if ($sMd5 -ne $dMd5) { $true
      } else { $false })\n          verifies = if ($dirty -eq $false) { $true } else
      { $false }\n          target_is_folder = $dst_changed\n        }\n      } |
      Select-Object -Property chk_exists,src_md5,dst_md5,chk_dirty,verifies,target_is_folder\n
      \   }\n\n    Function Get-MD5Sum($src) {\n      Try {\n        $c = [System.Security.Cryptography.MD5]::Create()\n
      \       $bytes = $c.ComputeHash(($in = (Get-Item $src).OpenRead()))\n        return
      ([System.BitConverter]::ToString($bytes)).Replace(\"-\", \"\").ToLower()\n      }\n
      \     Finally {\n        Cleanup $c\n        Cleanup $in\n      }\n    }\n\n
      \   Function Unresolve-Path($path) {\n      if ($path -eq $null) {\n        return
      $null\n      }\n      else {\n        return $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($path)\n
      \     }\n    }\n\n    Check-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \    with id: 4EDE68EB-53B5-497B-B5B2-53ECC79740FC\n    D      [WinRM] creating
      command_id: 4EDE68EB-53B5-497B-B5B2-53ECC79740FC on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: 4EDE68EB-53B5-497B-B5B2-53ECC79740FC
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      Parsing CSV Response\n
      \   D      \"chk_exists\",\"src_md5\",\"dst_md5\",\"chk_dirty\",\"verifies\",\"target_is_folder\"\n
      \   \"False\",\"76cdb2bad9582d23c1f6f4d868218d6c\",,\"True\",\"False\",\"False\"\n
      \   \"False\",\"0683ca8a80a8b4e614fa1057f4aafe38\",,\"True\",\"False\",\"True\"\n
      \   \"False\",\"49abb94825cb80b9a9cd59e5f76daf4a\",,\"True\",\"False\",\"True\"\n
      \   \"False\",\"5bac8b06fc48d51e72b8760b38d59b0f\",,\"True\",\"False\",\"False\"\n
      \   \"False\",\"54ce43514c1dfebadb3cf9347d7c4b78\",,\"True\",\"False\",\"True\"\n\n
      \   D      Uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/dna.json
      to $env:TEMP\\kitchen/dna.json\n    D      [WinRM] Command created for             $parent
      = Split-Path \"$env:TEMP\\kitchen/dna.json\"\n                if(!(Test-path
      $parent)) { mkdir $parent | Out-Null}\n                $fileStream = New-Object
      -TypeName System.IO.FileStream -ArgumentList @(\n                    \"$env:TEMP\\kitchen/dna.json\",\n
      \                   [system.io.filemode]::Create,\n                    [System.io.FileAccess]::Write,\n
      \                   [System.IO.FileShare]::ReadWrite\n                )\n     with
      id: E97FFE31-1238-4134-8AC0-AC78D3775D5C\n    D      [WinRM] creating command_id:
      E97FFE31-1238-4134-8AC0-AC78D3775D5C on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: E97FFE31-1238-4134-8AC0-AC78D3775D5C
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('eyJjaGVmX2FjY2VwdGFuY2UiOiJ0cnVlIiwidXNlX3N5c3RlbV9jaGVmIjoidHJ1ZSIsInJ1bl9saXN0IjpbInJlY2lwZVtnaXRdIl19')\n
      \               $fileStream.Write($bytes, 0, $bytes.length)\n     with id: 966DF6BB-AF87-4511-B971-3C18D4535B3B\n
      \   D      [WinRM] creating command_id: 966DF6BB-AF87-4511-B971-3C18D4535B3B
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: 966DF6BB-AF87-4511-B971-3C18D4535B3B on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Command created for $fileStream.Dispose() with id: 75A522CB-2792-4965-968C-6485AD9487FB\n
      \   D      [WinRM] creating command_id: 75A522CB-2792-4965-968C-6485AD9487FB
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: 75A522CB-2792-4965-968C-6485AD9487FB on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      Finished uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/dna.json
      to $env:TEMP\\kitchen/dna.json (0.104 KB over 1 chunks) in (0m0.45s)\n    D
      \     Uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/client.rb
      to $env:TEMP\\kitchen/client.rb\n    D      [WinRM] Command created for             $parent
      = Split-Path \"$env:TEMP\\kitchen/client.rb\"\n                if(!(Test-path
      $parent)) { mkdir $parent | Out-Null}\n                $fileStream = New-Object
      -TypeName System.IO.FileStream -ArgumentList @(\n                    \"$env:TEMP\\kitchen/client.rb\",\n
      \                   [system.io.filemode]::Create,\n                    [System.io.FileAccess]::Write,\n
      \                   [System.IO.FileShare]::ReadWrite\n                )\n     with
      id: B8AD3F35-E4E5-4210-8EB7-0BA02A3EA30D\n    D      [WinRM] creating command_id:
      B8AD3F35-E4E5-4210-8EB7-0BA02A3EA30D on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: B8AD3F35-E4E5-4210-8EB7-0BA02A3EA30D
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('bm9kZV9uYW1lICJnaXQtZGVmYXVsdC13aW5kb3dzLXdpbmRvd3MtMjAxMnIyIgpjaGVja3N1bV9wYXRoICIje0VOVlsnVEVNUCddfVxca2l0Y2hlblxcY2hlY2tzdW1zIgpmaWxlX2NhY2hlX3BhdGggIiN7RU5WWydURU1QJ119XFxraXRjaGVuXFxjYWNoZSIKZmlsZV9iYWNrdXBfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGJhY2t1cCIKY29va2Jvb2tfcGF0aCBbIiN7RU5WWydURU1QJ119XFxraXRjaGVuXFxjb29rYm9va3MiLCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHNpdGUtY29va2Jvb2tzIl0KZGF0YV9iYWdfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGRhdGFfYmFncyIKZW52aXJvbm1lbnRfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGVudmlyb25tZW50cyIKbm9kZV9wYXRoICIje0VOVlsnVEVNUCddfVxca2l0Y2hlblxcbm9kZXMiCnJvbGVfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHJvbGVzIgpjbGllbnRfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXGNsaWVudHMiCnVzZXJfcGF0aCAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHVzZXJzIgp2YWxpZGF0aW9uX2tleSAiI3tFTlZbJ1RFTVAnXX1cXGtpdGNoZW5cXHZhbGlkYXRpb24ucGVtIgpjbGllbnRfa2V5ICIje0VOVlsnVEVNUCddfVxca2l0Y2hlblxcY2xpZW50LnBlbSIKY2hlZl9zZXJ2ZXJfdXJsICJodHRwOi8vMTI3LjAuMC4xOjg4ODkiCmVuY3J5cHRlZF9kYXRhX2JhZ19zZWNyZXQgIiN7RU5WWydURU1QJ119XFxraXRjaGVuXFxlbmNyeXB0ZWRfZGF0YV9iYWdfc2VjcmV0IgphdWRpdF9tb2RlIDplbmFibGVkCm5hbWVkX3J1bl9saXN0IHt9')\n
      \               $fileStream.Write($bytes, 0, $bytes.length)\n     with id: C6B0B0CF-D24C-4259-9651-3CE4E7FBDC60\n
      \   D      [WinRM] creating command_id: C6B0B0CF-D24C-4259-9651-3CE4E7FBDC60
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: C6B0B0CF-D24C-4259-9651-3CE4E7FBDC60 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Command created for $fileStream.Dispose() with id: 093D11B6-AEE7-4916-973B-7EC59C138BBC\n
      \   D      [WinRM] creating command_id: 093D11B6-AEE7-4916-973B-7EC59C138BBC
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: 093D11B6-AEE7-4916-973B-7EC59C138BBC on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      Finished uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/client.rb
      to $env:TEMP\\kitchen/client.rb (1.12 KB over 1 chunks) in (0m0.40s)\n    D
      \     Uploading /tmp/cheftest/tmpzip-20160803-32371-164l9z6.zip to $env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\n
      \   D      [WinRM] Command created for             $parent = Split-Path \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\"\n
      \               if(!(Test-path $parent)) { mkdir $parent | Out-Null}\n                $fileStream
      = New-Object -TypeName System.IO.FileStream -ArgumentList @(\n                    \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\",\n
      \                   [system.io.filemode]::Create,\n                    [System.io.FileAccess]::Write,\n
      \                   [System.IO.FileShare]::ReadWrite\n                )\n     with
      id: 6EB8C5D8-DDEA-49C7-89D3-753E78F4F986\n    D      [WinRM] creating command_id:
      6EB8C5D8-DDEA-49C7-89D3-753E78F4F986 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: 6EB8C5D8-DDEA-49C7-89D3-753E78F4F986
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('UEsFBgAAAAAAAAAAAAAAAAAAAAAAAA==')\n
      \               $fileStream.Write($bytes, 0, $bytes.length)\n     with id: 56651146-AEDE-48F7-BC96-4FFBC13C9783\n
      \   D      [WinRM] creating command_id: 56651146-AEDE-48F7-BC96-4FFBC13C9783
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: 56651146-AEDE-48F7-BC96-4FFBC13C9783 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Command created for $fileStream.Dispose() with id: 0609EC74-A6B7-47A9-9909-90D0061EE204\n
      \   D      [WinRM] creating command_id: 0609EC74-A6B7-47A9-9909-90D0061EE204
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: 0609EC74-A6B7-47A9-9909-90D0061EE204 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      Finished uploading /tmp/cheftest/tmpzip-20160803-32371-164l9z6.zip
      to $env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip (0.028
      KB over 1 chunks) in (0m0.44s)\n    D      Uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/validation.pem
      to $env:TEMP\\kitchen/validation.pem\n    D      [WinRM] Command created for
      \            $parent = Split-Path \"$env:TEMP\\kitchen/validation.pem\"\n                if(!(Test-path
      $parent)) { mkdir $parent | Out-Null}\n                $fileStream = New-Object
      -TypeName System.IO.FileStream -ArgumentList @(\n                    \"$env:TEMP\\kitchen/validation.pem\",\n
      \                   [system.io.filemode]::Create,\n                    [System.io.FileAccess]::Write,\n
      \                   [System.IO.FileShare]::ReadWrite\n                )\n     with
      id: AEEA6A16-9248-4826-8F24-D800CCAAE634\n    D      [WinRM] creating command_id:
      AEEA6A16-9248-4826-8F24-D800CCAAE634 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: AEEA6A16-9248-4826-8F24-D800CCAAE634
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMHNPWTl0SHZWdExaNnhtVm1IOGQ4THJSck5jV09YYnJ2dkNyYWkrVDNHdFJ2UlNMCmhrc0xycE9wRDBMOUVITTZOZFRoTkYvZUdBOU9xK1VLQWU2eVhSMGh3c0t1eEtYcVE4U0VtbGhaWjlHaXVnZ0QKQi96WUQzSXRCNlNHcGRrUmU3a1FxVENoUXlySVhxYlJrSnF4b1RYTHllSkRGMHNDeVRkcDNMOElaQ1VXb2RNOApvVjlUbFFCSkhZdEcxZ0xVd0lpOGtjTVZFb0NuMlE4bHRDajAvZnRud2hUdHdPNTJSa1dBMHVZT0xHVmF5SHNMClNDRmZ4K0FDV1BVL29XQ3dXNS9LQnFiM3ZlVHYwYUVnL25oMFFzRnpSTG9UeDZTUkZJNWRUMk5mOGlpSmU0V0MKVUc4V0tFQjJHOFFQbnhzeGZPUFlEQmRUSjRDWEVpMmUrejQxVlFJREFRQUJBb0lCQUFMaHFiVzJLUStHMG5QawpaYWN3RmJpMDFTa0h4OFlCV2pmQ0VwWGhFS1J5MHl0Q25LVzVZTytDRlUyZ0hOV2N2YTcrdWhWOU9nd2FLWGt3CktITGVVSkgxVkFEVnFJNEh0cXcyZzVtWW02QlB2V25Oc2p6cHVBcCtCUitWb0VHa05oajY3cjloYXRNQVFyMEkKaXRUdlNINXJ2ZDJFdW1ZWElIS2Z6MUsxU2VnVWsxdTFFTDFSY016Um1aZTRnRGI2ZU5CczlTZzRpbTR5YlRHNgpwUEl5dEE4dkJRVldoanVBUjJUbSt3WkhpeTBBejZWdTdjMm1TMDdGU1g2Rk80RThTeFdmOGlkYUs5aWpNR1NxCkZ2SVMwNG1yWTZYQ1BVUFVDNHFtMXFObmhEUHBPcjdDcEkyT085OFNxR2FuU3RTNU5GbFNGWGVYUHBNMjgwL3UKZlpVQTBBRUNnWUVBK3g3UVVuZmZEcnQ3TEsyY1g2d2J2bjRtUm5GeGV0N2JKanJmV0lIZitSbTBVUmlrYU5tYQpoMC93TktwS0J3SUgrZUhLL0xzbGd6Y3BscnFQeXRHR0hMT0c5N0d5bzV0R0F6eUxIVVdCbXNOa1Jrc1kyc1BMCnVIcTZwWVdKTmtxaG5XR25JYm1xQ3IwRVdpaDgyeC95NHF4YkpZcFlxWE1yaXQwd1ZmN3lBZ2tDZ1lFQTF0d0kKZ0ZhWHFlc2V0VFBvRUhTUVNnQzhTNEQ1L05rZHJpVVhDWWIwNlJFY3ZvOUlwRk11aU9rVlVZTk41ZDNNRE5UUApJZEJpY2ZtdmZORUx2QnRYRG9tRVVEOGxzMVV1b1RJWFJOR1owVnNaWHU3T0VyWENLMEpLTk55cVJtT3djdllMCkpScUxmbmxlaTVOZG8xbHUyODZ5TDc0YzVyZFRMcy9uSTJwNGUrMENnWUIwNzlabWNMZUlMcm1mQm9GSTgrWS8KZ0pMbVByRnZYQk9FNitsUlY3a3FVRlB0WjZJM3lRenljY0VUWlREdnJueDBXamFpRmF2VVBIMjdXTWpZMDFTMgpUTXRPMElxMU1Qc2JTcmdsTzFhczhNdmpCOWxkRmN2cDdneTRRMFN2NlhUMHlxSi9TK3ZvOERmMG0rSDRVQnBVCmY1bzZFd0JTZC9VUXh3dFpJRTBsc1FLQmdRQ3N3ZmpYOEVnOEtML2xKTnBJT09FM2o0WFhFOXB0a3NtSmwyc0IKanhEblFZb2lNcVZPODA4c2FIVnF1Qy92VHJwZDZ0S3ROcGVoV3dqZVRGdXFJVFdMaThqbW1RK2dOVEtzQzlHbgoxUHhmMkdiNjdQcW5FcHdRR2xuK1RSdGdRNUhCcmRIaVFJaSs1YW0rZ253ODlwRHJqak81clp3aGFuQW82S1BKCjF6Y1BOUUtCZ1FEeEZ1OHY0ZnJEbVJOQ1ZhWlM0ZjFCNndUcmNNcm5pYklEbG56cks5R0c2SHoxVTdkRHY4czgKTmY0VW1lTXpEWGpsUFdaVk92UzUrOUhLSlBkUGo3L29udjhCMm0xOCtsY2dUVERKQmt6YTdSMW1qTDFDamUvWgpLY1ZHc3J5S042Y2pFN3lDRGFzbkE3UjJyVkJWLzdOV2VKVjc3Ym16VDVPLy9yVzR5SWZVSWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=')\n
      \               $fileStream.Write($bytes, 0, $bytes.length)\n     with id: 34799AEF-1C87-4CA5-99C0-9A86B4B4D605\n
      \   D      [WinRM] creating command_id: 34799AEF-1C87-4CA5-99C0-9A86B4B4D605
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: 34799AEF-1C87-4CA5-99C0-9A86B4B4D605 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Command created for $fileStream.Dispose() with id: 052385D6-ABDE-43FA-8784-6F515FB4D039\n
      \   D      [WinRM] creating command_id: 052385D6-ABDE-43FA-8784-6F515FB4D039
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: 052385D6-ABDE-43FA-8784-6F515FB4D039 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      Finished uploading /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu/validation.pem
      to $env:TEMP\\kitchen/validation.pem (2.236 KB over 1 chunks) in (0m0.32s)\n
      \   D      Uploading /tmp/cheftest/tmpzip-20160803-32371-onl7co.zip to $env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\n
      \   D      [WinRM] Command created for             $parent = Split-Path \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\"\n
      \               if(!(Test-path $parent)) { mkdir $parent | Out-Null}\n                $fileStream
      = New-Object -TypeName System.IO.FileStream -ArgumentList @(\n                    \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\",\n
      \                   [system.io.filemode]::Create,\n                    [System.io.FileAccess]::Write,\n
      \                   [System.IO.FileShare]::ReadWrite\n                )\n     with
      id: 7250459D-5923-494F-ABE6-1A9D3F99B5F2\n    D      [WinRM] creating command_id:
      7250459D-5923-494F-ABE6-1A9D3F99B5F2 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: 7250459D-5923-494F-ABE6-1A9D3F99B5F2
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Command
      created for             $bytes=[Convert]::FromBase64String('')\n
      \               $fileStream.Write($bytes, 0, $bytes.length)\n     with id: F439A2E6-3A91-40BF-9A57-2302C58F819E\n
      \   D      [WinRM] creating command_id: F439A2E6-3A91-40BF-9A57-2302C58F819E
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: F439A2E6-3A91-40BF-9A57-2302C58F819E on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Command created for             $bytes=[Convert]::FromBase64String('')\n
      \               $fileStream.Write($bytes, 0, $bytes.length)\n     with id: 449EFD87-D447-42F1-8F23-1641A2A5BA44\n
      \   D      [WinRM] creating command_id: 449EFD87-D447-42F1-8F23-1641A2A5BA44
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: 449EFD87-D447-42F1-8F23-1641A2A5BA44 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Command created for $fileStream.Dispose() with id: B6907F07-4199-4B64-9E27-A49AADA54453\n
      \   D      [WinRM] creating command_id: B6907F07-4199-4B64-9E27-A49AADA54453
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: B6907F07-4199-4B64-9E27-A49AADA54453 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      Finished uploading /tmp/cheftest/tmpzip-20160803-32371-onl7co.zip
      to $env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip (409.904
      KB over 2 chunks) in (0m1.21s)\n    D      Running extract_files.ps1\n    D
      \     [WinRM] Command created for trap {\n      $e = $_.Exception\n      $e.InvocationInfo.ScriptName\n
      \     do {\n        $e.Message\n        $e = $e.InnerException\n      } while
      ($e)\n      break\n    }\n\n    function folder($path){\n      $path | ? {-not
      (test-path $_)} | % {$null = mkdir $_}\n    }\n\n    Function Decode-Files($hash)
      {\n      foreach ($key in $hash.keys) {\n        $value = $hash[$key]\n        $tzip,
      $dst = $Value[\"tmpzip\"], $Value[\"dst\"]\n        if ($tzip) {Unzip-File $tzip
      $dst}\n        New-Object psobject -Property @{dst=$dst;src_md5=$key;tmpzip=$tzip}\n
      \     }\n    }\n\n    Function Unzip-File($src, $dst) {\n      $unpack = $src
      -replace '\\.zip'\n      $dst_parent = Split-Path -Path $dst -Parent\n      if(!(Test-Path
      $dst_parent)) { $dst = $dst_parent }\n      folder $unpack, $dst\n      try
      {\n        try{\n          [IO.Compression.ZipFile]::ExtractToDirectory($src,
      $unpack)\n        }\n        catch {\n          Add-Type -AssemblyName System.IO.Compression.FileSystem
      -ErrorAction Stop\n          [IO.Compression.ZipFile]::ExtractToDirectory($src,
      $unpack)\n        }\n      }\n      catch {\n        Try {\n          $s = New-Object
      -ComObject Shell.Application\n          ($s.NameSpace($unpack)).CopyHere(($s.NameSpace($src)).Items(),
      0x610)\n        }\n        Finally {\n          [void][Runtime.Interopservices.Marshal]::ReleaseComObject($s)\n
      \       }\n      }\n      dir $unpack | cp -dest \"$dst/\" -force -recurse\n
      \     rm $unpack -recurse -force\n    }\n\n    $hash_file = @{\n      \"76cdb2bad9582d23c1f6f4d868218d6c\"
      = @{\n        \"dst\" = \"$env:TEMP\\kitchen\\cache\";\n        \"tmpzip\" =
      \"$env:TEMP\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\"\n      };\n
      \     \"5bac8b06fc48d51e72b8760b38d59b0f\" = @{\n        \"dst\" = \"$env:TEMP\\kitchen\\cookbooks\";\n
      \       \"tmpzip\" = \"$env:TEMP\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\"\n
      \     }\n    }\n    Decode-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \    with id: 9BC922BA-731B-41DD-81B1-2CBE9F1A525B\n    D      [WinRM] creating
      command_id: 9BC922BA-731B-41DD-81B1-2CBE9F1A525B on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: 9BC922BA-731B-41DD-81B1-2CBE9F1A525B
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      Parsing CSV Response\n
      \   D      \"src_md5\",\"tmpzip\",\"dst\"\n    \"76cdb2bad9582d23c1f6f4d868218d6c\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-76cdb2bad9582d23c1f6f4d868218d6c.zip\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\kitchen\\cache\"\n
      \   \"5bac8b06fc48d51e72b8760b38d59b0f\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-5bac8b06fc48d51e72b8760b38d59b0f.zip\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\kitchen\\cookbooks\"\n\n
      \   D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160803-32371-164l9z6.zip\n
      \   D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160803-32371-onl7co.zip\n
      \   D      Uploaded 5 items dirty_check: (0m0.76s) stream_files: (0m2.82s) extract:
      (0m1.25s)\n    D      Transfer complete\n    D      Attempting to execute command
      - try 1 of 1.\n    D      [WinRM] <{:endpoint=>\"http://10.194.14.172:5985/wsman\",
      :user=>\"administrator\", :password=>\"z=7iCL=5rXK\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"z=7iCL=5rXK\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   & $env:systemdrive\\opscode\\chef\\bin\\chef-client.bat --local-mode --config
      $env:TEMP\\kitchen\\client.rb --log_level auto --force-formatter --no-color
      --json-attributes $env:TEMP\\kitchen\\dna.json --chef-zero-port 8889 ; exit
      $LastExitCode)\n    D      [WinRM] Command created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   & $env:systemdrive\\opscode\\chef\\bin\\chef-client.bat --local-mode --config
      $env:TEMP\\kitchen\\client.rb --log_level auto --force-formatter --no-color
      --json-attributes $env:TEMP\\kitchen\\dna.json --chef-zero-port 8889 ; exit
      $LastExitCode with id: F9897435-4EBF-4895-8F7B-19891DB5CEC7\n    D      [WinRM]
      creating command_id: F9897435-4EBF-4895-8F7B-19891DB5CEC7 on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \          Starting Chef Client, version 12.13.21\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n           Creating a new
      client identity for git-default-windows-windows-2012r2 using the validator key.\n
      \          resolving cookbooks for run list: [\"git\"]\n           Synchronizing
      Cookbooks:\n           Installing Cookbook Gems:\n           Compiling Cookbooks...\n\n
      \          ================================================================================\n
      \          Recipe Compile Error\n           ================================================================================\n\n
      \          Chef::Exceptions::RecipeNotFound\n           --------------------------------\n
      \          could not find recipe default for cookbook git\n\n           Platform:\n
      \          ---------\n           x64-mingw32\n\n\n           Running handlers:\n
      \          [2016-08-03T02:04:45+00:00] ERROR: Running exception handlers\n           Running
      handlers complete\n           [2016-08-03T02:04:45+00:00] ERROR: Exception handlers
      complete\n           Chef Client failed. 0 resources updated in 31 seconds\n
      \          [2016-08-03T02:04:45+00:00] FATAL: Stacktrace dumped to C:/Users/ADMINI~1/AppData/Local/Temp/kitchen/cache/chef-stacktrace.out\n
      \          [2016-08-03T02:04:45+00:00] FATAL: Please provide the contents of
      the stacktrace.out file if you file a bug report\n           [2016-08-03T02:04:45+00:00]
      FATAL: Chef::Exceptions::RunFailedWrappingError: Found 1 errors, they are stored
      in the backtrace\n    D      [WinRM] cleaning up command_id: F9897435-4EBF-4895-8F7B-19891DB5CEC7
      on shell_id CC2E5884-A0CA-4FDB-ABF0-417EED19E520\n    D      Cleaning up local
      sandbox in /tmp/cheftest/git-default-windows-windows-2012r2-sandbox-20160803-32371-1pjispu\n
      \   D      ------Exception-------\n    D      Class: Kitchen::ActionFailed\n
      \   D      Message: 1 actions failed.\n    >>>>>>     Converge failed on instance
      <git-default-windows-windows-2012r2>.  Please see .kitchen/logs/git-default-windows-windows-2012r2.log
      for more details\n    D      ----------------------\n    D      ------Backtrace-------\n
      \   D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:187:in
      `report_errors'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:178:in
      `run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:39:in
      `block in call'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:37:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:56:in
      `perform'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:184:in
      `block (2 levels) in <class:CLI>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/command.rb:27:in
      `run'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/invocation.rb:126:in
      `invoke_command'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:325:in
      `invoke_task'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor.rb:359:in
      `dispatch'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/base.rb:440:in
      `start'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `block in <top (required)>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/errors.rb:174:in
      `with_friendly_errors'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `<top (required)>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `load'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `<top (required)>'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `load'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `kernel_load'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:24:in
      `run'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:304:in
      `exec'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/command.rb:27:in
      `run'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in
      `invoke_command'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor.rb:359:in
      `dispatch'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/base.rb:440:in
      `start'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:11:in
      `start'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:27:in
      `block in <top (required)>'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/friendly_errors.rb:98:in
      `with_friendly_errors'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:19:in
      `<top (required)>'\n    D      /opt/chefdk/embedded/bin/bundle:22:in `load'\n
      \   D      /opt/chefdk/embedded/bin/bundle:22:in `<main>'\n    D      ----End
      Backtrace-----\n    D      -Composite Exception--\n    D      Class: Kitchen::InstanceFailure\n
      \   D      Message: Converge failed on instance <git-default-windows-windows-2012r2>.
      \ Please see .kitchen/logs/git-default-windows-windows-2012r2.log for more details\n
      \   D      ----------------------\n    D      ------Backtrace-------\n    D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:86:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:89:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:373:in
      `block in converge_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:369:in
      `converge_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:138:in
      `converge'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n    D      ----End Backtrace-----\n
      \   D      ---Nested Exception---\n    D      Class: Kitchen::ActionFailed\n
      \   D      Message: WinRM exited (1) for command: [$env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   & $env:systemdrive\\opscode\\chef\\bin\\chef-client.bat --local-mode --config
      $env:TEMP\\kitchen\\client.rb --log_level auto --force-formatter --no-color
      --json-attributes $env:TEMP\\kitchen\\dna.json --chef-zero-port 8889 ; exit
      $LastExitCode]\n    D      ----------------------\n    D      ------Backtrace-------\n
      \   D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:86:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/provisioner/base.rb:89:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:373:in
      `block in converge_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:369:in
      `converge_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:138:in
      `converge'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n    D      ----End Backtrace-----\n
      \   STDERR: >>>>>> ------Exception-------\n    >>>>>> Class: Kitchen::ActionFailed\n
      \   >>>>>> Message: 1 actions failed.\n    >>>>>>     Converge failed on instance
      <git-default-windows-windows-2012r2>.  Please see .kitchen/logs/git-default-windows-windows-2012r2.log
      for more details\n    >>>>>> ----------------------\n    >>>>>> Please see .kitchen/logs/kitchen.log
      for more details\n    >>>>>> Also try running `kitchen diagnose --all` for configuration\n
      \   ---- End output of bundle exec kitchen converge  -c -l debug ----\n    Ran
      bundle exec kitchen converge  -c -l debug returned 20\n\n    Cookbook Trace:\n
      \   ---------------\n    /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in
      `block (3 levels) in <class:Kitchen>'\n\n    Resource Declaration:\n    ---------------------\n
      \   # In /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/acceptance-cookbook/recipes/provision.rb\n\n
      \     1: top_cookbooks \"converge\"\n\n    Compiled Resource:\n    ------------------\n
      \   # Declared in /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/cookbooks/acceptance-cookbook/recipes/provision.rb:1:in
      `from_file'\n\n    top_cookbooks(\"converge\") do\n      action [:run]\n      updated
      true\n      updated_by_last_action true\n      retries 0\n      retry_delay
      2\n      default_guard_interpreter :default\n      declared_type :top_cookbooks\n
      \     cookbook_name \"acceptance-cookbook\"\n      recipe_name \"provision\"\n
      \     command \"converge\"\n    end\n\n    Platform:\n    ---------\n    x86_64-linux\n\nStarting
      audit phase\n"
    39633: |2

      Running handlers:
      [2016-08-03T02:04:47+00:00] ERROR: Running exception handlers
      Running handlers complete
      [2016-08-03T02:04:47+00:00] ERROR: Exception handlers complete
      Chef Client failed. 5 resources updated in 06 minutes 11 seconds
      [2016-08-03T02:04:47+00:00] ERROR: Failed to post audit report to server. Saving report to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/failed-audit-data.json
      [2016-08-03T02:04:47+00:00] FATAL: Stacktrace dumped to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/cache/chef-stacktrace.out
      [2016-08-03T02:04:47+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
      [2016-08-03T02:04:47+00:00] ERROR: Found 1 errors, they are stored in the backtrace
      [2016-08-03T02:04:49+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
      STDERR:
      ---- End output of chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/dna.json -o acceptance-cookbook::provision --no-color ----
      Ran chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/top-cookbooks/provision/dna.json -o acceptance-cookbook::provision --no-color returned 1
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:289:in `invalid!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:276:in `error!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/chef_runner.rb:53:in `block in run!'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:237:in `block in with_clean_env'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:447:in `with_env'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:237:in `with_clean_env'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/chef_runner.rb:42:in `run!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:149:in `run_command'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:116:in `block in run_suite'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:114:in `each'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:114:in `run_suite'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:76:in `block (2 levels) in start_worker'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:74:in `loop'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:74:in `block in start_worker'
      CHEF-ACCEPTANCE::[2016-08-03 02:04:49 +0000] --force-destroy specified so attempting to run the destroy recipe
      TOP-COOKBOOKS::DESTROY::[2016-08-03 02:04:49 +0000] Initialized [/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/logs/top-cookbooks/destroy.log] logger...
    41977: |2
            D      [WinRM] Waiting for output...
            D      [WinRM] Processing output
                   /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- rake (LoadError)
                     from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'
                     from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in `<main>'
    42514: |2
            Cookbook Trace:
            ---------------
            /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in `block (3 levels) in <class:Kitchen>'

            Resource Declaration:
    42568: |2


          ================================================================================
          Error executing action `run` on resource 'kitchen[verify]'
          ================================================================================

          Mixlib::ShellOut::ShellCommandFailed
          ------------------------------------
          ruby_block[copy_kitchen_logs_to_data_path] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb line 39) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '20'
          ---- Begin output of bundle exec kitchen ver
      FIPS::VERIFY::[2016-08-03 02:06:32 +0000] ify  -c -l debug ----
          STDOUT: -----> Starting Kitchen (v1.10.2)
    43093: |2
          D      [WinRM] creating command_id: 6562BC44-E608-4AD5-8D26-A7905A21A27D on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05
          D      [WinRM] Waiting for output...
                 /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- rake (LoadError)
                   from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'
                   from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in `<main>'
    43130: |2
          D      [WinRM] Waiting for output...
          D      [WinRM] Processing output
                 /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- rake (LoadError)
                   from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'
                   from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in `<main>'
    43663: |2
          Cookbook Trace:
          ---------------
          /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in `block (3 levels) in <class:Kitchen>'

          Resource Declaration:
    43703: |
      FIPS::VERIFY::[2016-08-03 02:06:33 +0000] Running handlers:
      FIPS::VERIFY::[2016-08-03 02:06:33 +0000]
      FIPS::VERIFY::[2016-08-03 02:06:33 +0000] [2016-08-03T02:06:33+00:00] ERROR: Running exception handlers
      FIPS::VERIFY::[2016-08-03 02:06:33 +0000] Running handlers complete
      FIPS::VERIFY::[2016-08-03 02:06:33 +0000] [2016-08-03T02:06:33+00:00] ERROR: Exception handlers complete
      FIPS::VERIFY::[2016-08-03 02:06:33 +0000] Chef Client failed. 0 resources updated in 30 seconds
      FIPS::VERIFY::[2016-08-03 02:06:33 +0000]
      FIPS::VERIFY::[2016-08-03 02:06:33 +0000] [2016-08-03T02:06:33+00:00] ERROR: Failed to post audit report to server. Saving report to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/failed-audit-data.json
      FIPS::VERIFY::[2016-08-03 02:06:33 +0000] [2016-08-03T02:06:33+00:00] FATAL: Stacktrace dumped to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/chef-stacktrace.out
      FIPS::VERIFY::[2016-08-03 02:06:33 +0000] [2016-08-03T02:06:33+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
      FIPS::VERIFY::[2016-08-03 02:06:33 +0000] [2016-08-03T02:06:33+00:00] ERROR: Found 1 errors, they are stored in the backtrace
      FIPS::VERIFY::[2016-08-03 02:06:34 +0000] [2016-08-03T02:06:34+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
      CHEF-ACCEPTANCE::[2016-08-03 02:06:35 +0000] Encountered an error running the recipe verify: Expected process to exit with [0], but received '1'
      ---- Begin output of chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/dna.json -o acceptance-cookbook::verify --no-color ----
    44235: |
      D      [WinRM] creating command_id: 6562BC44-E608-4AD5-8D26-A7905A21A27D on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05
      D      [WinRM] Waiting for output...
             /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- rake (LoadError)
               from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'
               from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in `<main>'
    44271: |
      D      [WinRM] Waiting for output...
      D      [WinRM] Processing output
             /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- rake (LoadError)
               from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require'
               from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in `<main>'
    44790: "\n\n      ================================================================================\n
      \     Error executing action `run` on resource 'ruby_block[copy_kitchen_logs_to_data_path]'\n
      \     ================================================================================\n\n
      \     Mixlib::ShellOut::ShellCommandFailed\n      ------------------------------------\n
      \     Expected process to exit with [0], but received '20'\n      ---- Begin
      output of bundle exec kitchen verify  -c -l debug ----\n      STDOUT: ----->
      Starting Kitchen (v1.10.2)\n      D      winrm requested, loading winrm gem
      ([\"~> 2.0\"])\n      D      winrm is loaded.\n      D      winrm-fs requested,
      loading winrm-fs gem ([\"~> 1.0\"])\n      D      winrm-fs is loaded.\n      D
      \     winrm requested, loading winrm gem ([\"~> 2.0\"])\n      D      winrm
      was already loaded.\n      D      winrm-fs requested, loading winrm-fs gem ([\"~>
      1.0\"])\n      D      winrm-fs was already loaded.\n      -----> Setting up
      <fips-unit-functional-windows-2012r2>...\n      -----> Setting up <fips-unit-functional-centos-6>...\n
      \     -----> Setting up <fips-integration-windows-2012r2>...\n             Finished
      setting up <fips-unit-functional-windows-2012r2> (0m0.00s).\n      -----> Setting
      up <fips-integration-centos-6>...\n             Finished setting up <fips-integration-windows-2012r2>
      (0m0.00s).\n      -----> Verifying <fips-unit-functional-windows-2012r2>...\n
      \            Preparing files for transfer\n             Finished setting up
      <fips-integration-centos-6> (0m0.00s).\n      D      Creating local sandbox
      in /tmp/cheftest/fips-unit-functional-windows-2012r2-sandbox-20160803-2928-1o688oq\n
      \     D      [WinRM] <{:endpoint=>\"http://10.194.10.128:5985/wsman\", :user=>\"administrator\",
      :password=>\"Ema66H=*UM\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"Ema66H=*UM\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n      $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n
      \     $gem = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n      $version
      = \"busser\"\n      $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable
      -n $env:TEMP\\verifier\\bin --no-user-install\"\n      $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \     $plugins = \"busser-serverspec\"\n\n      if ((& \"$ruby\" \"$gem\" list
      busser -i) -ne \"true\") {\n        Write-Host \"-----> Installing Busser ($version)`n\"\n
      \       & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n      }
      else {\n        Write-Host \"-----> Busser installation detected ($version)`n\"\n
      \     }\n\n      if (-Not (Test-Path \"$busser\")) {\n        $gem_bindir =
      & \"$ruby\" -rrubygems -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n        &
      \"$ruby\" \"$gem_bindir\\busser\" setup --type bat 2>&1\n      }\n\n      Write-Host
      \"       Installing Busser plugins: $plugins`n\"\n      & \"$busser\" plugin
      install $plugins.Split() 2>&1\n      )\n             Finished setting up <fips-unit-functional-centos-6>
      (0m0.00s).\n      -----> Verifying <fips-integration-windows-2012r2>...\n      ----->
      Verifying <fips-integration-centos-6>...\n             Preparing files for transfer\n
      \            Preparing files for transfer\n      -----> Verifying <fips-unit-functional-centos-6>...\n
      \            Preparing files for transfer\n      D      Creating local sandbox
      in /tmp/cheftest/fips-integration-windows-2012r2-sandbox-20160803-2928-937n9s\n
      \     D      Creating local sandbox in /tmp/cheftest/fips-integration-centos-6-sandbox-20160803-2928-63hwd2\n
      \     D      Creating local sandbox in /tmp/cheftest/fips-unit-functional-centos-6-sandbox-20160803-2928-epcr8m\n
      \     D      [SSH] root@10.194.13.125<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n      ruby=\"/opt/chef/embedded/bin/ruby\"\n      gem=\"/opt/chef/embedded/bin/gem\"\n
      \     version=\"busser\"\n      gem_install_args=\"busser --no-rdoc --no-ri
      --no-format-executable -n /tmp/verifier/bin --no-user-install\"\n      busser=\"sudo
      -E /tmp/verifier/bin/busser\"\n      plugins=\"busser-serverspec\"\n\n      $gem
      list busser -i 2>&1 >/dev/null\n      if test $? -ne 0; then\n        echo \"----->
      Installing Busser ($version)\"\n        $gem install $gem_install_args\n      else\n
      \       echo \"-----> Busser installation detected ($version)\"\n      fi\n\n
      \     if test ! -f \"$BUSSER_ROOT/bin/busser\"; then\n        $busser setup\n
      \     fi\n\n      echo \"       Installing Busser plugins: $plugins\"\n      $busser
      plugin install $plugins\n      ')\n      D      [SSH] root@10.194.11.41<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n      ruby=\"/opt/chef/embedded/bin/ruby\"\n      gem=\"/opt/chef/embedded/bin/gem\"\n
      \     version=\"busser\"\n      gem_install_args=\"busser --no-rdoc --no-ri
      --no-format-executable -n /tmp/verifier/bin --no-user-install\"\n      busser=\"sudo
      -E /tmp/verifier/bin/busser\"\n      plugins=\"busser-serverspec\"\n\n      $gem
      list busser -i 2>&1 >/dev/null\n      if test $? -ne 0; then\n        echo \"----->
      Installing Busser ($version)\"\n        $gem install $gem_install_args\n      else\n
      \       echo \"-----> Busser installation detected ($version)\"\n      fi\n\n
      \     if test ! -f \"$BUSSER_ROOT/bin/busser\"; then\n        $busser setup\n
      \     fi\n\n      echo \"       Installing Busser plugins: $plugins\"\n      $busser
      plugin install $plugins\n      ')\n      D      [WinRM] <{:endpoint=>\"http://10.194.12.192:5985/wsman\",
      :user=>\"administrator\", :password=>\"W$mcC=LD$*\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"W$mcC=LD$*\", :no_ssl_peer_verification=>true,
      :disable_sspi=>false, :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n      $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n
      \     $gem = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n      $version
      = \"busser\"\n      $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable
      -n $env:TEMP\\verifier\\bin --no-user-install\"\n      $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \     $plugins = \"busser-serverspec\"\n\n      if ((& \"$ruby\" \"$gem\" list
      busser -i) -ne \"true\") {\n        Write-Host \"-----> Installing Busser ($version)`n\"\n
      \       & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n      }
      else {\n        Write-Host \"-----> Busser installation detected ($version)`n\"\n
      \     }\n\n      if (-Not (Test-Path \"$busser\")) {\n        $gem_bindir =
      & \"$ruby\" -rrubygems -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n        &
      \"$ruby\" \"$gem_bindir\\busser\" setup --type bat 2>&1\n      }\n\n      Write-Host
      \"       Installing Busser plugins: $plugins`n\"\n      & \"$busser\" plugin
      install $plugins.Split() 2>&1\n      )\n      D      [SSH] opening connection
      to root@10.194.13.125<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n      D      [SSH] opening connection to root@10.194.11.41<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n      D      [WinRM] opening remote shell
      on http://10.194.10.128:5985/wsman\n      D      [WinRM] opening remote shell
      on http://10.194.12.192:5985/wsman\n             bash: warning: setlocale: LC_ALL:
      cannot change locale (C.UTF-8)\n             sh: warning: setlocale: LC_ALL:
      cannot change locale (C.UTF-8)\n             bash: warning: setlocale: LC_ALL:
      cannot change locale (C.UTF-8)\n             sh: warning: setlocale: LC_ALL:
      cannot change locale (C.UTF-8)\n      D      [WinRM] Waiting for output...\n
      \     D      [WinRM] Waiting for output...\n      -----> Installing Busser (busser)\n
      \     -----> Installing Busser (busser)\n      D      [WinRM] Processing output\n
      \     D      [WinRM] polling for pipeline state. message: #<WinRM::PSRP::Message:0x00000004432ef8
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><Version N=\\\"protocolversion\\\">2.2</Version><Version
      N=\\\"PSVersion\\\">2.0</Version><Version N=\\\"SerializationVersion\\\">1.1.0.1</Version></MS></Obj>\",
      @destination=1, @type=65538, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n      D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x00000004431238
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><Obj N=\\\"ApplicationPrivateData\\\"
      RefId=\\\"1\\\"><TN RefId=\\\"0\\\"><T>System.Management.Automation.PSPrimitiveDictionary</T><T>System.Collections.Hashtable</T><T>System.Object</T></TN><DCT><En><S
      N=\\\"Key\\\">DebugMode</S><I32 N=\\\"Value\\\">1</I32></En><En><S N=\\\"Key\\\">DebugStop</S><B
      N=\\\"Value\\\">false</B></En><En><S N=\\\"Key\\\">PSVersionTable</S><Obj N=\\\"Value\\\"
      RefId=\\\"2\\\"><TNRef RefId=\\\"0\\\" /><DCT><En><S N=\\\"Key\\\">PSVersion</S><Version
      N=\\\"Value\\\">2.0</Version></En><En><S N=\\\"Key\\\">PSCompatibleVersions</S><Obj
      N=\\\"Value\\\" RefId=\\\"3\\\"><TN RefId=\\\"1\\\"><T>System.Version[]</T><T>System.Array</T><T>System.Object</T></TN><LST><Version>1.0</Version><Version>2.0</Version><Version>3.0</Version><Version>4.0</Version></LST></Obj></En><En><S
      N=\\\"Key\\\">BuildVersion</S><Version N=\\\"Value\\\">6.3.9600.17400</Version></En><En><S
      N=\\\"Key\\\">CLRVersion</S><Version N=\\\"Value\\\">4.0.30319.42000</Version></En><En><S
      N=\\\"Key\\\">WSManStackVersion</S><Version N=\\\"Value\\\">3.0</Version></En><En><S
      N=\\\"Key\\\">PSRemotingProtocolVersion</S><Version N=\\\"Value\\\">2.2</Version></En><En><S
      N=\\\"Key\\\">SerializationVersion</S><Version N=\\\"Value\\\">1.1.0.1</Version></En></DCT></Obj></En><En><S
      N=\\\"Key\\\">DebugBreakpointCount</S><I32 N=\\\"Value\\\">0</I32></En></DCT></Obj></MS></Obj>\",
      @destination=1, @type=135177, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n      D      [WinRM]
      Waiting for output...\n      D      [WinRM] Processing output\n      D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x000000034408d8
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><I32 N=\\\"RunspaceState\\\">2</I32></MS></Obj>\",
      @destination=1, @type=135173, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n      D      [WinRM]
      Processing output\n      D      [WinRM] remote shell created with shell_id:
      7FC91171-0B6B-47C0-9357-9D4312E79F05\n      D      [WinRM] polling for pipeline
      state. message: #<WinRM::PSRP::Message:0x00000003276c50 @data=\"\\xEF\\xBB\\xBF<Obj
      RefId=\\\"0\\\"><MS><Version N=\\\"protocolversion\\\">2.2</Version><Version
      N=\\\"PSVersion\\\">2.0</Version><Version N=\\\"SerializationVersion\\\">1.1.0.1</Version></MS></Obj>\",
      @destination=1, @type=65538, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n      D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x0000000326b990
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><Obj N=\\\"ApplicationPrivateData\\\"
      RefId=\\\"1\\\"><TN RefId=\\\"0\\\"><T>System.Management.Automation.PSPrimitiveDictionary</T><T>System.Collections.Hashtable</T><T>System.Object</T></TN><DCT><En><S
      N=\\\"Key\\\">DebugMode</S><I32 N=\\\"Value\\\">1</I32></En><En><S N=\\\"Key\\\">DebugStop</S><B
      N=\\\"Value\\\">false</B></En><En><S N=\\\"Key\\\">PSVersionTable</S><Obj N=\\\"Value\\\"
      RefId=\\\"2\\\"><TNRef RefId=\\\"0\\\" /><DCT><En><S N=\\\"Key\\\">PSVersion</S><Version
      N=\\\"Value\\\">2.0</Version></En><En><S N=\\\"Key\\\">PSCompatibleVersions</S><Obj
      N=\\\"Value\\\" RefId=\\\"3\\\"><TN RefId=\\\"1\\\"><T>System.Version[]</T><T>System.Array</T><T>System.Object</T></TN><LST><Version>1.0</Version><Version>2.0</Version><Version>3.0</Version><Version>4.0</Version></LST></Obj></En><En><S
      N=\\\"Key\\\">BuildVersion</S><Version N=\\\"Value\\\">6.3.9600.17400</Version></En><En><S
      N=\\\"Key\\\">CLRVersion</S><Version N=\\\"Value\\\">4.0.30319.42000</Version></En><En><S
      N=\\\"Key\\\">WSManStackVersion</S><Version N=\\\"Value\\\">3.0</Version></En><En><S
      N=\\\"Key\\\">PSRemotingProtocolVersion</S><Version N=\\\"Value\\\">2.2</Version></En><En><S
      N=\\\"Key\\\">SerializationVersion</S><Version N=\\\"Value\\\">1.1.0.1</Version></En></DCT></Obj></En><En><S
      N=\\\"Key\\\">DebugBreakpointCount</S><I32 N=\\\"Value\\\">0</I32></En></DCT></Obj></MS></Obj>\",
      @destination=1, @type=135177, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n      D      [WinRM]
      Waiting for output...\n      D      [WinRM] Processing output\n      D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x00000002af92c0
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><I32 N=\\\"RunspaceState\\\">2</I32></MS></Obj>\",
      @destination=1, @type=135173, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n      D      [WinRM]
      remote shell created with shell_id: 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n      D
      \     [WinRM] Command created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n      $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n
      \     $gem = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n      $version
      = \"busser\"\n      $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable
      -n $env:TEMP\\verifier\\bin --no-user-install\"\n      $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \     $plugins = \"busser-serverspec\"\n\n      if ((& \"$ruby\" \"$gem\" list
      busser -i) -ne \"true\") {\n        Write-Host \"-----> Installing Busser ($version)`n\"\n
      \       & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n      }
      else {\n        Write-Host \"-----> Busser installation detected ($version)`n\"\n
      \     }\n\n      if (-Not (Test-Path \"$busser\")) {\n        $gem_bindir =
      & \"$ruby\" -rrubygems -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n        &
      \"$ruby\" \"$gem_bindir\\busser\" setup --type bat 2>&1\n      }\n\n      Write-Host
      \"       Installing Busser plugins: $plugins`n\"\n      & \"$busser\" plugin
      install $plugins.Split() 2>&1\n       with id: FA8D2E64-D97B-4993-9F28-470AA2D8C46C\n
      \     D      [WinRM] creating command_id: FA8D2E64-D97B-4993-9F28-470AA2D8C46C
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n      D      [WinRM] Waiting
      for output...\n      D      [WinRM] Command created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n      $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n
      \     $gem = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n      $version
      = \"busser\"\n      $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable
      -n $env:TEMP\\verifier\\bin --no-user-install\"\n      $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \     $plugins = \"busser-serverspec\"\n\n      if ((& \"$ruby\" \"$gem\" list
      busser -i) -ne \"true\") {\n        Write-Host \"-----> Installing Busser ($version)`n\"\n
      \       & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n      }
      else {\n        Write-Host \"-----> Busser installation detected ($version)`n\"\n
      \     }\n\n      if (-Not (Test-Path \"$busser\")) {\n        $gem_bindir =
      & \"$ruby\" -rrubygems -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n        &
      \"$ruby\" \"$gem_bindir\\busser\" setup --type bat 2>&1\n      }\n\n      Write-Host
      \"       Installing Busser plugins: $plugins`n\"\n      & \"$busser\" plugin
      install $plugins.Split() 2>&1\n       with id: 6B664905-EEB3-4D96-A2D3-A5A0E2743A94\n
      \     D      [WinRM] creating command_id: 6B664905-EEB3-4D96-A2D3-A5A0E2743A94
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n      D      [WinRM] Waiting
      for output...\n             Fetching: thor-0.19.0.gem\rFetching: thor-0.19.0.gem
      (  3%)\rFetching: thor-0.19.0.gem (  6%)\rFetching: thor-0.19.0.gem (  9%)\rFetching:
      thor-0.19.0.gem ( 12%)\rFetching: thor-0.19.0.gem ( 15%)\rFetching: thor-0.19.0.gem
      ( 18%)\rFetching: thor-0.19.0.gem ( 21%)\rFetching: thor-0.19.0.gem ( 24%)\rFetching:
      thor-0.19.0.gem ( 27%)\rFetching: thor-0.19.0.gem ( 30%)\rFetching: thor-0.19.0.gem
      ( 33%)\rFetching: thor-0.19.0.gem ( 35%)\rFetching: thor-0.19.0.gem ( 53%)\rFetching:
      thor-0.19.0.gem ( 71%)\rFetching: thor-0.19.0.gem ( 89%)\rFetching: thor-0.19.0.gem
      (100%)\rFetching: thor-0.19.0.gem (100%)\n             Successfully installed
      thor-0.19.0\n             Fetching: busser-0.7.1.gem\rFetching: busser-0.7.1.gem
      ( 64%)\rFetching: busser-0.7.1.gem (100%)\rFetching: busser-0.7.1.gem (100%)\n
      \            Fetching: thor-0.19.0.gem\rFetching: thor-0.19.0.gem (  3%)\rFetching:
      thor-0.19.0.gem (  6%)\rFetching: thor-0.19.0.gem (  9%)\rFetching: thor-0.19.0.gem
      ( 12%)\rFetching: thor-0.19.0.gem ( 15%)\rFetching: thor-0.19.0.gem ( 18%)\rFetching:
      thor-0.19.0.gem ( 21%)\rFetching: thor-0.19.0.gem ( 24%)\rFetching: thor-0.19.0.gem
      ( 27%)\rFetching: thor-0.19.0.gem ( 30%)\rFetching: thor-0.19.0.gem ( 33%)\rFetching:
      thor-0.19.0.gem ( 35%)\rFetching: thor-0.19.0.gem ( 53%)\rFetching: thor-0.19.0.gem
      ( 71%)\rFetching: thor-0.19.0.gem ( 89%)\rFetching: thor-0.19.0.gem (100%)\rFetching:
      thor-0.19.0.gem (100%)\n             Successfully installed busser-0.7.1\n             2
      gems installed\n             Installing Busser plugins: busser-serverspec\n
      \            Successfully installed thor-0.19.0\n             Fetching: busser-0.7.1.gem\rFetching:
      busser-0.7.1.gem ( 64%)\rFetching: busser-0.7.1.gem (100%)\rFetching: busser-0.7.1.gem
      (100%)\n             Successfully installed busser-0.7.1\n             2 gems
      installed\n             Installing Busser plugins: busser-serverspec\n             Plugin
      serverspec installed (version 0.5.9)\n      -----> Running postinstall for serverspec
      plugin\n             Plugin serverspec installed (version 0.5.9)\n      ----->
      Running postinstall for serverspec plugin\n      D      [SSH] root@10.194.13.125<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser suite cleanup\n      ')\n
      \            bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \     D      [WinRM] Processing output\n      -----> Installing Busser (busser)\n\n
      \     D      [WinRM] Waiting for output...\n      D      [SSH] root@10.194.11.41<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser suite cleanup\n      ')\n
      \            bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \     D      [WinRM] Processing output\n      -----> Installing Busser (busser)\n\n
      \     D      [WinRM] Waiting for output...\n             Suite path directory
      /tmp/verifier/suites does not exist, skipping.\n             Transferring files
      to <fips-integration-centos-6>\n      D      TIMING: scp async upload (Kitchen::Transport::Ssh)\n
      \     D      TIMING: scp async upload (Kitchen::Transport::Ssh) took (0m0.10s)\n
      \     D      Transfer complete\n      D      [SSH] root@10.194.13.125<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser test\n      ')\n
      \            bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            Suite path directory /tmp/verifier/suites does not exist, skipping.\n
      \            Transferring files to <fips-unit-functional-centos-6>\n      D
      \     TIMING: scp async upload (Kitchen::Transport::Ssh)\n      D      TIMING:
      scp async upload (Kitchen::Transport::Ssh) took (0m0.10s)\n      D      Transfer
      complete\n      D      [SSH] root@10.194.11.41<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser test\n      ')\n
      \            bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \     -----> Running serverspec test suite\n      -----> Bundle Installing..\n
      \            \\33[1m\\33[32m         run\\33[0m  /opt/chef/embedded/bin/ruby
      /tmp/verifier/gems/bin/bundle install --gemfile /tmp/verifier/suites/serverspec/Gemfile
      --local || /opt/chef/embedded/bin/ruby /tmp/verifier/gems/bin/bundle install
      --gemfile /tmp/verifier/suites/serverspec/Gemfile from \".\"\n             sh:
      warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n      -----> Running
      serverspec test suite\n      -----> Bundle Installing..\n             \\33[1m\\33[32m
      \        run\\33[0m  /opt/chef/embedded/bin/ruby /tmp/verifier/gems/bin/bundle
      install --gemfile /tmp/verifier/suites/serverspec/Gemfile --local || /opt/chef/embedded/bin/ruby
      /tmp/verifier/gems/bin/bundle install --gemfile /tmp/verifier/suites/serverspec/Gemfile
      from \".\"\n             sh: warning: setlocale: LC_ALL: cannot change locale
      (C.UTF-8)\n             sh: warning: setlocale: LC_ALL: cannot change locale
      (C.UTF-8)\n             \\33[33mDon't run Bundler as root. Bundler can ask for
      sudo if it is needed, and\n             installing your bundle as root will
      break this application for all non-root\n             users on this machine.\\33[0m\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            \\33[31mCould not find gem 'mixlib-shellout' in any of the gem
      sources listed in your\n             Gemfile or available on this machine.\\33[0m\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            \\33[33mDon't run Bundler as root. Bundler can ask for sudo if
      it is needed, and\n             installing your bundle as root will break this
      application for all non-root\n             users on this machine.\\33[0m\n             sh:
      warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n             \\33[31mCould
      not find gem 'mixlib-shellout' in any of the gem sources listed in your\n             Gemfile
      or available on this machine.\\33[0m\n             sh: warning: setlocale: LC_ALL:
      cannot change locale (C.UTF-8)\n             \\33[33mDon't run Bundler as root.
      Bundler can ask for sudo if it is needed, and\n             installing your
      bundle as root will break this application for all non-root\n             users
      on this machine.\\33[0m\n             sh: warning: setlocale: LC_ALL: cannot
      change locale (C.UTF-8)\n             \\33[33mDon't run Bundler as root. Bundler
      can ask for sudo if it is needed, and\n             installing your bundle as
      root will break this application for all non-root\n             users on this
      machine.\\33[0m\n      D      [WinRM] Processing output\n             Successfully
      installed thor-0.19.0\n             Successfully installed busser-0.7.1\n             2
      gems installed\n             Installing Busser plugins: busser-serverspec\n\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n             Successfully installed thor-0.19.0\n             Successfully
      installed busser-0.7.1\n             2 gems installed\n             Installing
      Busser plugins: busser-serverspec\n\n      D      [WinRM] Waiting for output...\n
      \            Fetching gem metadata from https://rubygems.org/\n             Fetching
      version metadata from https://rubygems.org/\n             Fetching gem metadata
      from https://rubygems.org/\n             Resolving dependencies...\n             Fetching
      version metadata from https://rubygems.org/\n             \\33[32mInstalling
      mixlib-shellout 2.2.6\\33[0m\n             Using bundler 1.12.5\n             \\33[32mBundle
      complete! 1 Gemfile dependency, 2 gems now installed.\\33[0m\n             \\33[32mUse
      `bundle show [gemname]` to see where a bundled gem is installed.\\33[0m\n             Resolving
      dependencies...\n      -----> Installing Serverspec..\n             \\33[32mInstalling
      mixlib-shellout 2.2.6\\33[0m\n             Using bundler 1.12.5\n             \\33[32mBundle
      complete! 1 Gemfile dependency, 2 gems now installed.\\33[0m\n             \\33[32mUse
      `bundle show [gemname]` to see where a bundled gem is installed.\\33[0m\n      ----->
      Installing Serverspec..\n             Fetching: rspec-support-3.5.0.gem\rFetching:
      rspec-support-3.5.0.gem (  7%)\rFetching: rspec-support-3.5.0.gem ( 15%)\rFetching:
      rspec-support-3.5.0.gem ( 23%)\rFetching: rspec-support-3.5.0.gem ( 32%)\rFetching:
      rspec-support-3.5.0.gem ( 40%)\rFetching: rspec-support-3.5.0.gem ( 48%)\rFetching:
      rspec-support-3.5.0.gem ( 56%)\rFetching: rspec-support-3.5.0.gem ( 64%)\rFetching:
      rspec-support-3.5.0.gem ( 72%)\rFetching: rspec-support-3.5.0.gem ( 81%)\rFetching:
      rspec-support-3.5.0.gem ( 89%)\rFetching: rspec-support-3.5.0.gem ( 97%)\rFetching:
      rspec-support-3.5.0.gem (100%)\rFetching: rspec-support-3.5.0.gem (100%)\n      D
      \     [WinRM] Processing output\n             Plugin serverspec installed (version
      0.5.9)\n      -----> Running postinstall for serverspec plugin\n      D      [WinRM]
      Waiting for output...\n             Fetching: rspec-core-3.5.2.gem\rFetching:
      rspec-core-3.5.2.gem (  2%)\rFetching: rspec-core-3.5.2.gem (  4%)\rFetching:
      rspec-core-3.5.2.gem (  5%)\rFetching: rspec-core-3.5.2.gem (  7%)\rFetching:
      rspec-core-3.5.2.gem (  9%)\rFetching: rspec-core-3.5.2.gem ( 11%)\rFetching:
      rspec-core-3.5.2.gem ( 13%)\rFetching: rspec-core-3.5.2.gem ( 14%)\rFetching:
      rspec-core-3.5.2.gem ( 16%)\rFetching: rspec-core-3.5.2.gem ( 18%)\rFetching:
      rspec-core-3.5.2.gem ( 20%)\rFetching: rspec-core-3.5.2.gem ( 22%)\rFetching:
      rspec-core-3.5.2.gem ( 32%)\rFetching: rspec-core-3.5.2.gem ( 43%)\rFetching:
      rspec-core-3.5.2.gem ( 54%)\rFetching: rspec-core-3.5.2.gem ( 65%)\rFetching:
      rspec-core-3.5.2.gem ( 76%)\rFetching: rspec-core-3.5.2.gem ( 87%)\rFetching:
      rspec-core-3.5.2.gem ( 97%)\rFetching: rspec-core-3.5.2.gem (100%)\rFetching:
      rspec-core-3.5.2.gem (100%)\n      D      [WinRM] Processing output\n             Fetching:
      rspec-support-3.5.0.gem\rFetching: rspec-support-3.5.0.gem (  7%)\rFetching:
      rspec-support-3.5.0.gem ( 15%)\rFetching: rspec-support-3.5.0.gem ( 23%)\rFetching:
      rspec-support-3.5.0.gem ( 32%)\rFetching: rspec-support-3.5.0.gem ( 40%)\rFetching:
      rspec-support-3.5.0.gem ( 48%)\rFetching: rspec-support-3.5.0.gem ( 56%)\rFetching:
      rspec-support-3.5.0.gem ( 64%)\rFetching: rspec-support-3.5.0.gem ( 72%)\rFetching:
      rspec-support-3.5.0.gem ( 81%)\rFetching: rspec-support-3.5.0.gem ( 89%)\rFetching:
      rspec-support-3.5.0.gem ( 97%)\rFetching: rspec-support-3.5.0.gem (100%)\rFetching:
      rspec-support-3.5.0.gem (100%)\n      D      [WinRM] cleaning up command_id:
      FA8D2E64-D97B-4993-9F28-470AA2D8C46C on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \     D      [WinRM] <{:endpoint=>\"http://10.194.10.128:5985/wsman\", :user=>\"administrator\",
      :password=>\"Ema66H=*UM\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"Ema66H=*UM\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      suite cleanup\n      )\n             Fetching: diff-lcs-1.2.5.gem\rFetching:
      diff-lcs-1.2.5.gem ( 32%)\rFetching: diff-lcs-1.2.5.gem ( 66%)\rFetching: diff-lcs-1.2.5.gem
      ( 99%)\rFetching: diff-lcs-1.2.5.gem (100%)\rFetching: diff-lcs-1.2.5.gem (100%)\n
      \     D      [WinRM] Processing output\n             Plugin serverspec installed
      (version 0.5.9)\n      -----> Running postinstall for serverspec plugin\n      D
      \     [WinRM] Waiting for output...\n             Fetching: rspec-core-3.5.2.gem\rFetching:
      rspec-core-3.5.2.gem (  2%)\rFetching: rspec-core-3.5.2.gem (  4%)\rFetching:
      rspec-core-3.5.2.gem (  5%)\rFetching: rspec-core-3.5.2.gem (  7%)\rFetching:
      rspec-core-3.5.2.gem (  9%)\rFetching: rspec-core-3.5.2.gem ( 11%)\rFetching:
      rspec-core-3.5.2.gem ( 13%)\rFetching: rspec-core-3.5.2.gem ( 14%)\rFetching:
      rspec-core-3.5.2.gem ( 16%)\rFetching: rspec-core-3.5.2.gem ( 18%)\rFetching:
      rspec-core-3.5.2.gem ( 20%)\rFetching: rspec-core-3.5.2.gem ( 22%)\rFetching:
      rspec-core-3.5.2.gem ( 32%)\rFetching: rspec-core-3.5.2.gem ( 43%)\rFetching:
      rspec-core-3.5.2.gem ( 54%)\rFetching: rspec-core-3.5.2.gem ( 65%)\rFetching:
      rspec-core-3.5.2.gem ( 76%)\rFetching: rspec-core-3.5.2.gem ( 87%)\rFetching:
      rspec-core-3.5.2.gem ( 97%)\rFetching: rspec-core-3.5.2.gem (100%)\rFetching:
      rspec-core-3.5.2.gem (100%)\n             Fetching: rspec-expectations-3.5.0.gem\rFetching:
      rspec-expectations-3.5.0.gem ( 21%)\rFetching: rspec-expectations-3.5.0.gem
      ( 42%)\rFetching: rspec-expectations-3.5.0.gem ( 63%)\rFetching: rspec-expectations-3.5.0.gem
      ( 84%)\rFetching: rspec-expectations-3.5.0.gem (100%)\rFetching: rspec-expectations-3.5.0.gem
      (100%)\n      D      [WinRM] Command created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      suite cleanup\n       with id: 914914DD-3161-4E2D-A8F2-687D8CEFAE8B\n      D
      \     [WinRM] creating command_id: 914914DD-3161-4E2D-A8F2-687D8CEFAE8B on shell_id
      7FC91171-0B6B-47C0-9357-9D4312E79F05\n      D      [WinRM] Waiting for output...\n
      \     D      [WinRM] Processing output\n      D      [WinRM] cleaning up command_id:
      6B664905-EEB3-4D96-A2D3-A5A0E2743A94 on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \            Fetching: rspec-mocks-3.5.0.gem\rFetching: rspec-mocks-3.5.0.gem
      ( 21%)\rFetching: rspec-mocks-3.5.0.gem ( 42%)\rFetching: rspec-mocks-3.5.0.gem
      ( 64%)\rFetching: rspec-mocks-3.5.0.gem ( 85%)\rFetching: rspec-mocks-3.5.0.gem
      (100%)\rFetching: rspec-mocks-3.5.0.gem (100%)\n      D      [WinRM] <{:endpoint=>\"http://10.194.12.192:5985/wsman\",
      :user=>\"administrator\", :password=>\"W$mcC=LD$*\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"W$mcC=LD$*\", :no_ssl_peer_verification=>true,
      :disable_sspi=>false, :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      suite cleanup\n      )\n             Fetching: diff-lcs-1.2.5.gem\rFetching:
      diff-lcs-1.2.5.gem ( 32%)\rFetching: diff-lcs-1.2.5.gem ( 66%)\rFetching: diff-lcs-1.2.5.gem
      ( 99%)\rFetching: diff-lcs-1.2.5.gem (100%)\rFetching: diff-lcs-1.2.5.gem (100%)\n
      \            Fetching: rspec-3.5.0.gem\rFetching: rspec-3.5.0.gem (100%)\rFetching:
      rspec-3.5.0.gem (100%)\n      D      [WinRM] Command created for $env:PATH =
      [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n      $env:BUSSER_ROOT
      = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      suite cleanup\n       with id: 1595C65E-4253-46C4-AF34-969810AD8285\n      D
      \     [WinRM] creating command_id: 1595C65E-4253-46C4-AF34-969810AD8285 on shell_id
      8030D0C9-8AD7-4D35-86B5-02317B679ACC\n      D      [WinRM] Waiting for output...\n
      \            Fetching: rspec-expectations-3.5.0.gem\rFetching: rspec-expectations-3.5.0.gem
      ( 21%)\rFetching: rspec-expectations-3.5.0.gem ( 42%)\rFetching: rspec-expectations-3.5.0.gem
      ( 63%)\rFetching: rspec-expectations-3.5.0.gem ( 84%)\rFetching: rspec-expectations-3.5.0.gem
      (100%)\rFetching: rspec-expectations-3.5.0.gem (100%)\n             Fetching:
      rspec-its-1.2.0.gem\rFetching: rspec-its-1.2.0.gem (100%)\rFetching: rspec-its-1.2.0.gem
      (100%)\n             Fetching: rspec-mocks-3.5.0.gem\rFetching: rspec-mocks-3.5.0.gem
      ( 21%)\rFetching: rspec-mocks-3.5.0.gem ( 42%)\rFetching: rspec-mocks-3.5.0.gem
      ( 64%)\rFetching: rspec-mocks-3.5.0.gem ( 85%)\rFetching: rspec-mocks-3.5.0.gem
      (100%)\rFetching: rspec-mocks-3.5.0.gem (100%)\n             Fetching: multi_json-1.12.1.gem\rFetching:
      multi_json-1.12.1.gem ( 61%)\rFetching: multi_json-1.12.1.gem (100%)\rFetching:
      multi_json-1.12.1.gem (100%)\n             Fetching: rspec-3.5.0.gem\rFetching:
      rspec-3.5.0.gem (100%)\rFetching: rspec-3.5.0.gem (100%)\n             Fetching:
      net-ssh-3.2.0.gem\rFetching: net-ssh-3.2.0.gem (  9%)\rFetching: net-ssh-3.2.0.gem
      ( 18%)\rFetching: net-ssh-3.2.0.gem ( 27%)\rFetching: net-ssh-3.2.0.gem ( 35%)\rFetching:
      net-ssh-3.2.0.gem ( 44%)\rFetching: net-ssh-3.2.0.gem ( 53%)\rFetching: net-ssh-3.2.0.gem
      ( 62%)\rFetching: net-ssh-3.2.0.gem ( 71%)\rFetching: net-ssh-3.2.0.gem ( 80%)\rFetching:
      net-ssh-3.2.0.gem ( 89%)\rFetching: net-ssh-3.2.0.gem ( 97%)\rFetching: net-ssh-3.2.0.gem
      (100%)\rFetching: net-ssh-3.2.0.gem (100%)\n             Fetching: rspec-its-1.2.0.gem\rFetching:
      rspec-its-1.2.0.gem (100%)\rFetching: rspec-its-1.2.0.gem (100%)\n             Fetching:
      multi_json-1.12.1.gem\rFetching: multi_json-1.12.1.gem ( 61%)\rFetching: multi_json-1.12.1.gem
      (100%)\rFetching: multi_json-1.12.1.gem (100%)\n             Fetching: net-scp-1.2.1.gem\rFetching:
      net-scp-1.2.1.gem ( 48%)\rFetching: net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem
      (100%)\rFetching: net-scp-1.2.1.gem (100%)\n             Fetching: net-ssh-3.2.0.gem\rFetching:
      net-ssh-3.2.0.gem (  9%)\rFetching: net-ssh-3.2.0.gem ( 18%)\rFetching: net-ssh-3.2.0.gem
      ( 27%)\rFetching: net-ssh-3.2.0.gem ( 35%)\rFetching: net-ssh-3.2.0.gem ( 44%)\rFetching:
      net-ssh-3.2.0.gem ( 53%)\rFetching: net-ssh-3.2.0.gem ( 62%)\rFetching: net-ssh-3.2.0.gem
      ( 71%)\rFetching: net-ssh-3.2.0.gem ( 80%)\rFetching: net-ssh-3.2.0.gem ( 89%)\rFetching:
      net-ssh-3.2.0.gem ( 97%)\rFetching: net-ssh-3.2.0.gem (100%)\rFetching: net-ssh-3.2.0.gem
      (100%)\n             Fetching: net-telnet-0.1.1.gem\rFetching: net-telnet-0.1.1.gem
      ( 93%)\rFetching: net-telnet-0.1.1.gem (100%)\rFetching: net-telnet-0.1.1.gem
      (100%)\n             Fetching: sfl-2.2.gem\rFetching: sfl-2.2.gem (100%)\rFetching:
      sfl-2.2.gem (100%)\n             Fetching: net-scp-1.2.1.gem\rFetching: net-scp-1.2.1.gem
      ( 48%)\rFetching: net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem (100%)\rFetching:
      net-scp-1.2.1.gem (100%)\n             Fetching: specinfra-2.60.2.gem\rFetching:
      specinfra-2.60.2.gem ( 20%)\rFetching: specinfra-2.60.2.gem ( 40%)\rFetching:
      specinfra-2.60.2.gem ( 61%)\rFetching: specinfra-2.60.2.gem ( 81%)\rFetching:
      specinfra-2.60.2.gem (100%)\rFetching: specinfra-2.60.2.gem (100%)\n             Fetching:
      net-telnet-0.1.1.gem\rFetching: net-telnet-0.1.1.gem ( 93%)\rFetching: net-telnet-0.1.1.gem
      (100%)\rFetching: net-telnet-0.1.1.gem (100%)\n             Fetching: sfl-2.2.gem\rFetching:
      sfl-2.2.gem (100%)\rFetching: sfl-2.2.gem (100%)\n      D      [WinRM] Processing
      output\n             Suite path directory C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites
      does not exist, skipping.\n      D      [WinRM] cleaning up command_id: 914914DD-3161-4E2D-A8F2-687D8CEFAE8B
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n             Fetching: specinfra-2.60.2.gem\rFetching:
      specinfra-2.60.2.gem ( 20%)\rFetching: specinfra-2.60.2.gem ( 40%)\rFetching:
      specinfra-2.60.2.gem ( 61%)\rFetching: specinfra-2.60.2.gem ( 81%)\rFetching:
      specinfra-2.60.2.gem (100%)\rFetching: specinfra-2.60.2.gem (100%)\n             Transferring
      files to <fips-unit-functional-windows-2012r2>\n      D      creating hash for
      directory $env:TEMP\\verifier\n      D      Populating files\n      D      +++
      Adding serverspec/Gemfile\n      D      +++ Adding serverspec/fips-unit-functional_spec.rb\n
      \     D      === All files added.\n      D      Running check_files.ps1\n             Fetching:
      serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem ( 41%)\rFetching: serverspec-2.36.0.gem
      ( 83%)\rFetching: serverspec-2.36.0.gem (100%)\rFetching: serverspec-2.36.0.gem
      (100%)\n      -----> serverspec installed (version 2.36.0)\n      D      [WinRM]
      Command created for $hash_file = @{\n        \"5d2e53a5614191437bca7afdb9d7591e\"
      = @{\n          \"target\" = \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\";\n
      \         \"src_basename\" = \"suites\";\n          \"dst\" = \"$env:TEMP\\verifier\\suites\"\n
      \       }\n      }\n\n      Function Cleanup($disposable) {\n        if (($disposable
      -ne $null) -and ($disposable.GetType().GetMethod(\"Dispose\") -ne $null)) {\n
      \         $disposable.Dispose()\n        }\n      }\n\n      Function Check-Files($h)
      {\n        return $h.GetEnumerator() | ForEach-Object {\n          $dst = Unresolve-Path
      $_.Value.target\n          $dst_changed = $false\n          if(Test-Path $dst
      -PathType Container) {\n            $dst_changed = $true\n            $dst =
      Join-Path $dst $_.Value.src_basename\n          }\n          New-Object psobject
      -Property @{\n            chk_exists = ($exists = Test-Path $dst -PathType Leaf)\n
      \           src_md5 = ($sMd5 = $_.Key)\n            dst_md5 = ($dMd5 = if ($exists)
      { Get-MD5Sum $dst } else { $null })\n            chk_dirty = ($dirty = if ($sMd5
      -ne $dMd5) { $true } else { $false })\n            verifies = if ($dirty -eq
      $false) { $true } else { $false }\n            target_is_folder = $dst_changed\n
      \         }\n        } | Select-Object -Property chk_exists,src_md5,dst_md5,chk_dirty,verifies,target_is_folder\n
      \     }\n\n      Function Get-MD5Sum($src) {\n        Try {\n          $c =
      [System.Security.Cryptography.MD5]::Create()\n          $bytes = $c.ComputeHash(($in
      = (Get-Item $src).OpenRead()))\n          return ([System.BitConverter]::ToString($bytes)).Replace(\"-\",
      \"\").ToLower()\n        }\n        Finally {\n          Cleanup $c\n          Cleanup
      $in\n        }\n      }\n\n      Function Unresolve-Path($path) {\n        if
      ($path -eq $null) {\n          return $null\n        }\n        else {\n          return
      $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($path)\n
      \       }\n      }\n\n      Check-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \      with id: 6562BC44-E608-4AD5-8D26-A7905A21A27D\n      D      [WinRM] creating
      command_id: 6562BC44-E608-4AD5-8D26-A7905A21A27D on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \     D      [WinRM] Waiting for output...\n             /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n               from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n               from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n             !!!!!! Ruby Script [/tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      /tmp/verifier/suites/serverspec] exit code was 1\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 6562BC44-E608-4AD5-8D26-A7905A21A27D
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n      D      Cleaning up local
      sandbox in /tmp/cheftest/fips-integration-centos-6-sandbox-20160803-2928-63hwd2\n
      \            Fetching: serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem
      ( 41%)\rFetching: serverspec-2.36.0.gem ( 83%)\rFetching: serverspec-2.36.0.gem
      (100%)\rFetching: serverspec-2.36.0.gem (100%)\n      D      Parsing CSV Response\n
      \     D      \"chk_exists\",\"src_md5\",\"dst_md5\",\"chk_dirty\",\"verifies\",\"target_is_folder\"\n
      \     \"False\",\"5d2e53a5614191437bca7afdb9d7591e\",,\"True\",\"False\",\"False\"\n\n
      \     D      Uploading /tmp/cheftest/tmpzip-20160803-2928-gfo3zy.zip to $env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\n
      \     D      [WinRM] Processing output\n             Suite path directory C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites
      does not exist, skipping.\n      D      [WinRM] cleaning up command_id: 1595C65E-4253-46C4-AF34-969810AD8285
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n             Transferring
      files to <fips-integration-windows-2012r2>\n      D      creating hash for directory
      $env:TEMP\\verifier\n      D      Populating files\n      D      +++ Adding
      serverspec/Gemfile\n      D      +++ Adding serverspec/fips-integration_spec.rb\n
      \     D      === All files added.\n      D      Running check_files.ps1\n      ----->
      serverspec installed (version 2.36.0)\n      D      [WinRM] Command created
      for             $parent = Split-Path \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\"\n
      \                 if(!(Test-path $parent)) { mkdir $parent | Out-Null}\n                  $fileStream
      = New-Object -TypeName System.IO.FileStream -ArgumentList @(\n                      \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\",\n
      \                     [system.io.filemode]::Create,\n                      [System.io.FileAccess]::Write,\n
      \                     [System.IO.FileShare]::ReadWrite\n                  )\n
      \      with id: 02BE053B-9C8E-425C-86FF-B8455902EA90\n      D      [WinRM] creating
      command_id: 02BE053B-9C8E-425C-86FF-B8455902EA90 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n             /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n               from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n               from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n             !!!!!! Ruby Script [/tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      /tmp/verifier/suites/serverspec] exit code was 1\n      D      [WinRM] cleaning
      up command_id: 02BE053B-9C8E-425C-86FF-B8455902EA90 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \     D      Cleaning up local sandbox in /tmp/cheftest/fips-unit-functional-centos-6-sandbox-20160803-2928-epcr8m\n
      \     D      [WinRM] Command created for $hash_file = @{\n        \"a58c3771533a6479cf23bf871167f7d9\"
      = @{\n          \"target\" = \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\";\n
      \         \"src_basename\" = \"suites\";\n          \"dst\" = \"$env:TEMP\\verifier\\suites\"\n
      \       }\n      }\n\n      Function Cleanup($disposable) {\n        if (($disposable
      -ne $null) -and ($disposable.GetType().GetMethod(\"Dispose\") -ne $null)) {\n
      \         $disposable.Dispose()\n        }\n      }\n\n      Function Check-Files($h)
      {\n        return $h.GetEnumerator() | ForEach-Object {\n          $dst = Unresolve-Path
      $_.Value.target\n          $dst_changed = $false\n          if(Test-Path $dst
      -PathType Container) {\n            $dst_changed = $true\n            $dst =
      Join-Path $dst $_.Value.src_basename\n          }\n          New-Object psobject
      -Property @{\n            chk_exists = ($exists = Test-Path $dst -PathType Leaf)\n
      \           src_md5 = ($sMd5 = $_.Key)\n            dst_md5 = ($dMd5 = if ($exists)
      { Get-MD5Sum $dst } else { $null })\n            chk_dirty = ($dirty = if ($sMd5
      -ne $dMd5) { $true } else { $false })\n            verifies = if ($dirty -eq
      $false) { $true } else { $false }\n            target_is_folder = $dst_changed\n
      \         }\n        } | Select-Object -Property chk_exists,src_md5,dst_md5,chk_dirty,verifies,target_is_folder\n
      \     }\n\n      Function Get-MD5Sum($src) {\n        Try {\n          $c =
      [System.Security.Cryptography.MD5]::Create()\n          $bytes = $c.ComputeHash(($in
      = (Get-Item $src).OpenRead()))\n          return ([System.BitConverter]::ToString($bytes)).Replace(\"-\",
      \"\").ToLower()\n        }\n        Finally {\n          Cleanup $c\n          Cleanup
      $in\n        }\n      }\n\n      Function Unresolve-Path($path) {\n        if
      ($path -eq $null) {\n          return $null\n        }\n        else {\n          return
      $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($path)\n
      \       }\n      }\n\n      Check-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \      with id: B7CFF501-4C28-4588-82FF-5A45BBC1CDBF\n      D      [WinRM] creating
      command_id: B7CFF501-4C28-4588-82FF-5A45BBC1CDBF on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: B7CFF501-4C28-4588-82FF-5A45BBC1CDBF
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n      D      Parsing CSV Response\n
      \     D      \"chk_exists\",\"src_md5\",\"dst_md5\",\"chk_dirty\",\"verifies\",\"target_is_folder\"\n
      \     \"False\",\"a58c3771533a6479cf23bf871167f7d9\",,\"True\",\"False\",\"False\"\n\n
      \     D      Uploading /tmp/cheftest/tmpzip-20160803-2928-7rezov.zip to $env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\n
      \     D      [WinRM] Command created for             $bytes=[Convert]::FromBase64String('UEsDBBQAAAAIAAAAISiSc1XqNQAAADUAAAASAAAAc2VydmVyc3BlYy9HZW1maWxlK84vLUpOVVDKKCkpKLbS1y8qTapMT80t1ssvSlfi4gIyFZRyMytyMpN0izNSc3LyS0uUuABQSwMEFAAAAAgAAAAhKJ91Hlo+AgAArgQAACcAAABzZXJ2ZXJzcGVjL2ZpcHMtdW5pdC1mdW5jdGlvbmFsX3NwZWMucmKNVN9v2jAQfuevuLkvIFHSadIeInUTZQlFKgRBO2mrKgvso3hKbGY7TaX++NtnJyShVJv2crHvPt/3+XwXjb9zoRFIJh5TsQ7MFtNU5ZZ0dB1Z55KnqEmnw9EwLdbON9riBmKxM3AjhQ3iXDIrlFylsNwhMwS46gBwByqE5KowX90WQGxgcXPxg86vhtdxspjC+SsEmXGY50zI++J5jw5KNIDVOZZLTA3ufZtVvUbJO5V1nxRtN1SZFOvcUK2U7VUaStI3IgAICwO1M0xxDJi7CTnmIC5sD0PvmFA+NARP9an58PqSwPkXuAVy8nQo5iXAbI2cIw/WQpI+RLPvtxX+Du4Gv5SQ3VikGIbeR5fRfLgYXieLXr/OfXEz+3YV0XE0jSdXUcnyjmOM2cYlIc0hh6aNKCnSfuUaDUeX0ZHvMpm2riPSyXiWLCI6SmbxZFxR+5chx7h4kfyMZhXgYxt1ZDGNJ/NlHSkDL0cV9dWmXOimrCzjcA7Tsi/DcOkbM8ntQGLR3fckmK0qoHymvsv1EHrTG+hcUqaybFW+WplogFor/aHZGstdkw/YVmW7VofvV39YG9fE1KKxXW965bGLagwGhbBbylJcSerYarH/lLtHQD1LgI/IoGSB041LwfIMpV35EYJTC6/72TP0Xlg4efIiXpp6QnPVPrCCh1BXrg9WZOjuFcKnz2dne3iv1XdYmcOKvGlvx0h2K2PQgN0i5G6+wRwMNRyXiPhl4HGk99c0m/YP8R/JWnSb0ps/UEsBAjQDFAAAAAgAAAAhKJJzVeo1AAAANQAAABIAAAAAAAAAAQAAAKSBAAAAAHNlcnZlcnNwZWMvR2VtZmlsZVBLAQI0AxQAAAAIAAAAISifdR5aPgIAAK4EAAAnAAAAAAAAAAEAAACkgWUAAABzZXJ2ZXJzcGVjL2ZpcHMtdW5pdC1mdW5jdGlvbmFsX3NwZWMucmJQSwUGAAAAAAIAAgCVAAAA6AIAAAAA')\n
      \                 $fileStream.Write($bytes, 0, $bytes.length)\n       with id:
      BE045077-950F-4E06-BEE1-753F2AC61570\n      D      [WinRM] creating command_id:
      BE045077-950F-4E06-BEE1-753F2AC61570 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: BE045077-950F-4E06-BEE1-753F2AC61570
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n      D      [WinRM] Command
      created for             $parent = Split-Path \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\"\n
      \                 if(!(Test-path $parent)) { mkdir $parent | Out-Null}\n                  $fileStream
      = New-Object -TypeName System.IO.FileStream -ArgumentList @(\n                      \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\",\n
      \                     [system.io.filemode]::Create,\n                      [System.io.FileAccess]::Write,\n
      \                     [System.IO.FileShare]::ReadWrite\n                  )\n
      \      with id: 85FD4046-02D3-4407-A2CB-DE369AEC6BA3\n      D      [WinRM] creating
      command_id: 85FD4046-02D3-4407-A2CB-DE369AEC6BA3 on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 85FD4046-02D3-4407-A2CB-DE369AEC6BA3
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n      D      [WinRM] Command
      created for $fileStream.Dispose() with id: 223585D9-63D2-47BF-96C2-47037C2444FE\n
      \     D      [WinRM] creating command_id: 223585D9-63D2-47BF-96C2-47037C2444FE
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n      D      [WinRM] Waiting
      for output...\n      D      [WinRM] Processing output\n      D      [WinRM]
      cleaning up command_id: 223585D9-63D2-47BF-96C2-47037C2444FE on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \     D      Finished uploading /tmp/cheftest/tmpzip-20160803-2928-gfo3zy.zip
      to $env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip (1.22
      KB over 1 chunks) in (0m0.55s)\n      D      Running extract_files.ps1\n      D
      \     [WinRM] Command created for             $bytes=[Convert]::FromBase64String('UEsDBBQAAAAIAAAAISiSc1XqNQAAADUAAAASAAAAc2VydmVyc3BlYy9HZW1maWxlK84vLUpOVVDKKCkpKLbS1y8qTapMT80t1ssvSlfi4gIyFZRyMytyMpN0izNSc3LyS0uUuABQSwMEFAAAAAgAAAAhKP2tKFc0AgAAbgQAACMAAABzZXJ2ZXJzcGVjL2ZpcHMtaW50ZWdyYXRpb25fc3BlYy5yYn1TbW/aMBD+zq+4uV9AoqTTpH2IxCbKEkACgoBO2qrKIvFRvCU2s52mUl9+e51XUirtQxz77rl7Hp/vFP5LuUIgCX+MeejoA8axTA3pqNoTpoLFqEinw1BHiofWNj7gHnx+1DATBu/VznApYHPESBNgsgPALCDjgslMf7dHAL6H9c31L7qaj7Z+sF7A8BWcRFvMc8LFffZcoZ0CDWBUisUWY42Vbb+r9yhYp1ztL0bTdWUieJhqqqQ0vVJDQfpOBACJXEcedSQZOpG9BTnnINZt2q4PTCgeGoKnOmo12k4JDL/BLZCLp7aYFweTEBlD5oRckD54y5+3Jf4O7gZ/JBddn8fourmNbrzVaD3aButev859fbP8MffoxFv4s7lXsHzgmGCyt0lIE2TRtBEleNwvTePReOqd2abB4mQ6I51NlsHao+Ng6c8mJXX+MuQc56+D396yBHw+eS2ZT/3ZalN7CsfLWUXzalPGVVPWKGEwhEXRk667yZsySM1AYNat+hH0QWZQPFPf5npw86U3UKmgkUySXfFqRaIBKiXVp+aoDbMNPogOMjmedOT9mgcrbZuYGtSmmy+9Iuy6HIFBxs2BRjHuBLVstdj/yq0QUM8R4CNGULDA5d6miNIEhSkH6NLAazV3mt5zAxdPuYiXpp7QXLUPUcZcqCvXB8MTtPdy4cvXq6sK3jvpa1emXZF37W0ZyXGnNWowBwTemm3dmm0A/Zcfi83FWc1IvnVagaRXpc+/N1BLAQI0AxQAAAAIAAAAISiSc1XqNQAAADUAAAASAAAAAAAAAAEAAACkgQAAAABzZXJ2ZXJzcGVjL0dlbWZpbGVQSwECNAMUAAAACAAAACEo/a0oVzQCAABuBAAAIwAAAAAAAAABAAAApIFlAAAAc2VydmVyc3BlYy9maXBzLWludGVncmF0aW9uX3NwZWMucmJQSwUGAAAAAAIAAgCRAAAA2gIAAAAA')\n
      \                 $fileStream.Write($bytes, 0, $bytes.length)\n       with id:
      5EF6900F-D6F9-42F0-8996-0627DC98EB43\n      D      [WinRM] creating command_id:
      5EF6900F-D6F9-42F0-8996-0627DC98EB43 on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: 5EF6900F-D6F9-42F0-8996-0627DC98EB43
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n      D      [WinRM] Command
      created for trap {\n        $e = $_.Exception\n        $e.InvocationInfo.ScriptName\n
      \       do {\n          $e.Message\n          $e = $e.InnerException\n        }
      while ($e)\n        break\n      }\n\n      function folder($path){\n        $path
      | ? {-not (test-path $_)} | % {$null = mkdir $_}\n      }\n\n      Function
      Decode-Files($hash) {\n        foreach ($key in $hash.keys) {\n          $value
      = $hash[$key]\n          $tzip, $dst = $Value[\"tmpzip\"], $Value[\"dst\"]\n
      \         if ($tzip) {Unzip-File $tzip $dst}\n          New-Object psobject
      -Property @{dst=$dst;src_md5=$key;tmpzip=$tzip}\n        }\n      }\n\n      Function
      Unzip-File($src, $dst) {\n        $unpack = $src -replace '\\.zip'\n        $dst_parent
      = Split-Path -Path $dst -Parent\n        if(!(Test-Path $dst_parent)) { $dst
      = $dst_parent }\n        folder $unpack, $dst\n        try {\n          try{\n
      \           [IO.Compression.ZipFile]::ExtractToDirectory($src, $unpack)\n          }\n
      \         catch {\n            Add-Type -AssemblyName System.IO.Compression.FileSystem
      -ErrorAction Stop\n            [IO.Compression.ZipFile]::ExtractToDirectory($src,
      $unpack)\n          }\n        }\n        catch {\n          Try {\n            $s
      = New-Object -ComObject Shell.Application\n            ($s.NameSpace($unpack)).CopyHere(($s.NameSpace($src)).Items(),
      0x610)\n          }\n          Finally {\n            [void][Runtime.Interopservices.Marshal]::ReleaseComObject($s)\n
      \         }\n        }\n        dir $unpack | cp -dest \"$dst/\" -force -recurse\n
      \       rm $unpack -recurse -force\n      }\n\n      $hash_file = @{\n        \"5d2e53a5614191437bca7afdb9d7591e\"
      = @{\n          \"dst\" = \"$env:TEMP\\verifier\\suites\";\n          \"tmpzip\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\"\n
      \       }\n      }\n      Decode-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \      with id: A19F9A97-63AE-404D-AD18-4065AB5A8472\n      D      [WinRM] creating
      command_id: A19F9A97-63AE-404D-AD18-4065AB5A8472 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Command created
      for $fileStream.Dispose() with id: 823270D7-62C6-4821-BD16-1CBF4ADC8F3B\n      D
      \     [WinRM] creating command_id: 823270D7-62C6-4821-BD16-1CBF4ADC8F3B on shell_id
      8030D0C9-8AD7-4D35-86B5-02317B679ACC\n      D      [WinRM] Waiting for output...\n
      \     D      [WinRM] Processing output\n      D      [WinRM] Processing output\n
      \     D      [WinRM] cleaning up command_id: 823270D7-62C6-4821-BD16-1CBF4ADC8F3B
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n      D      [WinRM] cleaning
      up command_id: A19F9A97-63AE-404D-AD18-4065AB5A8472 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \     D      Finished uploading /tmp/cheftest/tmpzip-20160803-2928-7rezov.zip
      to $env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip (1.196
      KB over 1 chunks) in (0m0.58s)\n      D      Running extract_files.ps1\n      D
      \     Parsing CSV Response\n      D      \"src_md5\",\"tmpzip\",\"dst\"\n      \"5d2e53a5614191437bca7afdb9d7591e\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\verifier\\suites\"\n\n
      \     D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160803-2928-gfo3zy.zip\n
      \     D      Uploaded 1 items dirty_check: (0m0.22s) stream_files: (0m0.55s)
      extract: (0m0.32s)\n      D      Transfer complete\n      D      [WinRM] <{:endpoint=>\"http://10.194.10.128:5985/wsman\",
      :user=>\"administrator\", :password=>\"Ema66H=*UM\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"Ema66H=*UM\", :no_ssl_peer_verification=>true,
      :disable_sspi=>false, :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      test\n      )\n      D      [WinRM] Command created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      test\n       with id: 8FE70064-671D-4C7F-9D5B-DBC92D578A00\n      D      [WinRM]
      creating command_id: 8FE70064-671D-4C7F-9D5B-DBC92D578A00 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Command created
      for trap {\n        $e = $_.Exception\n        $e.InvocationInfo.ScriptName\n
      \       do {\n          $e.Message\n          $e = $e.InnerException\n        }
      while ($e)\n        break\n      }\n\n      function folder($path){\n        $path
      | ? {-not (test-path $_)} | % {$null = mkdir $_}\n      }\n\n      Function
      Decode-Files($hash) {\n        foreach ($key in $hash.keys) {\n          $value
      = $hash[$key]\n          $tzip, $dst = $Value[\"tmpzip\"], $Value[\"dst\"]\n
      \         if ($tzip) {Unzip-File $tzip $dst}\n          New-Object psobject
      -Property @{dst=$dst;src_md5=$key;tmpzip=$tzip}\n        }\n      }\n\n      Function
      Unzip-File($src, $dst) {\n        $unpack = $src -replace '\\.zip'\n        $dst_parent
      = Split-Path -Path $dst -Parent\n        if(!(Test-Path $dst_parent)) { $dst
      = $dst_parent }\n        folder $unpack, $dst\n        try {\n          try{\n
      \           [IO.Compression.ZipFile]::ExtractToDirectory($src, $unpack)\n          }\n
      \         catch {\n            Add-Type -AssemblyName System.IO.Compression.FileSystem
      -ErrorAction Stop\n            [IO.Compression.ZipFile]::ExtractToDirectory($src,
      $unpack)\n          }\n        }\n        catch {\n          Try {\n            $s
      = New-Object -ComObject Shell.Application\n            ($s.NameSpace($unpack)).CopyHere(($s.NameSpace($src)).Items(),
      0x610)\n          }\n          Finally {\n            [void][Runtime.Interopservices.Marshal]::ReleaseComObject($s)\n
      \         }\n        }\n        dir $unpack | cp -dest \"$dst/\" -force -recurse\n
      \       rm $unpack -recurse -force\n      }\n\n      $hash_file = @{\n        \"a58c3771533a6479cf23bf871167f7d9\"
      = @{\n          \"dst\" = \"$env:TEMP\\verifier\\suites\";\n          \"tmpzip\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\"\n
      \       }\n      }\n      Decode-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \      with id: E28AA391-C6A6-4918-B9CE-FDDECB62D7E0\n      D      [WinRM] creating
      command_id: E28AA391-C6A6-4918-B9CE-FDDECB62D7E0 on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      D      [WinRM] cleaning up command_id: E28AA391-C6A6-4918-B9CE-FDDECB62D7E0
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n      D      Parsing CSV Response\n
      \     D      \"src_md5\",\"tmpzip\",\"dst\"\n      \"a58c3771533a6479cf23bf871167f7d9\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\verifier\\suites\"\n\n
      \     D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160803-2928-7rezov.zip\n
      \     D      Uploaded 1 items dirty_check: (0m0.21s) stream_files: (0m0.58s)
      extract: (0m0.30s)\n      D      Transfer complete\n      D      [WinRM] <{:endpoint=>\"http://10.194.12.192:5985/wsman\",
      :user=>\"administrator\", :password=>\"W$mcC=LD$*\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"W$mcC=LD$*\", :no_ssl_peer_verification=>true,
      :disable_sspi=>false, :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      test\n      )\n      D      [WinRM] Command created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      test\n       with id: 7CF45DFA-7F46-4DFC-A8A6-ED9AFD7EA49A\n      D      [WinRM]
      creating command_id: 7CF45DFA-7F46-4DFC-A8A6-ED9AFD7EA49A on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      -----> Running serverspec test suite\n      -----> Bundle Installing..\n
      \              run  C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      --local || C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      from \".\"\n      D      [WinRM] Waiting for output...\n      D      [WinRM]
      Processing output\n      -----> Running serverspec test suite\n      ----->
      Bundle Installing..\n               run  C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      --local || C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      from \".\"\n      D      [WinRM] Waiting for output...\n      D      [WinRM]
      Processing output\n             Could not find gem 'mixlib-shellout x64-mingw32'
      in any of the gem sources\n             listed in your Gemfile or available
      on this machine.\n      D      [WinRM] Waiting for output...\n      D      [WinRM]
      Processing output\n             Could not find gem 'mixlib-shellout x64-mingw32'
      in any of the gem sources\n             listed in your Gemfile or available
      on this machine.\n      D      [WinRM] Waiting for output...\n      D      [WinRM]
      Processing output\n             Fetching gem metadata from https://rubygems.org/\n
      \            Fetching version metadata from https://rubygems.org/\n             Resolving
      dependencies...\n             Installing ffi 1.9.14\n      D      [WinRM] Waiting
      for output...\n      D      [WinRM] Processing output\n             Fetching
      gem metadata from https://rubygems.org/\n             Fetching version metadata
      from https://rubygems.org/\n             Resolving dependencies...\n             Installing
      ffi 1.9.14\n      D      [WinRM] Waiting for output...\n      D      [WinRM]
      Processing output\n             Installing wmi-lite 1.0.0\n             Using
      bundler 1.12.5\n             Installing win32-process 0.8.3\n             Installing
      mixlib-shellout 2.2.6\n             Bundle complete! 1 Gemfile dependency, 5
      gems now installed.\n             Use `bundle show [gemname]` to see where a
      bundled gem is installed.\n      -----> Installing Serverspec..\n      D      [WinRM]
      Waiting for output...\n      D      [WinRM] Processing output\n             Installing
      wmi-lite 1.0.0\n             Using bundler 1.12.5\n             Installing win32-process
      0.8.3\n             Installing mixlib-shellout 2.2.6\n             Bundle complete!
      1 Gemfile dependency, 5 gems now installed.\n             Use `bundle show [gemname]`
      to see where a bundled gem is installed.\n      -----> Installing Serverspec..\n
      \     D      [WinRM] Waiting for output...\n      D      [WinRM] Processing
      output\n      -----> serverspec installed (version 2.36.0)\n      D      [WinRM]
      cleaning up command_id: 8FE70064-671D-4C7F-9D5B-DBC92D578A00 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \     $$$$$$ busser.bat : C:/opscode/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n          + CategoryInfo
      \         : NotSpecified: (C:/opscode/chef...ake (LoadError):String) [], RemoteException\n
      \         + FullyQualifiedErrorId : NativeCommandError\n        from C:/opscode/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n      $$$$$$   from C:/Users/Administrator/AppData/Local/Temp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n      $$$$$$ !!!!!! Ruby Script [C:/Users/Administrator/AppData/Local/Temp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec] exit code was
      1\n      D      Cleaning up local sandbox in /tmp/cheftest/fips-unit-functional-windows-2012r2-sandbox-20160803-2928-1o688oq\n
      \            Finished verifying <fips-unit-functional-windows-2012r2> (0m23.15s).\n
      \     D      [WinRM] Processing output\n      -----> serverspec installed (version
      2.36.0)\n      D      [WinRM] cleaning up command_id: 7CF45DFA-7F46-4DFC-A8A6-ED9AFD7EA49A
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n      $$$$$$ busser.bat :
      C:/opscode/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n          + CategoryInfo
      \         : NotSpecified: (C:/opscode/chef...ake (LoadError):String) [], RemoteException\n
      \         + FullyQualifiedErrorId : NativeCommandError\n        from C:/opscode/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n      $$$$$$   from C:/Users/Administrator/AppData/Local/Temp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n      $$$$$$ !!!!!! Ruby Script [C:/Users/Administrator/AppData/Local/Temp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec] exit code was
      1\n      D      Cleaning up local sandbox in /tmp/cheftest/fips-integration-windows-2012r2-sandbox-20160803-2928-937n9s\n
      \            Finished verifying <fips-integration-windows-2012r2> (0m23.88s).\n
      \     D      ------Exception-------\n      D      Class: Kitchen::ActionFailed\n
      \     D      Message: 2 actions failed.\n      >>>>>>     Verify failed on instance
      <fips-integration-centos-6>.  Please see .kitchen/logs/fips-integration-centos-6.log
      for more details\n      >>>>>>     Verify failed on instance <fips-unit-functional-centos-6>.
      \ Please see .kitchen/logs/fips-unit-functional-centos-6.log for more details\n
      \     D      ----------------------\n      D      ------Backtrace-------\n      D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:187:in
      `report_errors'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:178:in
      `run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:39:in
      `block in call'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:37:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:56:in
      `perform'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:184:in
      `block (2 levels) in <class:CLI>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/command.rb:27:in
      `run'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/invocation.rb:126:in
      `invoke_command'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:325:in
      `invoke_task'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor.rb:359:in
      `dispatch'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/base.rb:440:in
      `start'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `block in <top (required)>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/errors.rb:174:in
      `with_friendly_errors'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `<top (required)>'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `load'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `<top (required)>'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `load'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `kernel_load'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:24:in
      `run'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:304:in
      `exec'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/command.rb:27:in
      `run'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in
      `invoke_command'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor.rb:359:in
      `dispatch'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/base.rb:440:in
      `start'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:11:in
      `start'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:27:in
      `block in <top (required)>'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/friendly_errors.rb:98:in
      `with_friendly_errors'\n      D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:19:in
      `<top (required)>'\n      D      /opt/chefdk/embedded/bin/bundle:22:in `load'\n
      \     D      /opt/chefdk/embedded/bin/bundle:22:in `<main>'\n      D      ----End
      Backtrace-----\n      D      -Composite Exception--\n      D      Class: Kitchen::InstanceFailure\n
      \     D      Message: Verify failed on instance <fips-integration-centos-6>.
      \ Please see .kitchen/logs/fips-integration-centos-6.log for more details\n
      \     D      ----------------------\n      D      ------Backtrace-------\n      D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n      D      ----End Backtrace-----\n
      \     D      ---Nested Exception---\n      D      Class: Kitchen::ActionFailed\n
      \     D      Message: SSH exited (1) for command: [sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser test\n      ']\n
      \     D      ----------------------\n      D      ------Backtrace-------\n      D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n      D      ----End Backtrace-----\n
      \     D      -Composite Exception--\n      D      Class: Kitchen::InstanceFailure\n
      \     D      Message: Verify failed on instance <fips-unit-functional-centos-6>.
      \ Please see .kitchen/logs/fips-unit-functional-centos-6.log for more details\n
      \     D      ----------------------\n      D      ------Backtrace-------\n      D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n      D      ----End Backtrace-----\n
      \     D      ---Nested Exception---\n      D      Class: Kitchen::ActionFailed\n
      \     D      Message: SSH exited (1) for command: [sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser test\n      ']\n
      \     D      ----------------------\n      D      ------Backtrace-------\n      D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n      D      ----End Backtrace-----\n
      \     STDERR: >>>>>> ------Exception-------\n      >>>>>> Class: Kitchen::ActionFailed\n
      \     >>>>>> Message: 2 actions failed.\n      >>>>>>     Verify failed on instance
      <fips-integration-centos-6>.  Please see .kitchen/logs/fips-integration-centos-6.log
      for more details\n      >>>>>>     Verify failed on instance <fips-unit-functional-centos-6>.
      \ Please see .kitchen/logs/fips-unit-functional-centos-6.log for more details\n
      \     >>>>>> ----------------------\n      >>>>>> Please see .kitchen/logs/kitchen.log
      for more details\n      >>>>>> Also try running `kitchen diagnose --all` for
      configuration\n      ---- End output of bundle exec kitchen verify  -c -l debug
      ----\n      Ran bundle exec kitchen verify  -c -l debug returned 20\n\n      Cookbook
      Trace:\n      ---------------\n      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in
      `block (3 levels) in <class:Kitchen>'\n\n      Resource Declaration:\n      ---------------------\n
      \     # In /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb\n\n
      \      39:       ruby_block \"copy_kitchen_logs_to_data_path\" do\n       40:
      \        block do\n       41:           cmd_env = {\n       42:             \"KITCHEN_DRIVER\"
      => driver,\n       43:             \"KITCHEN_INSTANCES\" => instances,\n       44:
      \            \"KITCHEN_LOCAL_YAML\" => ::File.expand_path(\"../../.kitchen.#{driver}.yml\",
      __FILE__),\n       45:             \"KITCHEN_CHEF_PRODUCT\" => chef_product,\n
      \      46:             \"KITCHEN_CHEF_CHANNEL\" => chef_channel,\n       47:
      \            \"KITCHEN_CHEF_VERSION\" => chef_version,\n       48:             \"ARTIFACTORY_USERNAME\"
      => artifactory_username,\n       49:             \"ARTIFACTORY_PASSWORD\" =>
      artifactory_password\n       50:           }.merge(new_resource.env)\n       51:
      \          suite = kitchen_dir.split(\"/\").last\n       52:           kitchen_log_path
      = ENV[\"WORKSPACE\"] ? \"#{ENV[\"WORKSPACE\"]}/chef-acceptance-data/logs\" :
      \"#{kitchen_dir}/../.acceptance_data/logs/\"\n       53:\n       54:           begin\n
      \      55:             shell_out!(\"bundle exec kitchen #{command}#{instances
      ? \" #{instances}\" : \"\"}#{kitchen_options ? \" #{kitchen_options}\" : \"\"}\",\n
      \      56:                        env: cmd_env,\n       57:                        timeout:
      60 * 30,\n       58:                        live_stream: STDOUT,\n       59:
      \                       cwd: kitchen_dir)\n       60:           ensure\n       61:
      \            FileUtils.mkdir_p(\"#{kitchen_log_path}/#{suite}/#{command}\")\n
      \      62:             FileUtils.cp_r(\"#{kitchen_dir}/.kitchen/logs/.\", \"#{kitchen_log_path}/#{suite}/#{command}\")\n
      \      63:           end\n       64:         end\n       65:       end\n\n      Compiled
      Resource:\n      ------------------\n      # Declared in /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:39:in
      `block in <class:Kitchen>'\n\n      ruby_block(\"copy_kitchen_logs_to_data_path\")
      do\n        action [:run]\n        retries 0\n        retry_delay 2\n        default_guard_interpreter
      :default\n        block_name \"copy_kitchen_logs_to_data_path\"\n        declared_type
      :ruby_block\n        cookbook_name \"acceptance-cookbook\"\n        block #<Proc:0x00000004a3f6e8@/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:40>\n
      \     end\n\n      Platform:\n      ---------\n      x86_64-linux\n\n\n    ================================================================================\n
      \   Error executing action `run` on resource 'kitchen[verify]'\n    ================================================================================\n\n
      \   Mixlib::ShellOut::ShellCommandFailed\n    ------------------------------------\n
      \   ruby_block[copy_kitchen_logs_to_data_path] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb
      line 39) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process
      to exit with [0], but received '20'\n    ---- Begin output of bundle exec kitchen
      verify  -c -l debug ----\n    STDOUT: -----> Starting Kitchen (v1.10.2)\n    D
      \     winrm requested, loading winrm gem ([\"~> 2.0\"])\n    D      winrm is
      loaded.\n    D      winrm-fs requested, loading winrm-fs gem ([\"~> 1.0\"])\n
      \   D      winrm-fs is loaded.\n    D      winrm requested, loading winrm gem
      ([\"~> 2.0\"])\n    D      winrm was already loaded.\n    D      winrm-fs requested,
      loading winrm-fs gem ([\"~> 1.0\"])\n    D      winrm-fs was already loaded.\n
      \   -----> Setting up <fips-unit-functional-windows-2012r2>...\n    -----> Setting
      up <fips-unit-functional-centos-6>...\n    -----> Setting up <fips-integration-windows-2012r2>...\n
      \          Finished setting up <fips-unit-functional-windows-2012r2> (0m0.00s).\n
      \   -----> Setting up <fips-integration-centos-6>...\n           Finished setting
      up <fips-integration-windows-2012r2> (0m0.00s).\n    -----> Verifying <fips-unit-functional-windows-2012r2>...\n
      \          Preparing files for transfer\n           Finished setting up <fips-integration-centos-6>
      (0m0.00s).\n    D      Creating local sandbox in /tmp/cheftest/fips-unit-functional-windows-2012r2-sandbox-20160803-2928-1o688oq\n
      \   D      [WinRM] <{:endpoint=>\"http://10.194.10.128:5985/wsman\", :user=>\"administrator\",
      :password=>\"Ema66H=*UM\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"Ema66H=*UM\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n
      \   $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n    $gem
      = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n    $version = \"busser\"\n
      \   $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable -n
      $env:TEMP\\verifier\\bin --no-user-install\"\n    $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \   $plugins = \"busser-serverspec\"\n\n    if ((& \"$ruby\" \"$gem\" list busser
      -i) -ne \"true\") {\n      Write-Host \"-----> Installing Busser ($version)`n\"\n
      \     & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n    } else
      {\n      Write-Host \"-----> Busser installation detected ($version)`n\"\n    }\n\n
      \   if (-Not (Test-Path \"$busser\")) {\n      $gem_bindir = & \"$ruby\" -rrubygems
      -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n      & \"$ruby\" \"$gem_bindir\\busser\"
      setup --type bat 2>&1\n    }\n\n    Write-Host \"       Installing Busser plugins:
      $plugins`n\"\n    & \"$busser\" plugin install $plugins.Split() 2>&1\n    )\n
      \          Finished setting up <fips-unit-functional-centos-6> (0m0.00s).\n
      \   -----> Verifying <fips-integration-windows-2012r2>...\n    -----> Verifying
      <fips-integration-centos-6>...\n           Preparing files for transfer\n           Preparing
      files for transfer\n    -----> Verifying <fips-unit-functional-centos-6>...\n
      \          Preparing files for transfer\n    D      Creating local sandbox in
      /tmp/cheftest/fips-integration-windows-2012r2-sandbox-20160803-2928-937n9s\n
      \   D      Creating local sandbox in /tmp/cheftest/fips-integration-centos-6-sandbox-20160803-2928-63hwd2\n
      \   D      Creating local sandbox in /tmp/cheftest/fips-unit-functional-centos-6-sandbox-20160803-2928-epcr8m\n
      \   D      [SSH] root@10.194.13.125<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n
      \   ruby=\"/opt/chef/embedded/bin/ruby\"\n    gem=\"/opt/chef/embedded/bin/gem\"\n
      \   version=\"busser\"\n    gem_install_args=\"busser --no-rdoc --no-ri --no-format-executable
      -n /tmp/verifier/bin --no-user-install\"\n    busser=\"sudo -E /tmp/verifier/bin/busser\"\n
      \   plugins=\"busser-serverspec\"\n\n    $gem list busser -i 2>&1 >/dev/null\n
      \   if test $? -ne 0; then\n      echo \"-----> Installing Busser ($version)\"\n
      \     $gem install $gem_install_args\n    else\n      echo \"-----> Busser installation
      detected ($version)\"\n    fi\n\n    if test ! -f \"$BUSSER_ROOT/bin/busser\";
      then\n      $busser setup\n    fi\n\n    echo \"       Installing Busser plugins:
      $plugins\"\n    $busser plugin install $plugins\n    ')\n    D      [SSH] root@10.194.11.41<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n
      \   ruby=\"/opt/chef/embedded/bin/ruby\"\n    gem=\"/opt/chef/embedded/bin/gem\"\n
      \   version=\"busser\"\n    gem_install_args=\"busser --no-rdoc --no-ri --no-format-executable
      -n /tmp/verifier/bin --no-user-install\"\n    busser=\"sudo -E /tmp/verifier/bin/busser\"\n
      \   plugins=\"busser-serverspec\"\n\n    $gem list busser -i 2>&1 >/dev/null\n
      \   if test $? -ne 0; then\n      echo \"-----> Installing Busser ($version)\"\n
      \     $gem install $gem_install_args\n    else\n      echo \"-----> Busser installation
      detected ($version)\"\n    fi\n\n    if test ! -f \"$BUSSER_ROOT/bin/busser\";
      then\n      $busser setup\n    fi\n\n    echo \"       Installing Busser plugins:
      $plugins\"\n    $busser plugin install $plugins\n    ')\n    D      [WinRM]
      <{:endpoint=>\"http://10.194.12.192:5985/wsman\", :user=>\"administrator\",
      :password=>\"W$mcC=LD$*\", :transport=>:negotiate, :elevated_username=>\"administrator\",
      :elevated_password=>\"W$mcC=LD$*\", :no_ssl_peer_verification=>true, :disable_sspi=>false,
      :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n
      \   $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n    $gem
      = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n    $version = \"busser\"\n
      \   $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable -n
      $env:TEMP\\verifier\\bin --no-user-install\"\n    $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \   $plugins = \"busser-serverspec\"\n\n    if ((& \"$ruby\" \"$gem\" list busser
      -i) -ne \"true\") {\n      Write-Host \"-----> Installing Busser ($version)`n\"\n
      \     & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n    } else
      {\n      Write-Host \"-----> Busser installation detected ($version)`n\"\n    }\n\n
      \   if (-Not (Test-Path \"$busser\")) {\n      $gem_bindir = & \"$ruby\" -rrubygems
      -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n      & \"$ruby\" \"$gem_bindir\\busser\"
      setup --type bat 2>&1\n    }\n\n    Write-Host \"       Installing Busser plugins:
      $plugins`n\"\n    & \"$busser\" plugin install $plugins.Split() 2>&1\n    )\n
      \   D      [SSH] opening connection to root@10.194.13.125<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n    D      [SSH] opening connection to root@10.194.11.41<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n    D      [WinRM] opening remote shell on
      http://10.194.10.128:5985/wsman\n    D      [WinRM] opening remote shell on
      http://10.194.12.192:5985/wsman\n           bash: warning: setlocale: LC_ALL:
      cannot change locale (C.UTF-8)\n           sh: warning: setlocale: LC_ALL: cannot
      change locale (C.UTF-8)\n           bash: warning: setlocale: LC_ALL: cannot
      change locale (C.UTF-8)\n           sh: warning: setlocale: LC_ALL: cannot change
      locale (C.UTF-8)\n    D      [WinRM] Waiting for output...\n    D      [WinRM]
      Waiting for output...\n    -----> Installing Busser (busser)\n    -----> Installing
      Busser (busser)\n    D      [WinRM] Processing output\n    D      [WinRM] polling
      for pipeline state. message: #<WinRM::PSRP::Message:0x00000004432ef8 @data=\"\\xEF\\xBB\\xBF<Obj
      RefId=\\\"0\\\"><MS><Version N=\\\"protocolversion\\\">2.2</Version><Version
      N=\\\"PSVersion\\\">2.0</Version><Version N=\\\"SerializationVersion\\\">1.1.0.1</Version></MS></Obj>\",
      @destination=1, @type=65538, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n    D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x00000004431238
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><Obj N=\\\"ApplicationPrivateData\\\"
      RefId=\\\"1\\\"><TN RefId=\\\"0\\\"><T>System.Management.Automation.PSPrimitiveDictionary</T><T>System.Collections.Hashtable</T><T>System.Object</T></TN><DCT><En><S
      N=\\\"Key\\\">DebugMode</S><I32 N=\\\"Value\\\">1</I32></En><En><S N=\\\"Key\\\">DebugStop</S><B
      N=\\\"Value\\\">false</B></En><En><S N=\\\"Key\\\">PSVersionTable</S><Obj N=\\\"Value\\\"
      RefId=\\\"2\\\"><TNRef RefId=\\\"0\\\" /><DCT><En><S N=\\\"Key\\\">PSVersion</S><Version
      N=\\\"Value\\\">2.0</Version></En><En><S N=\\\"Key\\\">PSCompatibleVersions</S><Obj
      N=\\\"Value\\\" RefId=\\\"3\\\"><TN RefId=\\\"1\\\"><T>System.Version[]</T><T>System.Array</T><T>System.Object</T></TN><LST><Version>1.0</Version><Version>2.0</Version><Version>3.0</Version><Version>4.0</Version></LST></Obj></En><En><S
      N=\\\"Key\\\">BuildVersion</S><Version N=\\\"Value\\\">6.3.9600.17400</Version></En><En><S
      N=\\\"Key\\\">CLRVersion</S><Version N=\\\"Value\\\">4.0.30319.42000</Version></En><En><S
      N=\\\"Key\\\">WSManStackVersion</S><Version N=\\\"Value\\\">3.0</Version></En><En><S
      N=\\\"Key\\\">PSRemotingProtocolVersion</S><Version N=\\\"Value\\\">2.2</Version></En><En><S
      N=\\\"Key\\\">SerializationVersion</S><Version N=\\\"Value\\\">1.1.0.1</Version></En></DCT></Obj></En><En><S
      N=\\\"Key\\\">DebugBreakpointCount</S><I32 N=\\\"Value\\\">0</I32></En></DCT></Obj></MS></Obj>\",
      @destination=1, @type=135177, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n    D      [WinRM]
      Waiting for output...\n    D      [WinRM] Processing output\n    D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x000000034408d8
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><I32 N=\\\"RunspaceState\\\">2</I32></MS></Obj>\",
      @destination=1, @type=135173, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n    D      [WinRM]
      Processing output\n    D      [WinRM] remote shell created with shell_id: 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \   D      [WinRM] polling for pipeline state. message: #<WinRM::PSRP::Message:0x00000003276c50
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><Version N=\\\"protocolversion\\\">2.2</Version><Version
      N=\\\"PSVersion\\\">2.0</Version><Version N=\\\"SerializationVersion\\\">1.1.0.1</Version></MS></Obj>\",
      @destination=1, @type=65538, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n    D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x0000000326b990
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><Obj N=\\\"ApplicationPrivateData\\\"
      RefId=\\\"1\\\"><TN RefId=\\\"0\\\"><T>System.Management.Automation.PSPrimitiveDictionary</T><T>System.Collections.Hashtable</T><T>System.Object</T></TN><DCT><En><S
      N=\\\"Key\\\">DebugMode</S><I32 N=\\\"Value\\\">1</I32></En><En><S N=\\\"Key\\\">DebugStop</S><B
      N=\\\"Value\\\">false</B></En><En><S N=\\\"Key\\\">PSVersionTable</S><Obj N=\\\"Value\\\"
      RefId=\\\"2\\\"><TNRef RefId=\\\"0\\\" /><DCT><En><S N=\\\"Key\\\">PSVersion</S><Version
      N=\\\"Value\\\">2.0</Version></En><En><S N=\\\"Key\\\">PSCompatibleVersions</S><Obj
      N=\\\"Value\\\" RefId=\\\"3\\\"><TN RefId=\\\"1\\\"><T>System.Version[]</T><T>System.Array</T><T>System.Object</T></TN><LST><Version>1.0</Version><Version>2.0</Version><Version>3.0</Version><Version>4.0</Version></LST></Obj></En><En><S
      N=\\\"Key\\\">BuildVersion</S><Version N=\\\"Value\\\">6.3.9600.17400</Version></En><En><S
      N=\\\"Key\\\">CLRVersion</S><Version N=\\\"Value\\\">4.0.30319.42000</Version></En><En><S
      N=\\\"Key\\\">WSManStackVersion</S><Version N=\\\"Value\\\">3.0</Version></En><En><S
      N=\\\"Key\\\">PSRemotingProtocolVersion</S><Version N=\\\"Value\\\">2.2</Version></En><En><S
      N=\\\"Key\\\">SerializationVersion</S><Version N=\\\"Value\\\">1.1.0.1</Version></En></DCT></Obj></En><En><S
      N=\\\"Key\\\">DebugBreakpointCount</S><I32 N=\\\"Value\\\">0</I32></En></DCT></Obj></MS></Obj>\",
      @destination=1, @type=135177, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n    D      [WinRM]
      Waiting for output...\n    D      [WinRM] Processing output\n    D      [WinRM]
      polling for pipeline state. message: #<WinRM::PSRP::Message:0x00000002af92c0
      @data=\"\\xEF\\xBB\\xBF<Obj RefId=\\\"0\\\"><MS><I32 N=\\\"RunspaceState\\\">2</I32></MS></Obj>\",
      @destination=1, @type=135173, @pipeline_id=\"00000000-0000-0000-0000-000000000000\",
      @runspace_pool_id=\"00000000-0000-0000-0000-000000000000\">\n    D      [WinRM]
      remote shell created with shell_id: 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n    D
      \     [WinRM] Command created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n
      \   $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n    $gem
      = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n    $version = \"busser\"\n
      \   $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable -n
      $env:TEMP\\verifier\\bin --no-user-install\"\n    $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \   $plugins = \"busser-serverspec\"\n\n    if ((& \"$ruby\" \"$gem\" list busser
      -i) -ne \"true\") {\n      Write-Host \"-----> Installing Busser ($version)`n\"\n
      \     & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n    } else
      {\n      Write-Host \"-----> Busser installation detected ($version)`n\"\n    }\n\n
      \   if (-Not (Test-Path \"$busser\")) {\n      $gem_bindir = & \"$ruby\" -rrubygems
      -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n      & \"$ruby\" \"$gem_bindir\\busser\"
      setup --type bat 2>&1\n    }\n\n    Write-Host \"       Installing Busser plugins:
      $plugins`n\"\n    & \"$busser\" plugin install $plugins.Split() 2>&1\n     with
      id: FA8D2E64-D97B-4993-9F28-470AA2D8C46C\n    D      [WinRM] creating command_id:
      FA8D2E64-D97B-4993-9F28-470AA2D8C46C on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Command created
      for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n
      \   $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n    $gem
      = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n    $version = \"busser\"\n
      \   $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable -n
      $env:TEMP\\verifier\\bin --no-user-install\"\n    $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \   $plugins = \"busser-serverspec\"\n\n    if ((& \"$ruby\" \"$gem\" list busser
      -i) -ne \"true\") {\n      Write-Host \"-----> Installing Busser ($version)`n\"\n
      \     & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n    } else
      {\n      Write-Host \"-----> Busser installation detected ($version)`n\"\n    }\n\n
      \   if (-Not (Test-Path \"$busser\")) {\n      $gem_bindir = & \"$ruby\" -rrubygems
      -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n      & \"$ruby\" \"$gem_bindir\\busser\"
      setup --type bat 2>&1\n    }\n\n    Write-Host \"       Installing Busser plugins:
      $plugins`n\"\n    & \"$busser\" plugin install $plugins.Split() 2>&1\n     with
      id: 6B664905-EEB3-4D96-A2D3-A5A0E2743A94\n    D      [WinRM] creating command_id:
      6B664905-EEB3-4D96-A2D3-A5A0E2743A94 on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \   D      [WinRM] Waiting for output...\n           Fetching: thor-0.19.0.gem\rFetching:
      thor-0.19.0.gem (  3%)\rFetching: thor-0.19.0.gem (  6%)\rFetching: thor-0.19.0.gem
      (  9%)\rFetching: thor-0.19.0.gem ( 12%)\rFetching: thor-0.19.0.gem ( 15%)\rFetching:
      thor-0.19.0.gem ( 18%)\rFetching: thor-0.19.0.gem ( 21%)\rFetching: thor-0.19.0.gem
      ( 24%)\rFetching: thor-0.19.0.gem ( 27%)\rFetching: thor-0.19.0.gem ( 30%)\rFetching:
      thor-0.19.0.gem ( 33%)\rFetching: thor-0.19.0.gem ( 35%)\rFetching: thor-0.19.0.gem
      ( 53%)\rFetching: thor-0.19.0.gem ( 71%)\rFetching: thor-0.19.0.gem ( 89%)\rFetching:
      thor-0.19.0.gem (100%)\rFetching: thor-0.19.0.gem (100%)\n           Successfully
      installed thor-0.19.0\n           Fetching: busser-0.7.1.gem\rFetching: busser-0.7.1.gem
      ( 64%)\rFetching: busser-0.7.1.gem (100%)\rFetching: busser-0.7.1.gem (100%)\n
      \          Fetching: thor-0.19.0.gem\rFetching: thor-0.19.0.gem (  3%)\rFetching:
      thor-0.19.0.gem (  6%)\rFetching: thor-0.19.0.gem (  9%)\rFetching: thor-0.19.0.gem
      ( 12%)\rFetching: thor-0.19.0.gem ( 15%)\rFetching: thor-0.19.0.gem ( 18%)\rFetching:
      thor-0.19.0.gem ( 21%)\rFetching: thor-0.19.0.gem ( 24%)\rFetching: thor-0.19.0.gem
      ( 27%)\rFetching: thor-0.19.0.gem ( 30%)\rFetching: thor-0.19.0.gem ( 33%)\rFetching:
      thor-0.19.0.gem ( 35%)\rFetching: thor-0.19.0.gem ( 53%)\rFetching: thor-0.19.0.gem
      ( 71%)\rFetching: thor-0.19.0.gem ( 89%)\rFetching: thor-0.19.0.gem (100%)\rFetching:
      thor-0.19.0.gem (100%)\n           Successfully installed busser-0.7.1\n           2
      gems installed\n           Installing Busser plugins: busser-serverspec\n           Successfully
      installed thor-0.19.0\n           Fetching: busser-0.7.1.gem\rFetching: busser-0.7.1.gem
      ( 64%)\rFetching: busser-0.7.1.gem (100%)\rFetching: busser-0.7.1.gem (100%)\n
      \          Successfully installed busser-0.7.1\n           2 gems installed\n
      \          Installing Busser plugins: busser-serverspec\n           Plugin serverspec
      installed (version 0.5.9)\n    -----> Running postinstall for serverspec plugin\n
      \          Plugin serverspec installed (version 0.5.9)\n    -----> Running postinstall
      for serverspec plugin\n    D      [SSH] root@10.194.13.125<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser suite cleanup\n    ')\n           bash:
      warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           sh: warning:
      setlocale: LC_ALL: cannot change locale (C.UTF-8)\n    D      [WinRM] Processing
      output\n    -----> Installing Busser (busser)\n\n    D      [WinRM] Waiting
      for output...\n    D      [SSH] root@10.194.11.41<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser suite cleanup\n    ')\n           bash:
      warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           sh: warning:
      setlocale: LC_ALL: cannot change locale (C.UTF-8)\n    D      [WinRM] Processing
      output\n    -----> Installing Busser (busser)\n\n    D      [WinRM] Waiting
      for output...\n           Suite path directory /tmp/verifier/suites does not
      exist, skipping.\n           Transferring files to <fips-integration-centos-6>\n
      \   D      TIMING: scp async upload (Kitchen::Transport::Ssh)\n    D      TIMING:
      scp async upload (Kitchen::Transport::Ssh) took (0m0.10s)\n    D      Transfer
      complete\n    D      [SSH] root@10.194.13.125<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser test\n    ')\n           bash: warning:
      setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           sh: warning: setlocale:
      LC_ALL: cannot change locale (C.UTF-8)\n           Suite path directory /tmp/verifier/suites
      does not exist, skipping.\n           Transferring files to <fips-unit-functional-centos-6>\n
      \   D      TIMING: scp async upload (Kitchen::Transport::Ssh)\n    D      TIMING:
      scp async upload (Kitchen::Transport::Ssh) took (0m0.10s)\n    D      Transfer
      complete\n    D      [SSH] root@10.194.11.41<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser test\n    ')\n           bash: warning:
      setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           sh: warning: setlocale:
      LC_ALL: cannot change locale (C.UTF-8)\n    -----> Running serverspec test suite\n
      \   -----> Bundle Installing..\n           \\33[1m\\33[32m         run\\33[0m
      \ /opt/chef/embedded/bin/ruby /tmp/verifier/gems/bin/bundle install --gemfile
      /tmp/verifier/suites/serverspec/Gemfile --local || /opt/chef/embedded/bin/ruby
      /tmp/verifier/gems/bin/bundle install --gemfile /tmp/verifier/suites/serverspec/Gemfile
      from \".\"\n           sh: warning: setlocale: LC_ALL: cannot change locale
      (C.UTF-8)\n    -----> Running serverspec test suite\n    -----> Bundle Installing..\n
      \          \\33[1m\\33[32m         run\\33[0m  /opt/chef/embedded/bin/ruby /tmp/verifier/gems/bin/bundle
      install --gemfile /tmp/verifier/suites/serverspec/Gemfile --local || /opt/chef/embedded/bin/ruby
      /tmp/verifier/gems/bin/bundle install --gemfile /tmp/verifier/suites/serverspec/Gemfile
      from \".\"\n           sh: warning: setlocale: LC_ALL: cannot change locale
      (C.UTF-8)\n           sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \          \\33[33mDon't run Bundler as root. Bundler can ask for sudo if it
      is needed, and\n           installing your bundle as root will break this application
      for all non-root\n           users on this machine.\\33[0m\n           sh: warning:
      setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           \\33[31mCould
      not find gem 'mixlib-shellout' in any of the gem sources listed in your\n           Gemfile
      or available on this machine.\\33[0m\n           sh: warning: setlocale: LC_ALL:
      cannot change locale (C.UTF-8)\n           \\33[33mDon't run Bundler as root.
      Bundler can ask for sudo if it is needed, and\n           installing your bundle
      as root will break this application for all non-root\n           users on this
      machine.\\33[0m\n           sh: warning: setlocale: LC_ALL: cannot change locale
      (C.UTF-8)\n           \\33[31mCould not find gem 'mixlib-shellout' in any of
      the gem sources listed in your\n           Gemfile or available on this machine.\\33[0m\n
      \          sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \          \\33[33mDon't run Bundler as root. Bundler can ask for sudo if it
      is needed, and\n           installing your bundle as root will break this application
      for all non-root\n           users on this machine.\\33[0m\n           sh: warning:
      setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           \\33[33mDon't
      run Bundler as root. Bundler can ask for sudo if it is needed, and\n           installing
      your bundle as root will break this application for all non-root\n           users
      on this machine.\\33[0m\n    D      [WinRM] Processing output\n           Successfully
      installed thor-0.19.0\n           Successfully installed busser-0.7.1\n           2
      gems installed\n           Installing Busser plugins: busser-serverspec\n\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \          Successfully installed thor-0.19.0\n           Successfully installed
      busser-0.7.1\n           2 gems installed\n           Installing Busser plugins:
      busser-serverspec\n\n    D      [WinRM] Waiting for output...\n           Fetching
      gem metadata from https://rubygems.org/\n           Fetching version metadata
      from https://rubygems.org/\n           Fetching gem metadata from https://rubygems.org/\n
      \          Resolving dependencies...\n           Fetching version metadata from
      https://rubygems.org/\n           \\33[32mInstalling mixlib-shellout 2.2.6\\33[0m\n
      \          Using bundler 1.12.5\n           \\33[32mBundle complete! 1 Gemfile
      dependency, 2 gems now installed.\\33[0m\n           \\33[32mUse `bundle show
      [gemname]` to see where a bundled gem is installed.\\33[0m\n           Resolving
      dependencies...\n    -----> Installing Serverspec..\n           \\33[32mInstalling
      mixlib-shellout 2.2.6\\33[0m\n           Using bundler 1.12.5\n           \\33[32mBundle
      complete! 1 Gemfile dependency, 2 gems now installed.\\33[0m\n           \\33[32mUse
      `bundle show [gemname]` to see where a bundled gem is installed.\\33[0m\n    ----->
      Installing Serverspec..\n           Fetching: rspec-support-3.5.0.gem\rFetching:
      rspec-support-3.5.0.gem (  7%)\rFetching: rspec-support-3.5.0.gem ( 15%)\rFetching:
      rspec-support-3.5.0.gem ( 23%)\rFetching: rspec-support-3.5.0.gem ( 32%)\rFetching:
      rspec-support-3.5.0.gem ( 40%)\rFetching: rspec-support-3.5.0.gem ( 48%)\rFetching:
      rspec-support-3.5.0.gem ( 56%)\rFetching: rspec-support-3.5.0.gem ( 64%)\rFetching:
      rspec-support-3.5.0.gem ( 72%)\rFetching: rspec-support-3.5.0.gem ( 81%)\rFetching:
      rspec-support-3.5.0.gem ( 89%)\rFetching: rspec-support-3.5.0.gem ( 97%)\rFetching:
      rspec-support-3.5.0.gem (100%)\rFetching: rspec-support-3.5.0.gem (100%)\n    D
      \     [WinRM] Processing output\n           Plugin serverspec installed (version
      0.5.9)\n    -----> Running postinstall for serverspec plugin\n    D      [WinRM]
      Waiting for output...\n           Fetching: rspec-core-3.5.2.gem\rFetching:
      rspec-core-3.5.2.gem (  2%)\rFetching: rspec-core-3.5.2.gem (  4%)\rFetching:
      rspec-core-3.5.2.gem (  5%)\rFetching: rspec-core-3.5.2.gem (  7%)\rFetching:
      rspec-core-3.5.2.gem (  9%)\rFetching: rspec-core-3.5.2.gem ( 11%)\rFetching:
      rspec-core-3.5.2.gem ( 13%)\rFetching: rspec-core-3.5.2.gem ( 14%)\rFetching:
      rspec-core-3.5.2.gem ( 16%)\rFetching: rspec-core-3.5.2.gem ( 18%)\rFetching:
      rspec-core-3.5.2.gem ( 20%)\rFetching: rspec-core-3.5.2.gem ( 22%)\rFetching:
      rspec-core-3.5.2.gem ( 32%)\rFetching: rspec-core-3.5.2.gem ( 43%)\rFetching:
      rspec-core-3.5.2.gem ( 54%)\rFetching: rspec-core-3.5.2.gem ( 65%)\rFetching:
      rspec-core-3.5.2.gem ( 76%)\rFetching: rspec-core-3.5.2.gem ( 87%)\rFetching:
      rspec-core-3.5.2.gem ( 97%)\rFetching: rspec-core-3.5.2.gem (100%)\rFetching:
      rspec-core-3.5.2.gem (100%)\n    D      [WinRM] Processing output\n           Fetching:
      rspec-support-3.5.0.gem\rFetching: rspec-support-3.5.0.gem (  7%)\rFetching:
      rspec-support-3.5.0.gem ( 15%)\rFetching: rspec-support-3.5.0.gem ( 23%)\rFetching:
      rspec-support-3.5.0.gem ( 32%)\rFetching: rspec-support-3.5.0.gem ( 40%)\rFetching:
      rspec-support-3.5.0.gem ( 48%)\rFetching: rspec-support-3.5.0.gem ( 56%)\rFetching:
      rspec-support-3.5.0.gem ( 64%)\rFetching: rspec-support-3.5.0.gem ( 72%)\rFetching:
      rspec-support-3.5.0.gem ( 81%)\rFetching: rspec-support-3.5.0.gem ( 89%)\rFetching:
      rspec-support-3.5.0.gem ( 97%)\rFetching: rspec-support-3.5.0.gem (100%)\rFetching:
      rspec-support-3.5.0.gem (100%)\n    D      [WinRM] cleaning up command_id: FA8D2E64-D97B-4993-9F28-470AA2D8C46C
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n    D      [WinRM] <{:endpoint=>\"http://10.194.10.128:5985/wsman\",
      :user=>\"administrator\", :password=>\"Ema66H=*UM\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"Ema66H=*UM\", :no_ssl_peer_verification=>true,
      :disable_sspi=>false, :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat suite cleanup\n    )\n           Fetching:
      diff-lcs-1.2.5.gem\rFetching: diff-lcs-1.2.5.gem ( 32%)\rFetching: diff-lcs-1.2.5.gem
      ( 66%)\rFetching: diff-lcs-1.2.5.gem ( 99%)\rFetching: diff-lcs-1.2.5.gem (100%)\rFetching:
      diff-lcs-1.2.5.gem (100%)\n    D      [WinRM] Processing output\n           Plugin
      serverspec installed (version 0.5.9)\n    -----> Running postinstall for serverspec
      plugin\n    D      [WinRM] Waiting for output...\n           Fetching: rspec-core-3.5.2.gem\rFetching:
      rspec-core-3.5.2.gem (  2%)\rFetching: rspec-core-3.5.2.gem (  4%)\rFetching:
      rspec-core-3.5.2.gem (  5%)\rFetching: rspec-core-3.5.2.gem (  7%)\rFetching:
      rspec-core-3.5.2.gem (  9%)\rFetching: rspec-core-3.5.2.gem ( 11%)\rFetching:
      rspec-core-3.5.2.gem ( 13%)\rFetching: rspec-core-3.5.2.gem ( 14%)\rFetching:
      rspec-core-3.5.2.gem ( 16%)\rFetching: rspec-core-3.5.2.gem ( 18%)\rFetching:
      rspec-core-3.5.2.gem ( 20%)\rFetching: rspec-core-3.5.2.gem ( 22%)\rFetching:
      rspec-core-3.5.2.gem ( 32%)\rFetching: rspec-core-3.5.2.gem ( 43%)\rFetching:
      rspec-core-3.5.2.gem ( 54%)\rFetching: rspec-core-3.5.2.gem ( 65%)\rFetching:
      rspec-core-3.5.2.gem ( 76%)\rFetching: rspec-core-3.5.2.gem ( 87%)\rFetching:
      rspec-core-3.5.2.gem ( 97%)\rFetching: rspec-core-3.5.2.gem (100%)\rFetching:
      rspec-core-3.5.2.gem (100%)\n           Fetching: rspec-expectations-3.5.0.gem\rFetching:
      rspec-expectations-3.5.0.gem ( 21%)\rFetching: rspec-expectations-3.5.0.gem
      ( 42%)\rFetching: rspec-expectations-3.5.0.gem ( 63%)\rFetching: rspec-expectations-3.5.0.gem
      ( 84%)\rFetching: rspec-expectations-3.5.0.gem (100%)\rFetching: rspec-expectations-3.5.0.gem
      (100%)\n    D      [WinRM] Command created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat suite cleanup\n     with id: 914914DD-3161-4E2D-A8F2-687D8CEFAE8B\n
      \   D      [WinRM] creating command_id: 914914DD-3161-4E2D-A8F2-687D8CEFAE8B
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: 6B664905-EEB3-4D96-A2D3-A5A0E2743A94 on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \          Fetching: rspec-mocks-3.5.0.gem\rFetching: rspec-mocks-3.5.0.gem
      ( 21%)\rFetching: rspec-mocks-3.5.0.gem ( 42%)\rFetching: rspec-mocks-3.5.0.gem
      ( 64%)\rFetching: rspec-mocks-3.5.0.gem ( 85%)\rFetching: rspec-mocks-3.5.0.gem
      (100%)\rFetching: rspec-mocks-3.5.0.gem (100%)\n    D      [WinRM] <{:endpoint=>\"http://10.194.12.192:5985/wsman\",
      :user=>\"administrator\", :password=>\"W$mcC=LD$*\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"W$mcC=LD$*\", :no_ssl_peer_verification=>true,
      :disable_sspi=>false, :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat suite cleanup\n    )\n           Fetching:
      diff-lcs-1.2.5.gem\rFetching: diff-lcs-1.2.5.gem ( 32%)\rFetching: diff-lcs-1.2.5.gem
      ( 66%)\rFetching: diff-lcs-1.2.5.gem ( 99%)\rFetching: diff-lcs-1.2.5.gem (100%)\rFetching:
      diff-lcs-1.2.5.gem (100%)\n           Fetching: rspec-3.5.0.gem\rFetching: rspec-3.5.0.gem
      (100%)\rFetching: rspec-3.5.0.gem (100%)\n    D      [WinRM] Command created
      for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat suite cleanup\n     with id: 1595C65E-4253-46C4-AF34-969810AD8285\n
      \   D      [WinRM] creating command_id: 1595C65E-4253-46C4-AF34-969810AD8285
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n    D      [WinRM] Waiting
      for output...\n           Fetching: rspec-expectations-3.5.0.gem\rFetching:
      rspec-expectations-3.5.0.gem ( 21%)\rFetching: rspec-expectations-3.5.0.gem
      ( 42%)\rFetching: rspec-expectations-3.5.0.gem ( 63%)\rFetching: rspec-expectations-3.5.0.gem
      ( 84%)\rFetching: rspec-expectations-3.5.0.gem (100%)\rFetching: rspec-expectations-3.5.0.gem
      (100%)\n           Fetching: rspec-its-1.2.0.gem\rFetching: rspec-its-1.2.0.gem
      (100%)\rFetching: rspec-its-1.2.0.gem (100%)\n           Fetching: rspec-mocks-3.5.0.gem\rFetching:
      rspec-mocks-3.5.0.gem ( 21%)\rFetching: rspec-mocks-3.5.0.gem ( 42%)\rFetching:
      rspec-mocks-3.5.0.gem ( 64%)\rFetching: rspec-mocks-3.5.0.gem ( 85%)\rFetching:
      rspec-mocks-3.5.0.gem (100%)\rFetching: rspec-mocks-3.5.0.gem (100%)\n           Fetching:
      multi_json-1.12.1.gem\rFetching: multi_json-1.12.1.gem ( 61%)\rFetching: multi_json-1.12.1.gem
      (100%)\rFetching: multi_json-1.12.1.gem (100%)\n           Fetching: rspec-3.5.0.gem\rFetching:
      rspec-3.5.0.gem (100%)\rFetching: rspec-3.5.0.gem (100%)\n           Fetching:
      net-ssh-3.2.0.gem\rFetching: net-ssh-3.2.0.gem (  9%)\rFetching: net-ssh-3.2.0.gem
      ( 18%)\rFetching: net-ssh-3.2.0.gem ( 27%)\rFetching: net-ssh-3.2.0.gem ( 35%)\rFetching:
      net-ssh-3.2.0.gem ( 44%)\rFetching: net-ssh-3.2.0.gem ( 53%)\rFetching: net-ssh-3.2.0.gem
      ( 62%)\rFetching: net-ssh-3.2.0.gem ( 71%)\rFetching: net-ssh-3.2.0.gem ( 80%)\rFetching:
      net-ssh-3.2.0.gem ( 89%)\rFetching: net-ssh-3.2.0.gem ( 97%)\rFetching: net-ssh-3.2.0.gem
      (100%)\rFetching: net-ssh-3.2.0.gem (100%)\n           Fetching: rspec-its-1.2.0.gem\rFetching:
      rspec-its-1.2.0.gem (100%)\rFetching: rspec-its-1.2.0.gem (100%)\n           Fetching:
      multi_json-1.12.1.gem\rFetching: multi_json-1.12.1.gem ( 61%)\rFetching: multi_json-1.12.1.gem
      (100%)\rFetching: multi_json-1.12.1.gem (100%)\n           Fetching: net-scp-1.2.1.gem\rFetching:
      net-scp-1.2.1.gem ( 48%)\rFetching: net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem
      (100%)\rFetching: net-scp-1.2.1.gem (100%)\n           Fetching: net-ssh-3.2.0.gem\rFetching:
      net-ssh-3.2.0.gem (  9%)\rFetching: net-ssh-3.2.0.gem ( 18%)\rFetching: net-ssh-3.2.0.gem
      ( 27%)\rFetching: net-ssh-3.2.0.gem ( 35%)\rFetching: net-ssh-3.2.0.gem ( 44%)\rFetching:
      net-ssh-3.2.0.gem ( 53%)\rFetching: net-ssh-3.2.0.gem ( 62%)\rFetching: net-ssh-3.2.0.gem
      ( 71%)\rFetching: net-ssh-3.2.0.gem ( 80%)\rFetching: net-ssh-3.2.0.gem ( 89%)\rFetching:
      net-ssh-3.2.0.gem ( 97%)\rFetching: net-ssh-3.2.0.gem (100%)\rFetching: net-ssh-3.2.0.gem
      (100%)\n           Fetching: net-telnet-0.1.1.gem\rFetching: net-telnet-0.1.1.gem
      ( 93%)\rFetching: net-telnet-0.1.1.gem (100%)\rFetching: net-telnet-0.1.1.gem
      (100%)\n           Fetching: sfl-2.2.gem\rFetching: sfl-2.2.gem (100%)\rFetching:
      sfl-2.2.gem (100%)\n           Fetching: net-scp-1.2.1.gem\rFetching: net-scp-1.2.1.gem
      ( 48%)\rFetching: net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem (100%)\rFetching:
      net-scp-1.2.1.gem (100%)\n           Fetching: specinfra-2.60.2.gem\rFetching:
      specinfra-2.60.2.gem ( 20%)\rFetching: specinfra-2.60.2.gem ( 40%)\rFetching:
      specinfra-2.60.2.gem ( 61%)\rFetching: specinfra-2.60.2.gem ( 81%)\rFetching:
      specinfra-2.60.2.gem (100%)\rFetching: specinfra-2.60.2.gem (100%)\n           Fetching:
      net-telnet-0.1.1.gem\rFetching: net-telnet-0.1.1.gem ( 93%)\rFetching: net-telnet-0.1.1.gem
      (100%)\rFetching: net-telnet-0.1.1.gem (100%)\n           Fetching: sfl-2.2.gem\rFetching:
      sfl-2.2.gem (100%)\rFetching: sfl-2.2.gem (100%)\n    D      [WinRM] Processing
      output\n           Suite path directory C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites
      does not exist, skipping.\n    D      [WinRM] cleaning up command_id: 914914DD-3161-4E2D-A8F2-687D8CEFAE8B
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n           Fetching: specinfra-2.60.2.gem\rFetching:
      specinfra-2.60.2.gem ( 20%)\rFetching: specinfra-2.60.2.gem ( 40%)\rFetching:
      specinfra-2.60.2.gem ( 61%)\rFetching: specinfra-2.60.2.gem ( 81%)\rFetching:
      specinfra-2.60.2.gem (100%)\rFetching: specinfra-2.60.2.gem (100%)\n           Transferring
      files to <fips-unit-functional-windows-2012r2>\n    D      creating hash for
      directory $env:TEMP\\verifier\n    D      Populating files\n    D      +++ Adding
      serverspec/Gemfile\n    D      +++ Adding serverspec/fips-unit-functional_spec.rb\n
      \   D      === All files added.\n    D      Running check_files.ps1\n           Fetching:
      serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem ( 41%)\rFetching: serverspec-2.36.0.gem
      ( 83%)\rFetching: serverspec-2.36.0.gem (100%)\rFetching: serverspec-2.36.0.gem
      (100%)\n    -----> serverspec installed (version 2.36.0)\n    D      [WinRM]
      Command created for $hash_file = @{\n      \"5d2e53a5614191437bca7afdb9d7591e\"
      = @{\n        \"target\" = \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\";\n
      \       \"src_basename\" = \"suites\";\n        \"dst\" = \"$env:TEMP\\verifier\\suites\"\n
      \     }\n    }\n\n    Function Cleanup($disposable) {\n      if (($disposable
      -ne $null) -and ($disposable.GetType().GetMethod(\"Dispose\") -ne $null)) {\n
      \       $disposable.Dispose()\n      }\n    }\n\n    Function Check-Files($h)
      {\n      return $h.GetEnumerator() | ForEach-Object {\n        $dst = Unresolve-Path
      $_.Value.target\n        $dst_changed = $false\n        if(Test-Path $dst -PathType
      Container) {\n          $dst_changed = $true\n          $dst = Join-Path $dst
      $_.Value.src_basename\n        }\n        New-Object psobject -Property @{\n
      \         chk_exists = ($exists = Test-Path $dst -PathType Leaf)\n          src_md5
      = ($sMd5 = $_.Key)\n          dst_md5 = ($dMd5 = if ($exists) { Get-MD5Sum $dst
      } else { $null })\n          chk_dirty = ($dirty = if ($sMd5 -ne $dMd5) { $true
      } else { $false })\n          verifies = if ($dirty -eq $false) { $true } else
      { $false }\n          target_is_folder = $dst_changed\n        }\n      } |
      Select-Object -Property chk_exists,src_md5,dst_md5,chk_dirty,verifies,target_is_folder\n
      \   }\n\n    Function Get-MD5Sum($src) {\n      Try {\n        $c = [System.Security.Cryptography.MD5]::Create()\n
      \       $bytes = $c.ComputeHash(($in = (Get-Item $src).OpenRead()))\n        return
      ([System.BitConverter]::ToString($bytes)).Replace(\"-\", \"\").ToLower()\n      }\n
      \     Finally {\n        Cleanup $c\n        Cleanup $in\n      }\n    }\n\n
      \   Function Unresolve-Path($path) {\n      if ($path -eq $null) {\n        return
      $null\n      }\n      else {\n        return $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($path)\n
      \     }\n    }\n\n    Check-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \    with id: 6562BC44-E608-4AD5-8D26-A7905A21A27D\n    D      [WinRM] creating
      command_id: 6562BC44-E608-4AD5-8D26-A7905A21A27D on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \   D      [WinRM] Waiting for output...\n           /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n             from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n             from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n           !!!!!! Ruby Script [/tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      /tmp/verifier/suites/serverspec] exit code was 1\n    D      [WinRM] Processing
      output\n    D      [WinRM] cleaning up command_id: 6562BC44-E608-4AD5-8D26-A7905A21A27D
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n    D      Cleaning up local
      sandbox in /tmp/cheftest/fips-integration-centos-6-sandbox-20160803-2928-63hwd2\n
      \          Fetching: serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem
      ( 41%)\rFetching: serverspec-2.36.0.gem ( 83%)\rFetching: serverspec-2.36.0.gem
      (100%)\rFetching: serverspec-2.36.0.gem (100%)\n    D      Parsing CSV Response\n
      \   D      \"chk_exists\",\"src_md5\",\"dst_md5\",\"chk_dirty\",\"verifies\",\"target_is_folder\"\n
      \   \"False\",\"5d2e53a5614191437bca7afdb9d7591e\",,\"True\",\"False\",\"False\"\n\n
      \   D      Uploading /tmp/cheftest/tmpzip-20160803-2928-gfo3zy.zip to $env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\n
      \   D      [WinRM] Processing output\n           Suite path directory C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites
      does not exist, skipping.\n    D      [WinRM] cleaning up command_id: 1595C65E-4253-46C4-AF34-969810AD8285
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n           Transferring files
      to <fips-integration-windows-2012r2>\n    D      creating hash for directory
      $env:TEMP\\verifier\n    D      Populating files\n    D      +++ Adding serverspec/Gemfile\n
      \   D      +++ Adding serverspec/fips-integration_spec.rb\n    D      === All
      files added.\n    D      Running check_files.ps1\n    -----> serverspec installed
      (version 2.36.0)\n    D      [WinRM] Command created for             $parent
      = Split-Path \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\"\n
      \               if(!(Test-path $parent)) { mkdir $parent | Out-Null}\n                $fileStream
      = New-Object -TypeName System.IO.FileStream -ArgumentList @(\n                    \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\",\n
      \                   [system.io.filemode]::Create,\n                    [System.io.FileAccess]::Write,\n
      \                   [System.IO.FileShare]::ReadWrite\n                )\n     with
      id: 02BE053B-9C8E-425C-86FF-B8455902EA90\n    D      [WinRM] creating command_id:
      02BE053B-9C8E-425C-86FF-B8455902EA90 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \          /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n             from /opt/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n             from /tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n           !!!!!! Ruby Script [/tmp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      /tmp/verifier/suites/serverspec] exit code was 1\n    D      [WinRM] cleaning
      up command_id: 02BE053B-9C8E-425C-86FF-B8455902EA90 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \   D      Cleaning up local sandbox in /tmp/cheftest/fips-unit-functional-centos-6-sandbox-20160803-2928-epcr8m\n
      \   D      [WinRM] Command created for $hash_file = @{\n      \"a58c3771533a6479cf23bf871167f7d9\"
      = @{\n        \"target\" = \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\";\n
      \       \"src_basename\" = \"suites\";\n        \"dst\" = \"$env:TEMP\\verifier\\suites\"\n
      \     }\n    }\n\n    Function Cleanup($disposable) {\n      if (($disposable
      -ne $null) -and ($disposable.GetType().GetMethod(\"Dispose\") -ne $null)) {\n
      \       $disposable.Dispose()\n      }\n    }\n\n    Function Check-Files($h)
      {\n      return $h.GetEnumerator() | ForEach-Object {\n        $dst = Unresolve-Path
      $_.Value.target\n        $dst_changed = $false\n        if(Test-Path $dst -PathType
      Container) {\n          $dst_changed = $true\n          $dst = Join-Path $dst
      $_.Value.src_basename\n        }\n        New-Object psobject -Property @{\n
      \         chk_exists = ($exists = Test-Path $dst -PathType Leaf)\n          src_md5
      = ($sMd5 = $_.Key)\n          dst_md5 = ($dMd5 = if ($exists) { Get-MD5Sum $dst
      } else { $null })\n          chk_dirty = ($dirty = if ($sMd5 -ne $dMd5) { $true
      } else { $false })\n          verifies = if ($dirty -eq $false) { $true } else
      { $false }\n          target_is_folder = $dst_changed\n        }\n      } |
      Select-Object -Property chk_exists,src_md5,dst_md5,chk_dirty,verifies,target_is_folder\n
      \   }\n\n    Function Get-MD5Sum($src) {\n      Try {\n        $c = [System.Security.Cryptography.MD5]::Create()\n
      \       $bytes = $c.ComputeHash(($in = (Get-Item $src).OpenRead()))\n        return
      ([System.BitConverter]::ToString($bytes)).Replace(\"-\", \"\").ToLower()\n      }\n
      \     Finally {\n        Cleanup $c\n        Cleanup $in\n      }\n    }\n\n
      \   Function Unresolve-Path($path) {\n      if ($path -eq $null) {\n        return
      $null\n      }\n      else {\n        return $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($path)\n
      \     }\n    }\n\n    Check-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \    with id: B7CFF501-4C28-4588-82FF-5A45BBC1CDBF\n    D      [WinRM] creating
      command_id: B7CFF501-4C28-4588-82FF-5A45BBC1CDBF on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: B7CFF501-4C28-4588-82FF-5A45BBC1CDBF
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n    D      Parsing CSV Response\n
      \   D      \"chk_exists\",\"src_md5\",\"dst_md5\",\"chk_dirty\",\"verifies\",\"target_is_folder\"\n
      \   \"False\",\"a58c3771533a6479cf23bf871167f7d9\",,\"True\",\"False\",\"False\"\n\n
      \   D      Uploading /tmp/cheftest/tmpzip-20160803-2928-7rezov.zip to $env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\n
      \   D      [WinRM] Command created for             $bytes=[Convert]::FromBase64String('UEsDBBQAAAAIAAAAISiSc1XqNQAAADUAAAASAAAAc2VydmVyc3BlYy9HZW1maWxlK84vLUpOVVDKKCkpKLbS1y8qTapMT80t1ssvSlfi4gIyFZRyMytyMpN0izNSc3LyS0uUuABQSwMEFAAAAAgAAAAhKJ91Hlo+AgAArgQAACcAAABzZXJ2ZXJzcGVjL2ZpcHMtdW5pdC1mdW5jdGlvbmFsX3NwZWMucmKNVN9v2jAQfuevuLkvIFHSadIeInUTZQlFKgRBO2mrKgvso3hKbGY7TaX++NtnJyShVJv2crHvPt/3+XwXjb9zoRFIJh5TsQ7MFtNU5ZZ0dB1Z55KnqEmnw9EwLdbON9riBmKxM3AjhQ3iXDIrlFylsNwhMwS46gBwByqE5KowX90WQGxgcXPxg86vhtdxspjC+SsEmXGY50zI++J5jw5KNIDVOZZLTA3ufZtVvUbJO5V1nxRtN1SZFOvcUK2U7VUaStI3IgAICwO1M0xxDJi7CTnmIC5sD0PvmFA+NARP9an58PqSwPkXuAVy8nQo5iXAbI2cIw/WQpI+RLPvtxX+Du4Gv5SQ3VikGIbeR5fRfLgYXieLXr/OfXEz+3YV0XE0jSdXUcnyjmOM2cYlIc0hh6aNKCnSfuUaDUeX0ZHvMpm2riPSyXiWLCI6SmbxZFxR+5chx7h4kfyMZhXgYxt1ZDGNJ/NlHSkDL0cV9dWmXOimrCzjcA7Tsi/DcOkbM8ntQGLR3fckmK0qoHymvsv1EHrTG+hcUqaybFW+WplogFor/aHZGstdkw/YVmW7VofvV39YG9fE1KKxXW965bGLagwGhbBbylJcSerYarH/lLtHQD1LgI/IoGSB041LwfIMpV35EYJTC6/72TP0Xlg4efIiXpp6QnPVPrCCh1BXrg9WZOjuFcKnz2dne3iv1XdYmcOKvGlvx0h2K2PQgN0i5G6+wRwMNRyXiPhl4HGk99c0m/YP8R/JWnSb0ps/UEsBAjQDFAAAAAgAAAAhKJJzVeo1AAAANQAAABIAAAAAAAAAAQAAAKSBAAAAAHNlcnZlcnNwZWMvR2VtZmlsZVBLAQI0AxQAAAAIAAAAISifdR5aPgIAAK4EAAAnAAAAAAAAAAEAAACkgWUAAABzZXJ2ZXJzcGVjL2ZpcHMtdW5pdC1mdW5jdGlvbmFsX3NwZWMucmJQSwUGAAAAAAIAAgCVAAAA6AIAAAAA')\n
      \               $fileStream.Write($bytes, 0, $bytes.length)\n     with id: BE045077-950F-4E06-BEE1-753F2AC61570\n
      \   D      [WinRM] creating command_id: BE045077-950F-4E06-BEE1-753F2AC61570
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: BE045077-950F-4E06-BEE1-753F2AC61570 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \   D      [WinRM] Command created for             $parent = Split-Path \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\"\n
      \               if(!(Test-path $parent)) { mkdir $parent | Out-Null}\n                $fileStream
      = New-Object -TypeName System.IO.FileStream -ArgumentList @(\n                    \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\",\n
      \                   [system.io.filemode]::Create,\n                    [System.io.FileAccess]::Write,\n
      \                   [System.IO.FileShare]::ReadWrite\n                )\n     with
      id: 85FD4046-02D3-4407-A2CB-DE369AEC6BA3\n    D      [WinRM] creating command_id:
      85FD4046-02D3-4407-A2CB-DE369AEC6BA3 on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: 85FD4046-02D3-4407-A2CB-DE369AEC6BA3
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n    D      [WinRM] Command
      created for $fileStream.Dispose() with id: 223585D9-63D2-47BF-96C2-47037C2444FE\n
      \   D      [WinRM] creating command_id: 223585D9-63D2-47BF-96C2-47037C2444FE
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: 223585D9-63D2-47BF-96C2-47037C2444FE on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \   D      Finished uploading /tmp/cheftest/tmpzip-20160803-2928-gfo3zy.zip
      to $env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip (1.22
      KB over 1 chunks) in (0m0.55s)\n    D      Running extract_files.ps1\n    D
      \     [WinRM] Command created for             $bytes=[Convert]::FromBase64String('UEsDBBQAAAAIAAAAISiSc1XqNQAAADUAAAASAAAAc2VydmVyc3BlYy9HZW1maWxlK84vLUpOVVDKKCkpKLbS1y8qTapMT80t1ssvSlfi4gIyFZRyMytyMpN0izNSc3LyS0uUuABQSwMEFAAAAAgAAAAhKP2tKFc0AgAAbgQAACMAAABzZXJ2ZXJzcGVjL2ZpcHMtaW50ZWdyYXRpb25fc3BlYy5yYn1TbW/aMBD+zq+4uV9AoqTTpH2IxCbKEkACgoBO2qrKIvFRvCU2s52mUl9+e51XUirtQxz77rl7Hp/vFP5LuUIgCX+MeejoA8axTA3pqNoTpoLFqEinw1BHiofWNj7gHnx+1DATBu/VznApYHPESBNgsgPALCDjgslMf7dHAL6H9c31L7qaj7Z+sF7A8BWcRFvMc8LFffZcoZ0CDWBUisUWY42Vbb+r9yhYp1ztL0bTdWUieJhqqqQ0vVJDQfpOBACJXEcedSQZOpG9BTnnINZt2q4PTCgeGoKnOmo12k4JDL/BLZCLp7aYFweTEBlD5oRckD54y5+3Jf4O7gZ/JBddn8fourmNbrzVaD3aButev859fbP8MffoxFv4s7lXsHzgmGCyt0lIE2TRtBEleNwvTePReOqd2abB4mQ6I51NlsHao+Ng6c8mJXX+MuQc56+D396yBHw+eS2ZT/3ZalN7CsfLWUXzalPGVVPWKGEwhEXRk667yZsySM1AYNat+hH0QWZQPFPf5npw86U3UKmgkUySXfFqRaIBKiXVp+aoDbMNPogOMjmedOT9mgcrbZuYGtSmmy+9Iuy6HIFBxs2BRjHuBLVstdj/yq0QUM8R4CNGULDA5d6miNIEhSkH6NLAazV3mt5zAxdPuYiXpp7QXLUPUcZcqCvXB8MTtPdy4cvXq6sK3jvpa1emXZF37W0ZyXGnNWowBwTemm3dmm0A/Zcfi83FWc1IvnVagaRXpc+/N1BLAQI0AxQAAAAIAAAAISiSc1XqNQAAADUAAAASAAAAAAAAAAEAAACkgQAAAABzZXJ2ZXJzcGVjL0dlbWZpbGVQSwECNAMUAAAACAAAACEo/a0oVzQCAABuBAAAIwAAAAAAAAABAAAApIFlAAAAc2VydmVyc3BlYy9maXBzLWludGVncmF0aW9uX3NwZWMucmJQSwUGAAAAAAIAAgCRAAAA2gIAAAAA')\n
      \               $fileStream.Write($bytes, 0, $bytes.length)\n     with id: 5EF6900F-D6F9-42F0-8996-0627DC98EB43\n
      \   D      [WinRM] creating command_id: 5EF6900F-D6F9-42F0-8996-0627DC98EB43
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    D      [WinRM] cleaning
      up command_id: 5EF6900F-D6F9-42F0-8996-0627DC98EB43 on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \   D      [WinRM] Command created for trap {\n      $e = $_.Exception\n      $e.InvocationInfo.ScriptName\n
      \     do {\n        $e.Message\n        $e = $e.InnerException\n      } while
      ($e)\n      break\n    }\n\n    function folder($path){\n      $path | ? {-not
      (test-path $_)} | % {$null = mkdir $_}\n    }\n\n    Function Decode-Files($hash)
      {\n      foreach ($key in $hash.keys) {\n        $value = $hash[$key]\n        $tzip,
      $dst = $Value[\"tmpzip\"], $Value[\"dst\"]\n        if ($tzip) {Unzip-File $tzip
      $dst}\n        New-Object psobject -Property @{dst=$dst;src_md5=$key;tmpzip=$tzip}\n
      \     }\n    }\n\n    Function Unzip-File($src, $dst) {\n      $unpack = $src
      -replace '\\.zip'\n      $dst_parent = Split-Path -Path $dst -Parent\n      if(!(Test-Path
      $dst_parent)) { $dst = $dst_parent }\n      folder $unpack, $dst\n      try
      {\n        try{\n          [IO.Compression.ZipFile]::ExtractToDirectory($src,
      $unpack)\n        }\n        catch {\n          Add-Type -AssemblyName System.IO.Compression.FileSystem
      -ErrorAction Stop\n          [IO.Compression.ZipFile]::ExtractToDirectory($src,
      $unpack)\n        }\n      }\n      catch {\n        Try {\n          $s = New-Object
      -ComObject Shell.Application\n          ($s.NameSpace($unpack)).CopyHere(($s.NameSpace($src)).Items(),
      0x610)\n        }\n        Finally {\n          [void][Runtime.Interopservices.Marshal]::ReleaseComObject($s)\n
      \       }\n      }\n      dir $unpack | cp -dest \"$dst/\" -force -recurse\n
      \     rm $unpack -recurse -force\n    }\n\n    $hash_file = @{\n      \"5d2e53a5614191437bca7afdb9d7591e\"
      = @{\n        \"dst\" = \"$env:TEMP\\verifier\\suites\";\n        \"tmpzip\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\"\n
      \     }\n    }\n    Decode-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \    with id: A19F9A97-63AE-404D-AD18-4065AB5A8472\n    D      [WinRM] creating
      command_id: A19F9A97-63AE-404D-AD18-4065AB5A8472 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Command created
      for $fileStream.Dispose() with id: 823270D7-62C6-4821-BD16-1CBF4ADC8F3B\n    D
      \     [WinRM] creating command_id: 823270D7-62C6-4821-BD16-1CBF4ADC8F3B on shell_id
      8030D0C9-8AD7-4D35-86B5-02317B679ACC\n    D      [WinRM] Waiting for output...\n
      \   D      [WinRM] Processing output\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: 823270D7-62C6-4821-BD16-1CBF4ADC8F3B
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n    D      [WinRM] cleaning
      up command_id: A19F9A97-63AE-404D-AD18-4065AB5A8472 on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n
      \   D      Finished uploading /tmp/cheftest/tmpzip-20160803-2928-7rezov.zip
      to $env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip (1.196
      KB over 1 chunks) in (0m0.58s)\n    D      Running extract_files.ps1\n    D
      \     Parsing CSV Response\n    D      \"src_md5\",\"tmpzip\",\"dst\"\n    \"5d2e53a5614191437bca7afdb9d7591e\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\verifier\\suites\"\n\n
      \   D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160803-2928-gfo3zy.zip\n
      \   D      Uploaded 1 items dirty_check: (0m0.22s) stream_files: (0m0.55s) extract:
      (0m0.32s)\n    D      Transfer complete\n    D      [WinRM] <{:endpoint=>\"http://10.194.10.128:5985/wsman\",
      :user=>\"administrator\", :password=>\"Ema66H=*UM\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"Ema66H=*UM\", :no_ssl_peer_verification=>true,
      :disable_sspi=>false, :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat test\n    )\n    D      [WinRM] Command
      created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat test\n     with id: 8FE70064-671D-4C7F-9D5B-DBC92D578A00\n
      \   D      [WinRM] creating command_id: 8FE70064-671D-4C7F-9D5B-DBC92D578A00
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Command created for trap {\n      $e = $_.Exception\n
      \     $e.InvocationInfo.ScriptName\n      do {\n        $e.Message\n        $e
      = $e.InnerException\n      } while ($e)\n      break\n    }\n\n    function
      folder($path){\n      $path | ? {-not (test-path $_)} | % {$null = mkdir $_}\n
      \   }\n\n    Function Decode-Files($hash) {\n      foreach ($key in $hash.keys)
      {\n        $value = $hash[$key]\n        $tzip, $dst = $Value[\"tmpzip\"], $Value[\"dst\"]\n
      \       if ($tzip) {Unzip-File $tzip $dst}\n        New-Object psobject -Property
      @{dst=$dst;src_md5=$key;tmpzip=$tzip}\n      }\n    }\n\n    Function Unzip-File($src,
      $dst) {\n      $unpack = $src -replace '\\.zip'\n      $dst_parent = Split-Path
      -Path $dst -Parent\n      if(!(Test-Path $dst_parent)) { $dst = $dst_parent
      }\n      folder $unpack, $dst\n      try {\n        try{\n          [IO.Compression.ZipFile]::ExtractToDirectory($src,
      $unpack)\n        }\n        catch {\n          Add-Type -AssemblyName System.IO.Compression.FileSystem
      -ErrorAction Stop\n          [IO.Compression.ZipFile]::ExtractToDirectory($src,
      $unpack)\n        }\n      }\n      catch {\n        Try {\n          $s = New-Object
      -ComObject Shell.Application\n          ($s.NameSpace($unpack)).CopyHere(($s.NameSpace($src)).Items(),
      0x610)\n        }\n        Finally {\n          [void][Runtime.Interopservices.Marshal]::ReleaseComObject($s)\n
      \       }\n      }\n      dir $unpack | cp -dest \"$dst/\" -force -recurse\n
      \     rm $unpack -recurse -force\n    }\n\n    $hash_file = @{\n      \"a58c3771533a6479cf23bf871167f7d9\"
      = @{\n        \"dst\" = \"$env:TEMP\\verifier\\suites\";\n        \"tmpzip\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\"\n
      \     }\n    }\n    Decode-Files $hash_file | ConvertTo-Csv -NoTypeInformation\n
      \    with id: E28AA391-C6A6-4918-B9CE-FDDECB62D7E0\n    D      [WinRM] creating
      command_id: E28AA391-C6A6-4918-B9CE-FDDECB62D7E0 on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \   D      [WinRM] cleaning up command_id: E28AA391-C6A6-4918-B9CE-FDDECB62D7E0
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n    D      Parsing CSV Response\n
      \   D      \"src_md5\",\"tmpzip\",\"dst\"\n    \"a58c3771533a6479cf23bf871167f7d9\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\verifier\\suites\"\n\n
      \   D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160803-2928-7rezov.zip\n
      \   D      Uploaded 1 items dirty_check: (0m0.21s) stream_files: (0m0.58s) extract:
      (0m0.30s)\n    D      Transfer complete\n    D      [WinRM] <{:endpoint=>\"http://10.194.12.192:5985/wsman\",
      :user=>\"administrator\", :password=>\"W$mcC=LD$*\", :transport=>:negotiate,
      :elevated_username=>\"administrator\", :elevated_password=>\"W$mcC=LD$*\", :no_ssl_peer_verification=>true,
      :disable_sspi=>false, :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat test\n    )\n    D      [WinRM] Command
      created for $env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat test\n     with id: 7CF45DFA-7F46-4DFC-A8A6-ED9AFD7EA49A\n
      \   D      [WinRM] creating command_id: 7CF45DFA-7F46-4DFC-A8A6-ED9AFD7EA49A
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n    D      [WinRM] Waiting
      for output...\n    D      [WinRM] Processing output\n    -----> Running serverspec
      test suite\n    -----> Bundle Installing..\n             run  C:/opscode/chef/embedded/bin/ruby
      C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle install --gemfile
      C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile --local
      || C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      from \".\"\n    D      [WinRM] Waiting for output...\n    D      [WinRM] Processing
      output\n    -----> Running serverspec test suite\n    -----> Bundle Installing..\n
      \            run  C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      --local || C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      from \".\"\n    D      [WinRM] Waiting for output...\n    D      [WinRM] Processing
      output\n           Could not find gem 'mixlib-shellout x64-mingw32' in any of
      the gem sources\n           listed in your Gemfile or available on this machine.\n
      \   D      [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \          Could not find gem 'mixlib-shellout x64-mingw32' in any of the gem
      sources\n           listed in your Gemfile or available on this machine.\n    D
      \     [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \          Fetching gem metadata from https://rubygems.org/\n           Fetching
      version metadata from https://rubygems.org/\n           Resolving dependencies...\n
      \          Installing ffi 1.9.14\n    D      [WinRM] Waiting for output...\n
      \   D      [WinRM] Processing output\n           Fetching gem metadata from
      https://rubygems.org/\n           Fetching version metadata from https://rubygems.org/\n
      \          Resolving dependencies...\n           Installing ffi 1.9.14\n    D
      \     [WinRM] Waiting for output...\n    D      [WinRM] Processing output\n
      \          Installing wmi-lite 1.0.0\n           Using bundler 1.12.5\n           Installing
      win32-process 0.8.3\n           Installing mixlib-shellout 2.2.6\n           Bundle
      complete! 1 Gemfile dependency, 5 gems now installed.\n           Use `bundle
      show [gemname]` to see where a bundled gem is installed.\n    -----> Installing
      Serverspec..\n    D      [WinRM] Waiting for output...\n    D      [WinRM] Processing
      output\n           Installing wmi-lite 1.0.0\n           Using bundler 1.12.5\n
      \          Installing win32-process 0.8.3\n           Installing mixlib-shellout
      2.2.6\n           Bundle complete! 1 Gemfile dependency, 5 gems now installed.\n
      \          Use `bundle show [gemname]` to see where a bundled gem is installed.\n
      \   -----> Installing Serverspec..\n    D      [WinRM] Waiting for output...\n
      \   D      [WinRM] Processing output\n    -----> serverspec installed (version
      2.36.0)\n    D      [WinRM] cleaning up command_id: 8FE70064-671D-4C7F-9D5B-DBC92D578A00
      on shell_id 7FC91171-0B6B-47C0-9357-9D4312E79F05\n    $$$$$$ busser.bat : C:/opscode/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n        + CategoryInfo
      \         : NotSpecified: (C:/opscode/chef...ake (LoadError):String) [], RemoteException\n
      \       + FullyQualifiedErrorId : NativeCommandError\n      from C:/opscode/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n    $$$$$$   from C:/Users/Administrator/AppData/Local/Temp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n    $$$$$$ !!!!!! Ruby Script [C:/Users/Administrator/AppData/Local/Temp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec] exit code was
      1\n    D      Cleaning up local sandbox in /tmp/cheftest/fips-unit-functional-windows-2012r2-sandbox-20160803-2928-1o688oq\n
      \          Finished verifying <fips-unit-functional-windows-2012r2> (0m23.15s).\n
      \   D      [WinRM] Processing output\n    -----> serverspec installed (version
      2.36.0)\n    D      [WinRM] cleaning up command_id: 7CF45DFA-7F46-4DFC-A8A6-ED9AFD7EA49A
      on shell_id 8030D0C9-8AD7-4D35-86B5-02317B679ACC\n    $$$$$$ busser.bat : C:/opscode/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require': cannot load such file -- rake (LoadError)\n        + CategoryInfo
      \         : NotSpecified: (C:/opscode/chef...ake (LoadError):String) [], RemoteException\n
      \       + FullyQualifiedErrorId : NativeCommandError\n      from C:/opscode/chef/embedded/lib/ruby/site_ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in
      `require'\n    $$$$$$   from C:/Users/Administrator/AppData/Local/Temp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb:20:in
      `<main>'\n    $$$$$$ !!!!!! Ruby Script [C:/Users/Administrator/AppData/Local/Temp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec] exit code was
      1\n    D      Cleaning up local sandbox in /tmp/cheftest/fips-integration-windows-2012r2-sandbox-20160803-2928-937n9s\n
      \          Finished verifying <fips-integration-windows-2012r2> (0m23.88s).\n
      \   D      ------Exception-------\n    D      Class: Kitchen::ActionFailed\n
      \   D      Message: 2 actions failed.\n    >>>>>>     Verify failed on instance
      <fips-integration-centos-6>.  Please see .kitchen/logs/fips-integration-centos-6.log
      for more details\n    >>>>>>     Verify failed on instance <fips-unit-functional-centos-6>.
      \ Please see .kitchen/logs/fips-unit-functional-centos-6.log for more details\n
      \   D      ----------------------\n    D      ------Backtrace-------\n    D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:187:in
      `report_errors'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:178:in
      `run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:39:in
      `block in call'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command/action.rb:37:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:56:in
      `perform'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:184:in
      `block (2 levels) in <class:CLI>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/command.rb:27:in
      `run'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/invocation.rb:126:in
      `invoke_command'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/cli.rb:325:in
      `invoke_task'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor.rb:359:in
      `dispatch'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/thor-0.19.1/lib/thor/base.rb:440:in
      `start'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `block in <top (required)>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/errors.rb:174:in
      `with_friendly_errors'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/bin/kitchen:13:in
      `<top (required)>'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `load'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bin/kitchen:22:in
      `<top (required)>'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `load'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:63:in
      `kernel_load'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli/exec.rb:24:in
      `run'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:304:in
      `exec'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/command.rb:27:in
      `run'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in
      `invoke_command'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor.rb:359:in
      `dispatch'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/vendor/thor/lib/thor/base.rb:440:in
      `start'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/cli.rb:11:in
      `start'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:27:in
      `block in <top (required)>'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler/friendly_errors.rb:98:in
      `with_friendly_errors'\n    D      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/exe/bundle:19:in
      `<top (required)>'\n    D      /opt/chefdk/embedded/bin/bundle:22:in `load'\n
      \   D      /opt/chefdk/embedded/bin/bundle:22:in `<main>'\n    D      ----End
      Backtrace-----\n    D      -Composite Exception--\n    D      Class: Kitchen::InstanceFailure\n
      \   D      Message: Verify failed on instance <fips-integration-centos-6>.  Please
      see .kitchen/logs/fips-integration-centos-6.log for more details\n    D      ----------------------\n
      \   D      ------Backtrace-------\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n    D      ----End Backtrace-----\n
      \   D      ---Nested Exception---\n    D      Class: Kitchen::ActionFailed\n
      \   D      Message: SSH exited (1) for command: [sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser test\n    ']\n    D      ----------------------\n
      \   D      ------Backtrace-------\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n    D      ----End Backtrace-----\n
      \   D      -Composite Exception--\n    D      Class: Kitchen::InstanceFailure\n
      \   D      Message: Verify failed on instance <fips-unit-functional-centos-6>.
      \ Please see .kitchen/logs/fips-unit-functional-centos-6.log for more details\n
      \   D      ----------------------\n    D      ------Backtrace-------\n    D
      \     /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n    D      ----End Backtrace-----\n
      \   D      ---Nested Exception---\n    D      Class: Kitchen::ActionFailed\n
      \   D      Message: SSH exited (1) for command: [sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser test\n    ']\n    D      ----------------------\n
      \   D      ------Backtrace-------\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/verifier/base.rb:86:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:415:in
      `verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/instance.rb:160:in
      `verify'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:201:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/test-kitchen-06d7c0168ed6/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n    D      ----End Backtrace-----\n
      \   STDERR: >>>>>> ------Exception-------\n    >>>>>> Class: Kitchen::ActionFailed\n
      \   >>>>>> Message: 2 actions failed.\n    >>>>>>     Verify failed on instance
      <fips-integration-centos-6>.  Please see .kitchen/logs/fips-integration-centos-6.log
      for more details\n    >>>>>>     Verify failed on instance <fips-unit-functional-centos-6>.
      \ Please see .kitchen/logs/fips-unit-functional-centos-6.log for more details\n
      \   >>>>>> ----------------------\n    >>>>>> Please see .kitchen/logs/kitchen.log
      for more details\n    >>>>>> Also try running `kitchen diagnose --all` for configuration\n
      \   ---- End output of bundle exec kitchen verify  -c -l debug ----\n    Ran
      bundle exec kitchen verify  -c -l debug returned 20\n\n    Cookbook Trace:\n
      \   ---------------\n    /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:55:in
      `block (3 levels) in <class:Kitchen>'\n\n    Resource Declaration:\n    ---------------------\n
      \   # In /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/acceptance-cookbook/recipes/verify.rb\n\n
      \     1: kitchen \"verify\"\n\n    Compiled Resource:\n    ------------------\n
      \   # Declared in /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/acceptance-cookbook/recipes/verify.rb:1:in
      `from_file'\n\n    kitchen(\"verify\") do\n      action [:run]\n      retries
      0\n      retry_delay 2\n      default_guard_interpreter :default\n      declared_type
      :kitchen\n      cookbook_name \"acceptance-cookbook\"\n      recipe_name \"verify\"\n
      \     chef_product \"chef\"\n      kitchen_dir \"/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/fips\"\n
      \     command \"verify\"\n      kitchen_options \"-c -l debug\"\n    end\n\n
      \   Platform:\n    ---------\n    x86_64-linux\n\nStarting audit phase\n"
    47027: |2

      Running handlers:
      [2016-08-03T02:06:33+00:00] ERROR: Running exception handlers
      Running handlers complete
      [2016-08-03T02:06:33+00:00] ERROR: Exception handlers complete
      Chef Client failed. 0 resources updated in 30 seconds
      [2016-08-03T02:06:33+00:00] ERROR: Failed to post audit report to server. Saving report to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/failed-audit-data.json
      [2016-08-03T02:06:33+00:00] FATAL: Stacktrace dumped to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/chef-stacktrace.out
      [2016-08-03T02:06:33+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
      [2016-08-03T02:06:33+00:00] ERROR: Found 1 errors, they are stored in the backtrace
      [2016-08-03T02:06:34+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
      STDERR:
      ---- End output of chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/dna.json -o acceptance-cookbook::verify --no-color ----
      Ran chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/dna.json -o acceptance-cookbook::verify --no-color returned 1
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:289:in `invalid!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:276:in `error!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/chef_runner.rb:53:in `block in run!'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:237:in `block in with_clean_env'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:447:in `with_env'
      /opt/chefdk/embedded/lib/ruby/gems/2.1.0/gems/bundler-1.12.5/lib/bundler.rb:237:in `with_clean_env'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/chef_runner.rb:42:in `run!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:149:in `run_command'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:116:in `block in run_suite'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:114:in `each'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:114:in `run_suite'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:76:in `block (2 levels) in start_worker'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:74:in `loop'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:74:in `block in start_worker'
      CHEF-ACCEPTANCE::[2016-08-03 02:06:35 +0000] --force-destroy specified so attempting to run the destroy recipe
      FIPS::DESTROY::[2016-08-03 02:06:35 +0000] Initialized [/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/logs/fips/destroy.log] logger...
    47147: |
      CHEF-ACCEPTANCE::[2016-08-03 02:06:45 +0000] | fips            | Total         | 00:07:15 | Y     |
      CHEF-ACCEPTANCE::[2016-08-03 02:06:45 +0000] | Run             | Total         | 00:08:17 | Y     |
      Build step 'Invoke XShell command' marked build as failure
      Archiving artifacts
      Recording fingerprints
steps:
  total: 9m56s
  before (setup time): 1m39s
  CHEF-ACCEPTANCE:
    total: 8m17s
    OMNITRUCK::PROVISION: 17s
    TRIVIAL::PROVISION: 1m20s
    TOP-COOKBOOKS::PROVISION: 6m21s
    OMNITRUCK::VERIFY: 17s
    FIPS::PROVISION: 6m30s
    TRIVIAL::VERIFY: 24s
    TRIVIAL::DESTROY: 10s
    BASICS::PROVISION: 59s
    BASICS::VERIFY: 24s
    BASICS::DESTROY: 10s
    DATA-COLLECTOR::PROVISION: 1m19s
    DATA-COLLECTOR::VERIFY: 21s
    DATA-COLLECTOR::DESTROY: 23s
    TOP-COOKBOOKS::DESTROY: 1m8s
    FIPS::VERIFY: 35s
    FIPS::DESTROY: 10s
chef_acceptance_timing:
- omnitruck:
    provision: 10s
    verify: 11s
    destroy: 4s
    Total: 41s
  windows-service:
    provision: 4s
    verify: 4s
    destroy: 4s
    Total: 20s
  trivial:
    provision: 54s
    verify: 19s
    destroy: 7s
    Total: 1m54s
  basics:
    provision: 51s
    verify: 20s
    force-destroy: 6s
    Total: 1m34s
  data-collector:
    provision: 1m10s
    verify: 16s
    force-destroy: 7s
    Total: 1m50s
  top-cookbooks:
    provision: 5m11s
    force-destroy: 38s
    Total: 7m14s
  fips:
    provision: 5m24s
    verify: 28s
    force-destroy: 7s
    Total: 7m15s
  Run:
    Total: 8m17s
