---
result: FAILURE
failure_category: code
failure_cause: chef_acceptance[fips::verify]
failed_in:
  chef_acceptance:
  - fips::verify
  step: CHEF-ACCEPTANCE
timestamp: 2016-06-17 20:48:11 UTC
url: http://manhattan.ci.chef.co/job/chef-test/architecture=x86_64,platform=acceptance,project=chef,role=tester/34/
trigger_url: http://manhattan.ci.chef.co/job/chef-trigger-ad_hoc/50/
duration: 47m10s
logs:
  consoleText:
    24158: |
      FIPS::VERIFY::[2016-06-17 21:19:20 +0000]                                      sets the expanded rights on the current resource (PENDING: windows reporting not yet fully supported)
      FIPS::VERIFY::[2016-06-17 21:19:20 +0000]                          when fetching files over HTTPS
      FIPS::VERIFY::[2016-06-17 21:19:20 +0000]                        [2016-06-17 21:17:12] ERROR OpenSSL::SSL::SSLError: SSL_accept returned=1 errno=0 state=SSLv2/v3 read client hello A: http request
      FIPS::VERIFY::[2016-06-17 21:19:20 +0000]                          c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in `accept'
      FIPS::VERIFY::[2016-06-17 21:19:20 +0000]
      FIPS::VERIFY::[2016-06-17 21:19:20 +0000]        [2016-06-17 21:17:12] ERROR OpenSSL::SSL::SSLError: SSL_accept returned=1 errno=0 state=SSLv2/v3 read client hello A: http request
      FIPS::VERIFY::[2016-06-17 21:19:20 +0000]
      FIPS::VERIFY::[2016-06-17 21:19:20 +0000]          c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in `accept'
    26761: |
      FIPS::VERIFY::[2016-06-17 21:19:21 +0000]                 D      [WinRM] remote shell 622F2AD8-B056-485C-ADC6-D9A1956F3430 closed
      FIPS::VERIFY::[2016-06-17 21:19:21 +0000]
            ================================================================================
            Error executing action `run` on resource 'execute[bundle exec kitchen verify  -c -l debug]'
            ================================================================================

            Mixlib::ShellOut::ShellCommandFailed
            ------------------------------------
            Expected process to exit with [0], but received '10'
            ---- Begin output of bundle exec kitchen verify  -c -l debug ----
            STDOUT: -----> Starting Kitchen (v1.9.2)
            D      winrm requested, loading winrm gem (["~> 1.6"])
            D      winrm is loaded.
            D      winrm-fs requested, loading winrm-fs gem (["~> 0.4.1"])
            D      winrm-fs is loaded.
            D      winrm requested, loading winrm gem (["~> 1.6"])
            D      winrm was already loaded.
            D      winrm-fs requested, loading winrm-fs gem (["~> 0.4.1"])
            D      winrm-fs was already loaded.
            -----> Setting up <fips-unit-functional-windows-2012r2>...
            -----> Setting up <fips-unit-functional-centos-6>...
                   Finished setting up <fips-unit-functional-centos-6> (0m0.00s).
            -----> Setting up <fips-integration-windows-2012r2>...
                   Finished setting up <fips-integration-windows-2012r2> (0m0.00s).
                   Finished setting up <fips-unit-functional-windows-2012r2> (0m0.00s).
            -----> Setting up <fips-integration-centos-6>...
            -----> Verifying <fips-unit-functional-centos-6>...
            -----> Verifying <fips-unit-functional-windows-2012r2>...
                   Preparing files for transfer
                   Finished setting up <fips-integration-centos-6> (0m0.00s).
            -----> Verifying <fips-integration-windows-2012r2>...
                   Preparing files for transfer
            D      Creating local sandbox in /tmp/cheftest/fips-unit-functional-windows-2012r2-sandbox-20160617-21980-78ficg
            D      Creating local sandbox in /tmp/cheftest/fips-integration-windows-2012r2-sandbox-20160617-21980-y6mv2n
            D      [WinRM] negotiate::http://10.194.10.193:5985/wsman<{:user=>"administrator", :pass=>"rW4?hqTd(w", :elevated_username=>"administrator", :elevated_password=>"rW4?hqTd(w", :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine")

            $env:BUSSER_ROOT = "$env:TEMP\verifier"
            $env:GEM_HOME = "$env:TEMP\verifier\gems"
            $env:GEM_PATH = "$env:TEMP\verifier\gems"
            $env:GEM_CACHE = "$env:TEMP\verifier\gems\cache"
            $ruby = "$env:systemdrive\opscode\chef\embedded\bin\ruby.exe"
            $gem = "$env:systemdrive\opscode\chef\embedded\bin\gem"
            $version = "busser"
            $gem_install_args = "busser --no-rdoc --no-ri --no-format-executable -n $env:TEMP\verifier\bin --no-user-install"
            $busser = "$env:TEMP\verifier\bin\busser.bat"
            $plugins = "busser-serverspec"

            if ((& "$ruby" "$gem" list busser -i) -ne "true") {
              Write-Host "-----> Installing Busser ($version)`n"
              & "$ruby" "$gem" install $gem_install_args.Split() 2>&1
            } else {
              Write-Host "-----> Busser installation detected ($version)`n"
            }

            if (-Not (Test-Path "$busser")) {
              $gem_bindir = & "$ruby" -rrubygems -e "puts Gem.bindir.dup.gsub('/', '\\')"
              & "$ruby" "$gem_bindir\busser" setup --type bat 2>&1
            }

            Write-Host "       Installing Busser plugins: $plugins`n"
            & "$busser" plugin install $plugins.Split() 2>&1
            )
            -----> Verifying <fips-integration-centos-6>...
                   Preparing files for transfer
            D      Creating local sandbox in /tmp/cheftest/fips-integration-centos-6-sandbox-20160617-21980-khbb6
            D      [SSH] root@10.194.8.205<{:user_known_hosts_file=>"/dev/null", :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>["/home/jenkins/.ssh/jenkins.pem"], :auth_methods=>["publickey"]}> (sh -c '
            BUSSER_ROOT="/tmp/verifier"; export BUSSER_ROOT
            GE
      FIPS::VERIFY::[2016-06-17 21:19:21 +0000] M_HOME="/tmp/verifier/gems"; export GEM_HOME
            GEM_PATH="/tmp/verifier/gems"; export GEM_PATH
    31912: |2
                                 sets the expanded rights on the current resource (PENDING: windows reporting not yet fully supported)
                     when fetching files over HTTPS
                   [2016-06-17 21:17:12] ERROR OpenSSL::SSL::SSLError: SSL_accept returned=1 errno=0 state=SSLv2/v3 read client hello A: http request
                     c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in `accept'
                   [2016-06-17 21:17:12] ERROR OpenSSL::SSL::SSLError: SSL_accept returned=1 errno=0 state=SSLv2/v3 read client hello A: http request
                     c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in `accept'
                       behaves like a file resource
                         when deploying with :move
    34500: |2


          ================================================================================
          Error executing action `run` on resource 'kitchen[verify]'
          ================================================================================

          Mixlib::ShellOut::ShellCommandFailed
          ------------------------------------
          execute[bundle exec kitchen verify  -c -l debug] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb line 36) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '10'
          ---- Begin output of bundle exec kitchen verify  -c -l debug ----
          STDOUT: -----> Starting Kitchen (v1.9.2)
          D      winrm requested, loading winrm gem (["~> 1.6"])
          D      winrm is loaded.
          D      winrm-fs requested, loading winrm-fs gem (["~> 0.4.1"])
          D      winrm-fs is loaded.
          D      winrm requested, loading winrm gem (["~> 1.6"])
          D      winrm was already loaded.
          D      winrm-fs requested, loading winrm-fs gem (["~> 0.4.1"])
          D      winrm-fs was already loaded.
          -----> Setting up <fips-unit-functional-windows-2012r2>...
          -----> Setting up <fips-unit-functional-centos-6>...
                 Finished setting up <fips-unit-functional-centos-6> (0m0.00s).
          -----> Setting up <fips-integration-windows-2012r2>...
                 Finished setting up <fips-integration-windows-2012r2> (0m0.00s).
                 Finished setting up <fips-unit-functional-windows-2012r2> (0m0.00s).
          -----> Setting up <fips-integration-centos-6>...
          -----> Verifying <fips-unit-functional-centos-6>...
          -----> Verifying <fips-unit-functional-windows-2012r2>...
                 Preparing files for transfer
                 Finished setting up <fips-integration-centos-6> (0m0.00s).
          -----> Verifying <fips-integration-windows-2012r2>...
                 Preparing files for transfer
          D      Creating local sandbox in /tmp/cheftest/fips-unit-functional-windows-2012r2-sandbox-20160617-21980-78ficg
          D      Creating local sandbox in /tmp/cheftest/fips-integration-windows-2012r2-sandbox-20160617-21980-y6mv2n
          D      [WinRM] negotiate::http://10.194.10.193:5985/wsman<{:user=>"administrator", :pass=>"rW4?hqTd(w", :elevated_username=>"administrator", :elevated_password=>"rW4?hqTd(w", :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}> ($env:PATH = [System.Environment]::GetEnvironmentVariable("PATH","Machine")

          $env:BUSSER_ROOT = "$env:TEMP\verifier"
          $env:GEM_HOME = "$env:TEMP\verifier\gems"
          $env:GEM_PATH = "$env:TEMP\verifier\gems"
          $env:GEM_CACHE = "$env:TEMP\verifier\gems\cache"
          $ruby = "$env:systemdrive\opscode\chef\embedded\bin\ruby.exe"
          $gem = "$env:systemdrive\opscode\chef\embedded\bin\gem"
          $version = "busser"
          $gem_install_args = "busser --no-rdoc --no-ri --no-format-executable -n $env:TEMP\verifier\bin --no-user-install"
          $busser = "$env:TEMP\verifier
      FIPS::VERIFY::[2016-06-17 21:19:22 +0000] \bin\busser.bat"
          $plugins = "busser-serverspec"
    39620: |2
                               sets the expanded rights on the current resource (PENDING: windows reporting not yet fully supported)
                   when fetching files over HTTPS
                 [2016-06-17 21:17:12] ERROR OpenSSL::SSL::SSLError: SSL_accept returned=1 errno=0 state=SSLv2/v3 read client hello A: http request
                   c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in `accept'
                 [2016-06-17 21:17:12] ERROR OpenSSL::SSL::SSLError: SSL_accept returned=1 errno=0 state=SSLv2/v3 read client hello A: http request
                   c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in `accept'
                     behaves like a file resource
                       when deploying with :move
    42180: |2

      Running handlers:
      [2016-06-17T21:19:23+00:00] ERROR: Running exception handlers
      Running handlers complete
      [2016-06-17T21:19:23+00:00] ERROR: Exception handlers complete
      Chef Client failed. 0 resources updated in 18 minutes 44 seconds
      FIPS::VERIFY::[2016-06-17 21:19:23 +0000] [2016-06-17T21:19:23+00:00] FATAL: Stacktrace dumped to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/chef-stacktrace.out
      FIPS::VERIFY::[2016-06-17 21:19:23 +0000] [2016-06-17T21:19:23+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
      FIPS::VERIFY::[2016-06-17 21:19:23 +0000] [2016-06-17T21:19:23+00:00] ERROR: Found 1 errors, they are stored in the backtrace
      FIPS::VERIFY::[2016-06-17 21:19:24 +0000] [2016-06-17T21:19:24+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
      CHEF-ACCEPTANCE::[2016-06-17 21:19:24 +0000] Encountered an error running the recipe verify: Expected process to exit with [0], but received '1'
      ---- Begin output of chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/dna.json -o acceptance-cookbook::verify --no-color ----
    47229: |2
                                           sets the expanded rights on the current resource (PENDING: windows reporting not yet fully supported)
                               when fetching files over HTTPS
                             [2016-06-17 21:17:12] ERROR OpenSSL::SSL::SSLError: SSL_accept returned=1 errno=0 state=SSLv2/v3 read client hello A: http request
                               c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in `accept'
                             [2016-06-17 21:17:12] ERROR OpenSSL::SSL::SSLError: SSL_accept returned=1 errno=0 state=SSLv2/v3 read client hello A: http request
                               c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in `accept'
                                 behaves like a file resource
                                   when deploying with :move
    49710: "                D      [WinRM] remote shell 622F2AD8-B056-485C-ADC6-D9A1956F3430
      closed\n\n      ================================================================================\n
      \     Error executing action `run` on resource 'execute[bundle exec kitchen
      verify  -c -l debug]'\n      ================================================================================\n\n
      \     Mixlib::ShellOut::ShellCommandFailed\n      ------------------------------------\n
      \     Expected process to exit with [0], but received '10'\n      ---- Begin
      output of bundle exec kitchen verify  -c -l debug ----\n      STDOUT: ----->
      Starting Kitchen (v1.9.2)\n      D      winrm requested, loading winrm gem ([\"~>
      1.6\"])\n      D      winrm is loaded.\n      D      winrm-fs requested, loading
      winrm-fs gem ([\"~> 0.4.1\"])\n      D      winrm-fs is loaded.\n      D      winrm
      requested, loading winrm gem ([\"~> 1.6\"])\n      D      winrm was already
      loaded.\n      D      winrm-fs requested, loading winrm-fs gem ([\"~> 0.4.1\"])\n
      \     D      winrm-fs was already loaded.\n      -----> Setting up <fips-unit-functional-windows-2012r2>...\n
      \     -----> Setting up <fips-unit-functional-centos-6>...\n             Finished
      setting up <fips-unit-functional-centos-6> (0m0.00s).\n      -----> Setting
      up <fips-integration-windows-2012r2>...\n             Finished setting up <fips-integration-windows-2012r2>
      (0m0.00s).\n             Finished setting up <fips-unit-functional-windows-2012r2>
      (0m0.00s).\n      -----> Setting up <fips-integration-centos-6>...\n      ----->
      Verifying <fips-unit-functional-centos-6>...\n      -----> Verifying <fips-unit-functional-windows-2012r2>...\n
      \            Preparing files for transfer\n             Finished setting up
      <fips-integration-centos-6> (0m0.00s).\n      -----> Verifying <fips-integration-windows-2012r2>...\n
      \            Preparing files for transfer\n      D      Creating local sandbox
      in /tmp/cheftest/fips-unit-functional-windows-2012r2-sandbox-20160617-21980-78ficg\n
      \     D      Creating local sandbox in /tmp/cheftest/fips-integration-windows-2012r2-sandbox-20160617-21980-y6mv2n\n
      \     D      [WinRM] negotiate::http://10.194.10.193:5985/wsman<{:user=>\"administrator\",
      :pass=>\"rW4?hqTd(w\", :elevated_username=>\"administrator\", :elevated_password=>\"rW4?hqTd(w\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n      $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n
      \     $gem = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n      $version
      = \"busser\"\n      $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable
      -n $env:TEMP\\verifier\\bin --no-user-install\"\n      $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \     $plugins = \"busser-serverspec\"\n\n      if ((& \"$ruby\" \"$gem\" list
      busser -i) -ne \"true\") {\n        Write-Host \"-----> Installing Busser ($version)`n\"\n
      \       & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n      }
      else {\n        Write-Host \"-----> Busser installation detected ($version)`n\"\n
      \     }\n\n      if (-Not (Test-Path \"$busser\")) {\n        $gem_bindir =
      & \"$ruby\" -rrubygems -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n        &
      \"$ruby\" \"$gem_bindir\\busser\" setup --type bat 2>&1\n      }\n\n      Write-Host
      \"       Installing Busser plugins: $plugins`n\"\n      & \"$busser\" plugin
      install $plugins.Split() 2>&1\n      )\n      -----> Verifying <fips-integration-centos-6>...\n
      \            Preparing files for transfer\n      D      Creating local sandbox
      in /tmp/cheftest/fips-integration-centos-6-sandbox-20160617-21980-khbb6\n      D
      \     [SSH] root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n      ruby=\"/opt/chef/embedded/bin/ruby\"\n      gem=\"/opt/chef/embedded/bin/gem\"\n
      \     version=\"busser\"\n      gem_install_args=\"busser --no-rdoc --no-ri
      --no-format-executable -n /tmp/verifier/bin --no-user-install\"\n      busser=\"sudo
      -E /tmp/verifier/bin/busser\"\n      plugins=\"busser-serverspec\"\n\n      $gem
      list busser -i 2>&1 >/dev/null\n      if test $? -ne 0; then\n        echo \"----->
      Installing Busser ($version)\"\n        $gem install $gem_install_args\n      else\n
      \       echo \"-----> Busser installation detected ($version)\"\n      fi\n\n
      \     if test ! -f \"$BUSSER_ROOT/bin/busser\"; then\n        $busser setup\n
      \     fi\n\n      echo \"       Installing Busser plugins: $plugins\"\n      $busser
      plugin install $plugins\n      ')\n      D      [SSH] opening connection to
      root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n      D      [WinRM] negotiate::http://10.194.9.191:5985/wsman<{:user=>\"administrator\",
      :pass=>\")eYvstpx7kW\", :elevated_username=>\"administrator\", :elevated_password=>\")eYvstpx7kW\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n      $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n
      \     $gem = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n      $version
      = \"busser\"\n      $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable
      -n $env:TEMP\\verifier\\bin --no-user-install\"\n      $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \     $plugins = \"busser-serverspec\"\n\n      if ((& \"$ruby\" \"$gem\" list
      busser -i) -ne \"true\") {\n        Write-Host \"-----> Installing Busser ($version)`n\"\n
      \       & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n      }
      else {\n        Write-Host \"-----> Busser installation detected ($version)`n\"\n
      \     }\n\n      if (-Not (Test-Path \"$busser\")) {\n        $gem_bindir =
      & \"$ruby\" -rrubygems -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n        &
      \"$ruby\" \"$gem_bindir\\busser\" setup --type bat 2>&1\n      }\n\n      Write-Host
      \"       Installing Busser plugins: $plugins`n\"\n      & \"$busser\" plugin
      install $plugins.Split() 2>&1\n      )\n             Preparing files for transfer\n
      \     D      Creating local sandbox in /tmp/cheftest/fips-unit-functional-centos-6-sandbox-20160617-21980-2vl32j\n
      \     D      [SSH] root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n      ruby=\"/opt/chef/embedded/bin/ruby\"\n      gem=\"/opt/chef/embedded/bin/gem\"\n
      \     version=\"busser\"\n      gem_install_args=\"busser --no-rdoc --no-ri
      --no-format-executable -n /tmp/verifier/bin --no-user-install\"\n      busser=\"sudo
      -E /tmp/verifier/bin/busser\"\n      plugins=\"busser-serverspec\"\n\n      $gem
      list busser -i 2>&1 >/dev/null\n      if test $? -ne 0; then\n        echo \"----->
      Installing Busser ($version)\"\n        $gem install $gem_install_args\n      else\n
      \       echo \"-----> Busser installation detected ($version)\"\n      fi\n\n
      \     if test ! -f \"$BUSSER_ROOT/bin/busser\"; then\n        $busser setup\n
      \     fi\n\n      echo \"       Installing Busser plugins: $plugins\"\n      $busser
      plugin install $plugins\n      ')\n      D      [SSH] opening connection to
      root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false, :port=>22,
      :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n      D      [WinRM] opening remote shell
      on http://10.194.10.193:5985/wsman\n      D      [WinRM] opening remote shell
      on http://10.194.9.191:5985/wsman\n      D      [WinRM] remote shell 622F2AD8-B056-485C-ADC6-D9A1956F3430
      is open on http://10.194.10.193:5985/wsman\n      D      [WinRM] remote shell
      A66F1176-299F-413D-8871-E04ABACAC354 is open on http://10.194.9.191:5985/wsman\n
      \            bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \     -----> Installing Busser (busser)\n      -----> Installing Busser (busser)\n
      \            Fetching: thor-0.19.0.gem\rFetching: thor-0.19.0.gem (  3%)\rFetching:
      thor-0.19.0.gem (  6%)\rFetching: thor-0.19.0.gem (  9%)\rFetching: thor-0.19.0.gem
      ( 12%)\rFetching: thor-0.19.0.gem ( 15%)\rFetching: thor-0.19.0.gem ( 18%)\rFetching:
      thor-0.19.0.gem ( 21%)\rFetching: thor-0.19.0.gem ( 24%)\rFetching: thor-0.19.0.gem
      ( 27%)\rFetching: thor-0.19.0.gem ( 30%)\rFetching: thor-0.19.0.gem ( 33%)\rFetching:
      thor-0.19.0.gem ( 35%)\rFetching: thor-0.19.0.gem ( 53%)\rFetching: thor-0.19.0.gem
      ( 71%)\rFetching: thor-0.19.0.gem ( 89%)\rFetching: thor-0.19.0.gem (100%)\rFetching:
      thor-0.19.0.gem (100%)\n             Successfully installed thor-0.19.0\n             Fetching:
      busser-0.7.1.gem\rFetching: busser-0.7.1.gem ( 64%)\rFetching: busser-0.7.1.gem
      (100%)\rFetching: busser-0.7.1.gem (100%)\n             Fetching: thor-0.19.0.gem\rFetching:
      thor-0.19.0.gem (  3%)\rFetching: thor-0.19.0.gem (  6%)\rFetching: thor-0.19.0.gem
      (  9%)\rFetching: thor-0.19.0.gem ( 12%)\rFetching: thor-0.19.0.gem ( 15%)\rFetching:
      thor-0.19.0.gem ( 18%)\rFetching: thor-0.19.0.gem ( 21%)\rFetching: thor-0.19.0.gem
      ( 24%)\rFetching: thor-0.19.0.gem ( 27%)\rFetching: thor-0.19.0.gem ( 30%)\rFetching:
      thor-0.19.0.gem ( 33%)\rFetching: thor-0.19.0.gem ( 35%)\rFetching: thor-0.19.0.gem
      ( 53%)\rFetching: thor-0.19.0.gem ( 71%)\rFetching: thor-0.19.0.gem ( 89%)\rFetching:
      thor-0.19.0.gem (100%)\rFetching: thor-0.19.0.gem (100%)\n             Successfully
      installed busser-0.7.1\n             2 gems installed\n             Installing
      Busser plugins: busser-serverspec\n             Successfully installed thor-0.19.0\n
      \            Fetching: busser-0.7.1.gem\rFetching: busser-0.7.1.gem ( 64%)\rFetching:
      busser-0.7.1.gem (100%)\rFetching: busser-0.7.1.gem (100%)\n             Successfully
      installed busser-0.7.1\n             2 gems installed\n             Installing
      Busser plugins: busser-serverspec\n             Plugin serverspec installed
      (version 0.5.9)\n      -----> Running postinstall for serverspec plugin\n      ----->
      Installing Busser (busser)\n\n             Plugin serverspec installed (version
      0.5.9)\n      -----> Running postinstall for serverspec plugin\n      ----->
      Installing Busser (busser)\n\n      D      [SSH] root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser suite cleanup\n      ')\n
      \            bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \     D      [SSH] root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser suite cleanup\n      ')\n
      \            bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            Suite path directory /tmp/verifier/suites does not exist, skipping.\n
      \            Transferring files to <fips-integration-centos-6>\n      D      TIMING:
      scp async upload (Kitchen::Transport::Ssh)\n      D      TIMING: scp async upload
      (Kitchen::Transport::Ssh) took (0m0.10s)\n      D      Transfer complete\n      D
      \     [SSH] root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser test\n      ')\n
      \            bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            Suite path directory /tmp/verifier/suites does not exist, skipping.\n
      \            Transferring files to <fips-unit-functional-centos-6>\n      D
      \     TIMING: scp async upload (Kitchen::Transport::Ssh)\n      D      TIMING:
      scp async upload (Kitchen::Transport::Ssh) took (0m0.10s)\n      D      Transfer
      complete\n      D      [SSH] root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n      BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n      GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n
      \     GEM_PATH=\"/tmp/verifier/gems\"; export GEM_PATH\n      GEM_CACHE=\"/tmp/verifier/gems/cache\";
      export GEM_CACHE\n\n      sudo -E /tmp/verifier/bin/busser test\n      ')\n
      \            bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \     -----> Running serverspec test suite\n      -----> Bundle Installing..\n
      \            \\33[1m\\33[32m         run\\33[0m  /opt/chef/embedded/bin/ruby
      /tmp/verifier/gems/bin/bundle install --gemfile /tmp/verifier/suites/serverspec/Gemfile
      --local || /opt/chef/embedded/bin/ruby /tmp/verifier/gems/bin/bundle install
      --gemfile /tmp/verifier/suites/serverspec/Gemfile from \".\"\n             sh:
      warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n             sh:
      warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n      -----> Running
      serverspec test suite\n      -----> Bundle Installing..\n             \\33[1m\\33[32m
      \        run\\33[0m  /opt/chef/embedded/bin/ruby /tmp/verifier/gems/bin/bundle
      install --gemfile /tmp/verifier/suites/serverspec/Gemfile --local || /opt/chef/embedded/bin/ruby
      /tmp/verifier/gems/bin/bundle install --gemfile /tmp/verifier/suites/serverspec/Gemfile
      from \".\"\n             sh: warning: setlocale: LC_ALL: cannot change locale
      (C.UTF-8)\n             \\33[33mDon't run Bundler as root. Bundler can ask for
      sudo if it is needed, and\n             installing your bundle as root will
      break this application for all non-root\n             users on this machine.\\33[0m\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            \\33[31mCould not find gem 'mixlib-shellout' in any of the gem
      sources listed in your\n             Gemfile or available on this machine.\\33[0m\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            \\33[33mDon't run Bundler as root. Bundler can ask for sudo if
      it is needed, and\n             installing your bundle as root will break this
      application for all non-root\n             users on this machine.\\33[0m\n             sh:
      warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n             \\33[33mDon't
      run Bundler as root. Bundler can ask for sudo if it is needed, and\n             installing
      your bundle as root will break this application for all non-root\n             users
      on this machine.\\33[0m\n             sh: warning: setlocale: LC_ALL: cannot
      change locale (C.UTF-8)\n             \\33[31mCould not find gem 'mixlib-shellout'
      in any of the gem sources listed in your\n             Gemfile or available
      on this machine.\\33[0m\n             sh: warning: setlocale: LC_ALL: cannot
      change locale (C.UTF-8)\n             \\33[33mDon't run Bundler as root. Bundler
      can ask for sudo if it is needed, and\n             installing your bundle as
      root will break this application for all non-root\n             users on this
      machine.\\33[0m\n             Successfully installed thor-0.19.0\n             Successfully
      installed busser-0.7.1\n             2 gems installed\n             Installing
      Busser plugins: busser-serverspec\n\n             Successfully installed thor-0.19.0\n
      \            Successfully installed busser-0.7.1\n             2 gems installed\n
      \            Installing Busser plugins: busser-serverspec\n\n             Fetching
      gem metadata from https://rubygems.org/\n             Plugin serverspec installed
      (version 0.5.9)\n      -----> Running postinstall for serverspec plugin\n             Plugin
      serverspec installed (version 0.5.9)\n      -----> Running postinstall for serverspec
      plugin\n             Fetching version metadata from https://rubygems.org/\n
      \            Resolving dependencies...\n      D      [WinRM] negotiate::http://10.194.9.191:5985/wsman<{:user=>\"administrator\",
      :pass=>\")eYvstpx7kW\", :elevated_username=>\"administrator\", :elevated_password=>\")eYvstpx7kW\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      suite cleanup\n      )\n             Fetching gem metadata from https://rubygems.org/\n
      \     D      [WinRM] negotiate::http://10.194.10.193:5985/wsman<{:user=>\"administrator\",
      :pass=>\"rW4?hqTd(w\", :elevated_username=>\"administrator\", :elevated_password=>\"rW4?hqTd(w\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      suite cleanup\n      )\n             \\33[32mInstalling mixlib-shellout 2.2.6\\33[0m\n
      \            Using bundler 1.12.5\n             \\33[32mBundle complete! 1 Gemfile
      dependency, 2 gems now installed.\\33[0m\n             \\33[32mUse `bundle show
      [gemname]` to see where a bundled gem is installed.\\33[0m\n             Fetching
      version metadata from https://rubygems.org/\n      -----> Installing Serverspec..\n
      \            Resolving dependencies...\n             \\33[32mInstalling mixlib-shellout
      2.2.6\\33[0m\n             Using bundler 1.12.5\n             \\33[32mBundle
      complete! 1 Gemfile dependency, 2 gems now installed.\\33[0m\n             \\33[32mUse
      `bundle show [gemname]` to see where a bundled gem is installed.\\33[0m\n      ----->
      Installing Serverspec..\n             Fetching: sfl-2.2.gem\rFetching: sfl-2.2.gem
      ( 26%)\rFetching: sfl-2.2.gem ( 59%)\rFetching: sfl-2.2.gem ( 93%)\rFetching:
      sfl-2.2.gem (100%)\rFetching: sfl-2.2.gem (100%)\n             Fetching: net-telnet-0.1.1.gem\rFetching:
      net-telnet-0.1.1.gem ( 13%)\rFetching: net-telnet-0.1.1.gem ( 29%)\rFetching:
      net-telnet-0.1.1.gem ( 45%)\rFetching: net-telnet-0.1.1.gem ( 62%)\rFetching:
      net-telnet-0.1.1.gem ( 78%)\rFetching: net-telnet-0.1.1.gem ( 93%)\rFetching:
      net-telnet-0.1.1.gem (100%)\rFetching: net-telnet-0.1.1.gem (100%)\n             Fetching:
      sfl-2.2.gem\rFetching: sfl-2.2.gem ( 26%)\rFetching: sfl-2.2.gem ( 59%)\rFetching:
      sfl-2.2.gem ( 93%)\rFetching: sfl-2.2.gem (100%)\rFetching: sfl-2.2.gem (100%)\n
      \            Fetching: net-telnet-0.1.1.gem\rFetching: net-telnet-0.1.1.gem
      ( 13%)\rFetching: net-telnet-0.1.1.gem ( 29%)\rFetching: net-telnet-0.1.1.gem
      ( 45%)\rFetching: net-telnet-0.1.1.gem ( 62%)\rFetching: net-telnet-0.1.1.gem
      ( 78%)\rFetching: net-telnet-0.1.1.gem ( 93%)\rFetching: net-telnet-0.1.1.gem
      (100%)\rFetching: net-telnet-0.1.1.gem (100%)\n             Fetching: net-ssh-3.1.1.gem\rFetching:
      net-ssh-3.1.1.gem (  2%)\rFetching: net-ssh-3.1.1.gem (  3%)\rFetching: net-ssh-3.1.1.gem
      (  5%)\rFetching: net-ssh-3.1.1.gem (  6%)\rFetching: net-ssh-3.1.1.gem (  8%)\rFetching:
      net-ssh-3.1.1.gem (  9%)\rFetching: net-ssh-3.1.1.gem ( 10%)\rFetching: net-ssh-3.1.1.gem
      ( 12%)\rFetching: net-ssh-3.1.1.gem ( 13%)\rFetching: net-ssh-3.1.1.gem ( 15%)\rFetching:
      net-ssh-3.1.1.gem ( 16%)\rFetching: net-ssh-3.1.1.gem ( 18%)\rFetching: net-ssh-3.1.1.gem
      ( 27%)\rFetching: net-ssh-3.1.1.gem ( 36%)\rFetching: net-ssh-3.1.1.gem ( 44%)\rFetching:
      net-ssh-3.1.1.gem ( 53%)\rFetching: net-ssh-3.1.1.gem ( 62%)\rFetching: net-ssh-3.1.1.gem
      ( 71%)\rFetching: net-ssh-3.1.1.gem ( 80%)\rFetching: net-ssh-3.1.1.gem ( 89%)\rFetching:
      net-ssh-3.1.1.gem ( 98%)\rFetching: net-ssh-3.1.1.gem (100%)\rFetching: net-ssh-3.1.1.gem
      (100%)\n             Fetching: net-ssh-3.1.1.gem\rFetching: net-ssh-3.1.1.gem
      (  2%)\rFetching: net-ssh-3.1.1.gem (  3%)\rFetching: net-ssh-3.1.1.gem (  5%)\rFetching:
      net-ssh-3.1.1.gem (  6%)\rFetching: net-ssh-3.1.1.gem (  8%)\rFetching: net-ssh-3.1.1.gem
      (  9%)\rFetching: net-ssh-3.1.1.gem ( 10%)\rFetching: net-ssh-3.1.1.gem ( 12%)\rFetching:
      net-ssh-3.1.1.gem ( 13%)\rFetching: net-ssh-3.1.1.gem ( 15%)\rFetching: net-ssh-3.1.1.gem
      ( 16%)\rFetching: net-ssh-3.1.1.gem ( 18%)\rFetching: net-ssh-3.1.1.gem ( 27%)\rFetching:
      net-ssh-3.1.1.gem ( 36%)\rFetching: net-ssh-3.1.1.gem ( 44%)\rFetching: net-ssh-3.1.1.gem
      ( 53%)\rFetching: net-ssh-3.1.1.gem ( 62%)\rFetching: net-ssh-3.1.1.gem ( 71%)\rFetching:
      net-ssh-3.1.1.gem ( 80%)\rFetching: net-ssh-3.1.1.gem ( 89%)\rFetching: net-ssh-3.1.1.gem
      ( 98%)\rFetching: net-ssh-3.1.1.gem (100%)\rFetching: net-ssh-3.1.1.gem (100%)\n
      \            Fetching: net-scp-1.2.1.gem\rFetching: net-scp-1.2.1.gem ( 48%)\rFetching:
      net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem (100%)\rFetching: net-scp-1.2.1.gem
      (100%)\n             Suite path directory C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites
      does not exist, skipping.\n             Transferring files to <fips-unit-functional-windows-2012r2>\n
      \            Fetching: net-scp-1.2.1.gem\rFetching: net-scp-1.2.1.gem ( 48%)\rFetching:
      net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem (100%)\rFetching: net-scp-1.2.1.gem
      (100%)\n      D      creating hash for directory $env:TEMP\\verifier\n      D
      \     Populating files\n      D      +++ Adding serverspec/Gemfile\n      D
      \     +++ Adding serverspec/fips-unit-functional_spec.rb\n      D      === All
      files added.\n      D      Running check_files.ps1\n      D      @{\n      D
      \       \"5d2e53a5614191437bca7afdb9d7591e\" = @{\n      D          \"target\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\";\n
      \     D          \"src_basename\" = \"suites\";\n      D          \"dst\" =
      \"$env:TEMP\\verifier\\suites\"\n      D        }\n      D      }\n             Fetching:
      specinfra-2.59.0.gem\rFetching: specinfra-2.59.0.gem ( 20%)\rFetching: specinfra-2.59.0.gem
      ( 41%)\rFetching: specinfra-2.59.0.gem ( 62%)\rFetching: specinfra-2.59.0.gem
      ( 82%)\rFetching: specinfra-2.59.0.gem (100%)\rFetching: specinfra-2.59.0.gem
      (100%)\n             Fetching: specinfra-2.59.0.gem\rFetching: specinfra-2.59.0.gem
      ( 20%)\rFetching: specinfra-2.59.0.gem ( 41%)\rFetching: specinfra-2.59.0.gem
      ( 62%)\rFetching: specinfra-2.59.0.gem ( 82%)\rFetching: specinfra-2.59.0.gem
      (100%)\rFetching: specinfra-2.59.0.gem (100%)\n             Suite path directory
      C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites does not exist, skipping.\n
      \            Transferring files to <fips-integration-windows-2012r2>\n      D
      \     creating hash for directory $env:TEMP\\verifier\n      D      Populating
      files\n      D      +++ Adding serverspec/Gemfile\n      D      +++ Adding serverspec/fips-integration_spec.rb\n
      \     D      === All files added.\n      D      Running check_files.ps1\n      D
      \     @{\n      D        \"a58c3771533a6479cf23bf871167f7d9\" = @{\n      D
      \         \"target\" = \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\";\n
      \     D          \"src_basename\" = \"suites\";\n      D          \"dst\" =
      \"$env:TEMP\\verifier\\suites\"\n      D        }\n      D      }\n             Fetching:
      rspec-support-3.4.1.gem\rFetching: rspec-support-3.4.1.gem ( 50%)\rFetching:
      rspec-support-3.4.1.gem (100%)\rFetching: rspec-support-3.4.1.gem (100%)\n             Fetching:
      rspec-support-3.4.1.gem\rFetching: rspec-support-3.4.1.gem ( 50%)\rFetching:
      rspec-support-3.4.1.gem (100%)\rFetching: rspec-support-3.4.1.gem (100%)\n             Fetching:
      diff-lcs-1.2.5.gem\rFetching: diff-lcs-1.2.5.gem ( 33%)\rFetching: diff-lcs-1.2.5.gem
      ( 66%)\rFetching: diff-lcs-1.2.5.gem ( 99%)\rFetching: diff-lcs-1.2.5.gem (100%)\rFetching:
      diff-lcs-1.2.5.gem (100%)\n             Fetching: diff-lcs-1.2.5.gem\rFetching:
      diff-lcs-1.2.5.gem ( 33%)\rFetching: diff-lcs-1.2.5.gem ( 66%)\rFetching: diff-lcs-1.2.5.gem
      ( 99%)\rFetching: diff-lcs-1.2.5.gem (100%)\rFetching: diff-lcs-1.2.5.gem (100%)\n
      \            Fetching: rspec-expectations-3.4.0.gem\rFetching: rspec-expectations-3.4.0.gem
      ( 21%)\rFetching: rspec-expectations-3.4.0.gem ( 43%)\rFetching: rspec-expectations-3.4.0.gem
      ( 65%)\rFetching: rspec-expectations-3.4.0.gem ( 87%)\rFetching: rspec-expectations-3.4.0.gem
      (100%)\rFetching: rspec-expectations-3.4.0.gem (100%)\n             Fetching:
      rspec-expectations-3.4.0.gem\rFetching: rspec-expectations-3.4.0.gem ( 21%)\rFetching:
      rspec-expectations-3.4.0.gem ( 43%)\rFetching: rspec-expectations-3.4.0.gem
      ( 65%)\rFetching: rspec-expectations-3.4.0.gem ( 87%)\rFetching: rspec-expectations-3.4.0.gem
      (100%)\rFetching: rspec-expectations-3.4.0.gem (100%)\n             Fetching:
      rspec-core-3.4.4.gem\rFetching: rspec-core-3.4.4.gem ( 11%)\rFetching: rspec-core-3.4.4.gem
      ( 22%)\rFetching: rspec-core-3.4.4.gem ( 34%)\rFetching: rspec-core-3.4.4.gem
      ( 45%)\rFetching: rspec-core-3.4.4.gem ( 56%)\rFetching: rspec-core-3.4.4.gem
      ( 67%)\rFetching: rspec-core-3.4.4.gem ( 79%)\rFetching: rspec-core-3.4.4.gem
      ( 90%)\rFetching: rspec-core-3.4.4.gem (100%)\rFetching: rspec-core-3.4.4.gem
      (100%)\n             Fetching: rspec-core-3.4.4.gem\rFetching: rspec-core-3.4.4.gem
      ( 11%)\rFetching: rspec-core-3.4.4.gem ( 22%)\rFetching: rspec-core-3.4.4.gem
      ( 34%)\rFetching: rspec-core-3.4.4.gem ( 45%)\rFetching: rspec-core-3.4.4.gem
      ( 56%)\rFetching: rspec-core-3.4.4.gem ( 67%)\rFetching: rspec-core-3.4.4.gem
      ( 79%)\rFetching: rspec-core-3.4.4.gem ( 90%)\rFetching: rspec-core-3.4.4.gem
      (100%)\rFetching: rspec-core-3.4.4.gem (100%)\n             Fetching: rspec-its-1.2.0.gem\rFetching:
      rspec-its-1.2.0.gem (100%)\rFetching: rspec-its-1.2.0.gem (100%)\n             Fetching:
      rspec-mocks-3.4.1.gem\rFetching: rspec-mocks-3.4.1.gem ( 21%)\rFetching: rspec-mocks-3.4.1.gem
      ( 43%)\rFetching: rspec-mocks-3.4.1.gem ( 65%)\rFetching: rspec-mocks-3.4.1.gem
      ( 87%)\rFetching: rspec-mocks-3.4.1.gem (100%)\rFetching: rspec-mocks-3.4.1.gem
      (100%)\n             Fetching: rspec-its-1.2.0.gem\rFetching: rspec-its-1.2.0.gem
      (100%)\rFetching: rspec-its-1.2.0.gem (100%)\n             Fetching: rspec-3.4.0.gem\rFetching:
      rspec-3.4.0.gem (100%)\rFetching: rspec-3.4.0.gem (100%)\n             Fetching:
      rspec-mocks-3.4.1.gem\rFetching: rspec-mocks-3.4.1.gem ( 21%)\rFetching: rspec-mocks-3.4.1.gem
      ( 43%)\rFetching: rspec-mocks-3.4.1.gem ( 65%)\rFetching: rspec-mocks-3.4.1.gem
      ( 87%)\rFetching: rspec-mocks-3.4.1.gem (100%)\rFetching: rspec-mocks-3.4.1.gem
      (100%)\n             Fetching: multi_json-1.12.1.gem\rFetching: multi_json-1.12.1.gem
      ( 61%)\rFetching: multi_json-1.12.1.gem (100%)\rFetching: multi_json-1.12.1.gem
      (100%)\n      D      Parsing CSV Response\n      D      \"chk_exists\",\"src_md5\",\"dst_md5\",\"chk_dirty\",\"verifies\",\"target_is_folder\"\n
      \     \"False\",\"5d2e53a5614191437bca7afdb9d7591e\",,\"True\",\"False\",\"False\"\n\n
      \     D      Uploading /tmp/cheftest/tmpzip-20160617-21980-ilp7ca.zip to encoded
      tmpfile $env:TEMP\\b64-5d2e53a5614191437bca7afdb9d7591e.txt\n             Fetching:
      serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem ( 41%)\rFetching: serverspec-2.36.0.gem
      ( 83%)\rFetching: serverspec-2.36.0.gem (100%)\rFetching: serverspec-2.36.0.gem
      (100%)\n             Fetching: rspec-3.4.0.gem\rFetching: rspec-3.4.0.gem (100%)\rFetching:
      rspec-3.4.0.gem (100%)\n      D      Parsing CSV Response\n      D      \"chk_exists\",\"src_md5\",\"dst_md5\",\"chk_dirty\",\"verifies\",\"target_is_folder\"\n
      \     \"False\",\"a58c3771533a6479cf23bf871167f7d9\",,\"True\",\"False\",\"False\"\n\n
      \     D      Uploading /tmp/cheftest/tmpzip-20160617-21980-emg48g.zip to encoded
      tmpfile $env:TEMP\\b64-a58c3771533a6479cf23bf871167f7d9.txt\n      -----> serverspec
      installed (version 2.36.0)\n             /opt/chef/embedded/bin/ruby -I/tmp/verifier/suites/serverspec
      -I/tmp/verifier/gems/gems/rspec-support-3.4.1/lib:/tmp/verifier/gems/gems/rspec-core-3.4.4/lib
      /opt/chef/embedded/bin/rspec --pattern /tmp/verifier/suites/serverspec/\\*\\*/\\*_spec.rb
      --color --format documentation --default-path /tmp/verifier/suites/serverspec\n
      \            Fetching: multi_json-1.12.1.gem\rFetching: multi_json-1.12.1.gem
      ( 61%)\rFetching: multi_json-1.12.1.gem (100%)\rFetching: multi_json-1.12.1.gem
      (100%)\n             sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            Fetching: serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem
      ( 41%)\rFetching: serverspec-2.36.0.gem ( 83%)\rFetching: serverspec-2.36.0.gem
      (100%)\rFetching: serverspec-2.36.0.gem (100%)\n      -----> serverspec installed
      (version 2.36.0)\n      D      Finished uploading /tmp/cheftest/tmpzip-20160617-21980-ilp7ca.zip
      to encoded tmpfile $env:TEMP\\b64-5d2e53a5614191437bca7afdb9d7591e.txt (1.22
      KB over 1 chunks) in (0m0.40s)\n      D      Running decode_files.ps1\n      D
      \     @{\n      D        \"$env:TEMP\\b64-5d2e53a5614191437bca7afdb9d7591e.txt\"
      = @{\n      D          \"dst\" = \"$env:TEMP\\verifier\\suites\";\n      D          \"tmpzip\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\"\n
      \     D        }\n      D      }\n      D      Finished uploading /tmp/cheftest/tmpzip-20160617-21980-emg48g.zip
      to encoded tmpfile $env:TEMP\\b64-a58c3771533a6479cf23bf871167f7d9.txt (1.196
      KB over 1 chunks) in (0m0.32s)\n      D      Running decode_files.ps1\n      D
      \     @{\n      D        \"$env:TEMP\\b64-a58c3771533a6479cf23bf871167f7d9.txt\"
      = @{\n      D          \"dst\" = \"$env:TEMP\\verifier\\suites\";\n      D          \"tmpzip\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\"\n
      \     D        }\n      D      }\n\n             Chef Fips Integration Specs\n
      \            \\33[33m  passes the integration specs (PENDING: No reason given)\\33[0m\n\n
      \            Pending: (Failures listed here are expected and do not affect your
      suite's status)\n             \\33[33m\n               1) Chef Fips Integration
      Specs passes the integration specs\\33[0m\n                  \\33[36m# No reason
      given\\33[0m\n             \\33[36m     # /tmp/verifier/suites/serverspec/fips-integration_spec.rb:48\n
      \            \\33[0m\n\n             Finished in 0.00053 seconds (files took
      0.21936 seconds to load)\n             \\33[33m1 example, 0 failures, 1 pending\\33[0m\n\n
      \            /opt/chef/embedded/bin/ruby -I/tmp/verifier/suites/serverspec -I/tmp/verifier/gems/gems/rspec-support-3.4.1/lib:/tmp/verifier/gems/gems/rspec-core-3.4.4/lib
      /opt/chef/embedded/bin/rspec --pattern /tmp/verifier/suites/serverspec/\\*\\*/\\*_spec.rb
      --color --format documentation --default-path /tmp/verifier/suites/serverspec\n
      \     D      Cleaning up local sandbox in /tmp/cheftest/fips-integration-centos-6-sandbox-20160617-21980-khbb6\n
      \            sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \            Finished verifying <fips-integration-centos-6> (0m11.14s).\n      D
      \     [SSH] shutting previous connection root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}>\n      D      [SSH] closing
      connection to root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}>\n\n             Chef Fips
      Unit/Functional Specs\n      D      Parsing CSV Response\n      D      \"src_md5\",\"tmpzip\",\"verifies\",\"tmpfile\",\"dst_md5\",\"dst\"\n
      \     \"5d2e53a5614191437bca7afdb9d7591e\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\",\"True\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\b64-5d2e53a5614191437bca7afdb9d7591e.txt\",\"5d2e53a5614191437bca7afdb9d7591e\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\verifier\\suites\"\n\n
      \     D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160617-21980-ilp7ca.zip\n
      \     D      Uploaded 1 items dirty_check: (0m1.09s) stream_files: (0m0.40s)
      decode: (0m1.18s)\n      D      Transfer complete\n      D      Parsing CSV
      Response\n      D      [WinRM] negotiate::http://10.194.9.191:5985/wsman<{:user=>\"administrator\",
      :pass=>\")eYvstpx7kW\", :elevated_username=>\"administrator\", :elevated_password=>\")eYvstpx7kW\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      test\n      )\n      D      \"src_md5\",\"tmpzip\",\"verifies\",\"tmpfile\",\"dst_md5\",\"dst\"\n
      \     \"a58c3771533a6479cf23bf871167f7d9\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\",\"True\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\b64-a58c3771533a6479cf23bf871167f7d9.txt\",\"a58c3771533a6479cf23bf871167f7d9\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\verifier\\suites\"\n\n
      \     D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160617-21980-emg48g.zip\n
      \     D      Uploaded 1 items dirty_check: (0m0.97s) stream_files: (0m0.32s)
      decode: (0m1.24s)\n      D      Transfer complete\n      D      [WinRM] negotiate::http://10.194.10.193:5985/wsman<{:user=>\"administrator\",
      :pass=>\"rW4?hqTd(w\", :elevated_username=>\"administrator\", :elevated_password=>\"rW4?hqTd(w\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      test\n      )\n      -----> Running serverspec test suite\n      -----> Bundle
      Installing..\n               run  C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      --local || C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      from \".\"\n      -----> Running serverspec test suite\n      -----> Bundle
      Installing..\n               run  C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      --local || C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      from \".\"\n             Could not find gem 'mixlib-shellout x64-mingw32' in
      any of the gem sources\n             listed in your Gemfile or available on
      this machine.\n             Could not find gem 'mixlib-shellout x64-mingw32'
      in any of the gem sources\n             listed in your Gemfile or available
      on this machine.\n             Fetching gem metadata from https://rubygems.org/\n
      \            Fetching version metadata from https://rubygems.org/\n             Resolving
      dependencies...\n             Fetching gem metadata from https://rubygems.org/\n
      \            Fetching version metadata from https://rubygems.org/\n             Resolving
      dependencies...\n             Installing ffi 1.9.10\n             Installing
      ffi 1.9.10\n             Installing wmi-lite 1.0.0\n             Using bundler
      1.12.5\n             Installing win32-process 0.8.3\n             Installing
      mixlib-shellout 2.2.6\n             Bundle complete! 1 Gemfile dependency, 5
      gems now installed.\n             Use `bundle show [gemname]` to see where a
      bundled gem is installed.\n      -----> Installing Serverspec..\n             Installing
      wmi-lite 1.0.0\n             Using bundler 1.12.5\n             Installing win32-process
      0.8.3\n             Installing mixlib-shellout 2.2.6\n             Bundle complete!
      1 Gemfile dependency, 5 gems now installed.\n             Use `bundle show [gemname]`
      to see where a bundled gem is installed.\n      -----> Installing Serverspec..\n
      \     -----> serverspec installed (version 2.36.0)\n      -----> serverspec
      installed (version 2.36.0)\n\n             Chef Fips Integration Specs\n               passes
      the integration specs (PENDING: No reason given)\n\n             Pending: (Failures
      listed here are expected and do not affect your suite's status)\n\n               1)
      Chef Fips Integration Specs passes the integration specs\n                  #
      No reason given\n                  # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/fips-integration_spec.rb:48\n\n
      \            Finished in 0 seconds (files took 1.38 seconds to load)\n             1
      example, 0 failures, 1 pending\n\n             C:/opscode/chef/embedded/bin/ruby.exe
      -IC:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec -I'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-support-3.4.1/lib';'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/lib'
      'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/exe/rspec'
      --pattern 'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/**/*_spec.rb'
      --color --format documentation --default-path C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec\n
      \     D      Cleaning up local sandbox in /tmp/cheftest/fips-integration-windows-2012r2-sandbox-20160617-21980-y6mv2n\n
      \            Finished verifying <fips-integration-windows-2012r2> (0m28.73s).\n\n
      \            Chef Fips Unit/Functional Specs\n      D      [WinRM] retrying
      receive request after timeout\n             \\33[32m  passes the unit specs\\33[0m\n
      \     D      [WinRM] retrying receive request after timeout\n      D      [WinRM]
      retrying receive request after timeout\n               passes the unit specs\n
      \     D      [WinRM] retrying receive request after timeout\n      D      [WinRM]
      retrying receive request after timeout\n      D      [WinRM] retrying receive
      request after timeout\n      D      [WinRM] retrying receive request after timeout\n
      \     D      [WinRM] retrying receive request after timeout\n      D      [WinRM]
      retrying receive request after timeout\n      D      [WinRM] retrying receive
      request after timeout\n      D      [WinRM] retrying receive request after timeout\n
      \     D      [WinRM] retrying receive request after timeout\n      D      [WinRM]
      retrying receive request after timeout\n      D      [WinRM] retrying receive
      request after timeout\n      D      [WinRM] retrying receive request after timeout\n
      \            \\33[32m  passes the functional specs\\33[0m\n\n             Finished
      in 17 minutes 3 seconds (files took 0.2283 seconds to load)\n             \\33[32m2
      examples, 0 failures\\33[0m\n\n      D      Cleaning up local sandbox in /tmp/cheftest/fips-unit-functional-centos-6-sandbox-20160617-21980-2vl32j\n
      \            Finished verifying <fips-unit-functional-centos-6> (17m13.94s).\n
      \     D      [SSH] shutting previous connection root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}>\n      D      [SSH] closing
      connection to root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}>\n      D      [WinRM] retrying
      receive request after timeout\n      D      [WinRM] retrying receive request
      after timeout\n               passes the functional specs (FAILED - 1)\n\n             Failures:\n\n
      \              1) Chef Fips Unit/Functional Specs passes the functional specs\n
      \                 Failure/Error: cmd.run_command.error!\n\n                  Mixlib::ShellOut::ShellCommandFailed:\n
      \            Expected process to exit with [0], but received '1'\n             ----
      Begin output of bundle exec rspec -f documentation -t ~requires_git spec/functional
      ----\n             STDOUT: Run options:\n               include {:focus=>true}\n
      \              exclude {:provider=>#<Proc:./spec/spec_helper.rb:180>, :arch=>#<Proc:./spec/spec_helper.rb:174>,
      :ruby=>\"2.1.8\", :chef=>\"12.12.2\", :not_supported_under_fips=>true, :not_wpar=>true,
      :broken=>true, :openssl_lt_101=>true, :requires_root=>true, :selinux_only=>true,
      :supports_cloexec=>true, :debian_family_only=>true, :aix_only=>true, :unix_only=>true,
      :solaris_only=>true, :windows_domain_joined_only=>true, :windows_powershell_no_dsc_only=>true,
      :ruby32_only=>true, :windows_nano_only=>true, :windows32_only=>true, :win2k3_only=>true,
      :mac_osx_only=>true, :appveyor_only=>true, :volatile_from_verify=>false, :volatile=>true,
      :external=>true, :requires_git=>true}\n\n             All examples were filtered
      out; ignoring {:focus=>true}\n\n             Chef::Application\n               when
      proxy options are set in config\n                 saves built proxy to ENV which
      shell_out can use\n\n             Chef::Audit::RspecFormatter\n               should
      not close the output using our formatter (PENDING: This spec requires forking
      to work properly, and your platform does not support forking)\n\n             Chef::Audit::Runner\n
      \              #run\n                 log location is stdout\n                   Correctly
      runs an empty controls block (PENDING: This spec requires forking to work properly,
      and your platform does not support forking)\n                   there is a single
      successful control\n                     correctly runs (PENDING: This spec
      requires forking to work properly, and your platform does not support forking)\n
      \                  there is a single failing control\n                     correctly
      runs (PENDING: This spec requires forking to work properly, and your platform
      does not support forking)\n\n             Chef::DSL::RebootPending\n               reboot_pending?\n
      \                HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\PendingFileRenameOperations\n
      \                  returns true if the registry value exists\n                 HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Component
      Based Servicing\\RebootRequired\n                   returns true if the registry
      key exists (PENDING: Permissions are limited to 'TrustedInstaller' by default)\n
      \                HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto
      Update\\RebootRequired\n                   returns true if the registry key
      exists\n                 when there is nothing to indicate a reboot is pending\n
      \                  should return false\n\n             Chef::Resource::RegistryKey\n
      \              tests registry dsl\n                 returns true if registry_key_exists\n
      \                returns true if registry has specified value\n                 returns
      true if specified registry_has_subkey\n                 returns true if specified
      key has specified subkey\n                 returns true if registry_value_exists\n
      \                returns true if data_value_exists\n\n             Chef::EventLoggers::WindowsEventLogger\n
      \              is available\n               writes run_start event with event_id
      10000 and contains version\n               writes run_started event with event_id
      10001 and contains the run_id\n               writes run_completed event with
      event_id 10002 and contains the run_id and elapsed time\n               writes
      run_failed event with event_id 10003 and contains the run_id, elapsed time,
      and exception info\n               writes run_failed event with event_id 10003
      even when run_status is not set\n\n             Chef::FileContentManagement::Deploy::Cp\n
      \              it should behave like a content deploy strategy\n                 creating
      the file\n                   touches the file to create it (Windows)\n                 updating
      the file\n                   maintains invariant properties on Windows\n                   updates
      the target with content from staged\n\n             Chef::FileContentManagement::Deploy::MvWindows\n
      \              when a file has no sacl\n                 it should behave like
      a content deploy strategy\n                   creating the file\n                     touches
      the file to create it (Windows)\n                   updating the file\n                     maintains
      invariant properties on Windows\n                     updates the target with
      content from staged\n\n             Chef::HTTP::Simple\n               behaves
      like downloading all the things\n                 when downloading a simple
      uncompressed file\n                   behaves like downloads requests correctly\n
      \                    successfully downloads a streaming request\n                     successfully
      does a non-streaming GET request\n                 when downloading a compressed
      file that should be left compressed\n                   behaves like downloads
      requests correctly\n                     successfully downloads a streaming
      request\n                     successfully does a non-streaming GET request\n
      \                when downloading a file that has been compressed by the webserver\n
      \                  behaves like downloads requests correctly\n                     successfully
      downloads a streaming request\n                     successfully does a non-streaming
      GET request\n                 when downloading an uncompressed file with a correct
      content_length\n                   behaves like downloads requests correctly\n
      \                    successfully downloads a streaming request\n                     successfully
      does a non-streaming GET request\n                 when downloading a file that
      has been compressed by the webserver with a correct content_length\n                   behaves
      like downloads requests correctly\n                     successfully downloads
      a streaming request\n                     successfully does a non-streaming
      GET request\n                 when downloading an uncompressed file that is
      truncated\n                   behaves like validates content length and throws
      an exception\n                     successfully downloads a streaming request\n
      \                    successfully does a non-streaming GET request\n                 when
      downloading a file that has been compressed by the webserver that is truncated\n
      \                  behaves like validates content length and throws an exception\n
      \                    successfully downloads a streaming request\n                     successfully
      does a non-streaming GET request\n                 when downloading a file that
      has transfer encoding set with a bad content length that should be ignored\n
      \                  behaves like downloads requests correctly\n                     successfully
      downloads a streaming request\n                     successfully does a non-streaming
      GET request\n                 when downloading an endpoint that 403s\n                   behaves
      like an endpoint that 403s\n                     fails with a Net::HTTPServerException
      for a streaming request\n                     fails with a Net::HTTPServerException
      for a GET request\n                 when downloading an endpoint that 403s\n
      \                  behaves like a 403 after a successful request when reusing
      the request object\n                     fails with a Net::HTTPServerException
      for a streaming request\n                     fails with a Net::HTTPServerException
      for a GET request\n               when Chef::Log.level = :debug\n                 Logs
      the request and response for 200's but not the body\n                 Logs the
      request and response for 200 POST, but not the body\n                 Logs the
      request and response and bodies for 400 response\n                 Logs the
      request and response and bodies for 400 POST response\n\n             knife
      configure\n               loads the fqdn from Ohai\n\n             Chef::Knife::CookbookDelete\n
      \              when the cookbook doesn't exist\n                 logs an error
      and exits\n               when there is only one version of a cookbook\n                 asks
      for confirmation, then deletes the cookbook\n                 asks for confirmation
      before purging\n               when there are several versions of a cookbook\n
      \                deletes all versions of a cookbook when given the '-a' flag\n
      \                asks which version to delete and deletes that when not given
      the -a flag\n                 deletes all versions of the cookbook when not
      given the -a flag and the user chooses to delete all\n\n             Chef::Knife::Exec\n
      \              executes a script in the context of the chef-shell main context\n\n
      \            knife rehash\n             Using knife-rehash will speed up knife's
      load time by caching the location of subcommands on disk.\n             However,
      you will need to update the cache by running `knife rehash` anytime you install
      a new knife plugin.\n             Knife subcommands are cached in C:/Users/Administrator/.chef/plugin_manifest.json.
      Delete this file to disable the caching.\n               writes the loaded plugins
      to disc\n\n             Chef::Knife::Ssh\n               identity file\n                 when
      knife[:ssh_identity_file] is set\n                   uses the ssh_identity_file\n
      \                when knife[:ssh_identity_file] is set and frozen\n                   uses
      the ssh_identity_file\n                 when -i is provided\n                   should
      use the value on the command line\n                   should override what is
      set in knife.rb\n                 when knife[:ssh_identity_file] is not provided]\n
      \                  uses the default\n               port\n                 when
      -p 31337 is provided\n                   uses the ssh_port\n               user\n
      \                when knife[:ssh_user] is set\n                   uses the ssh_user\n
      \                when knife[:ssh_user] is set and frozen\n                   uses
      the ssh_user\n                 when -x is provided\n                   should
      use the value on the command line\n                   should override what is
      set in knife.rb\n                 when knife[:ssh_user] is not provided]\n                   uses
      the default (current user)\n               attribute\n                 when
      knife[:ssh_attribute] is set\n                   uses the ssh_attribute\n                 when
      knife[:ssh_attribute] is not provided]\n                   uses the default\n
      \                when -a ec2.public_ipv4 is provided\n                   should
      use the value on the command line\n                   should override what is
      set in knife.rb\n               gateway\n                 when knife[:ssh_gateway]
      is set\n                   uses the ssh_gateway\n                 when -G user@ec2.public_hostname
      is provided\n                   uses the ssh_gateway\n                 when
      the gateway requires a password\n                   should prompt the user for
      a password\n\n             Chef::Mixin::PowershellOut\n               #powershell_out\n
      \                runs a powershell command and collects stdout\n                 does
      not raise exceptions when the command is invalid\n               #powershell_out!\n
      \                runs a powershell command and collects stdout\n                 raises
      exceptions when the command is invalid\n\n             Chef::Mixin::ShellOut\n
      \              shell_out_with_systems_locale\n                 when environment['LC_ALL']
      is not set\n                   should use the default shell_out setting\n                 when
      environment['LC_ALL'] is set\n                   should use the option's setting\n\n
      \            Notifications\n               should subscribe from one resource
      to another\n               should notify from one resource to another immediately\n
      \              should notify from one resource to another before\n               should
      not notify from one resource to another before if the resource is not updated\n
      \              should notify from one resource to another delayed\n               when
      one resource is defined lazily\n                 subscribes to a resource defined
      in a ruby block\n                 notifies from inside a ruby_block to a resource
      defined outside\n\n             Chef::Provider::RemoteFile::CacheControlData\n
      \              when the cache control data save method is invoked\n                 writes
      data to the cache\n                 writes the data to the cache and the same
      data can be read back\n                 when the length of the uri exceeds the
      path length limits for the local file system\n                   writes data
      to the cache\n                   writes the data to the cache and the same data
      can be read back\n\n             Chef::Resource::WhyrunSafeRubyBlock\n               when
      testing the resource\n                 updates the evil laugh, even in why-run
      mode\n\n             Chef::Platform::Rebooter\n               #reboot_if_needed!\n
      \                should not call #shell_out! when reboot has not been requested\n
      \                calling #shell_out! to reboot\n                   when using
      #reboot_if_needed!\n                     should produce the correct string on
      Windows\n                     should produce the correct (Linux-specific) string
      on non-Windows\n                   when using #reboot!\n                     should
      produce the correct string on Windows\n                     should produce the
      correct (Linux-specific) string on non-Windows\n\n             Chef::Resource::Batch\n
      \              behaves like a Windows script running on Windows\n                 when
      the run action is invoked on Windows\n                   executes the script
      code\n                 when $env:TMP has a space\n                   executes
      the script code\n                 when evaluating guards\n                   has
      a guard_interpreter attribute set to the short name of the resource\n                 when
      the architecture attribute is not set\n                   behaves like a script
      resource with architecture attribute\n                     with the given architecture
      attribute value\n                       creates a process with the expected
      architecture\n                       executes guards with the same architecture
      as the resource\n                       when the guard's architecture is specified
      as 64-bit\n                         executes a 64-bit guard\n                       when
      the guard's architecture is specified as 32-bit\n                         executes
      a 32-bit guard\n                 when the architecture attribute is :i386\n
      \                  behaves like a script resource with architecture attribute\n
      \                    with the given architecture attribute value\n                       creates
      a process with the expected architecture\n                       executes guards
      with the same architecture as the resource\n                       when the
      guard's architecture is specified as 64-bit\n                         executes
      a 64-bit guard\n                       when the guard's architecture is specified
      as 32-bit\n                         executes a 32-bit guard\n                 when
      the architecture attribute is :x86_64\n                   behaves like a script
      resource with architecture attribute\n                     with the given architecture
      attribute value\n                       creates a process with the expected
      architecture\n                       executes guards with the same architecture
      as the resource\n                       when the guard's architecture is specified
      as 64-bit\n                         executes a 64-bit guard\n                       when
      the guard's architecture is specified as 32-bit\n                         executes
      a 32-bit guard\n\n             Chef::Resource::ChocolateyPackage\n               installing
      a package\n                 installs the latest version\n                 does
      not install if already installed\n                 installs version given\n
      \                installs new version if one is already installed\n                 raises
      if package is not found\n                 installing multiple packages\n                   installs
      both packages\n               upgrading a package\n                 upgrades
      to a specific version\n                 upgrades to the latest version if no
      version given\n               removing a package\n                 removes an
      installed package\n\n             Chef::Resource::CookbookFile\n               behaves
      like a securable resource with reporting\n                 reading file security
      metadata for reporting on windows\n                   when the target file doesn't
      exist\n                     has empty values for file metadata in 'current_resource'
      (PENDING: windows reporting not yet fully supported)\n                     and
      no security metadata is specified in new_resource\n                       sets
      the metadata values on the new_resource as strings after creating (PENDING:
      windows reporting not yet fully supported)\n                     and owner is
      specified with a string (username) in new_resource\n                       sets
      the owner on new_resource to the username (string) of the desired owner\n                     and
      owner is specified with a fully qualified domain user\n                       sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                   when the target
      file exists\n                     and no security metadata is specified in new_resource\n
      \                      sets the current values on current resource as strings
      (PENDING: windows reporting not yet fully supported)\n                     and
      owner is specified with a string (username) in new_resource\n                       sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                     and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                       sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                     and
      access rights are specified on the new_resource\n                       sets
      the expanded_rights on the current resource (PENDING: windows reporting not
      yet fully supported)\n                     and no access rights are specified
      on the current resource\n                       sets the expanded rights on
      the current resource (PENDING: windows reporting not yet fully supported)\n
      \              behaves like a file resource\n                 when deploying
      with :move\n                   when deploying via tmpdir\n                     behaves
      like a configured file resource\n                       when the target file
      is a symlink\n                         when configured not to manage symlink's
      target\n                           when symlink target has correct content\n
      \                            behaves like file resource not pointing to a real
      file\n                               when force_unlink is set to true\n                                 :create
      unlinks the target\n                               when force_unlink is set
      to false\n                                 :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when symlink target has the wrong
      content\n                             behaves like file resource not pointing
      to a real file\n                               when force_unlink is set to true\n
      \                                :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                       when
      the target file does not exist\n                         when force_unlink is
      set to true\n                           :create updates the target\n                         when
      force_unlink is set to false\n                           :create updates the
      target\n                         when force_unlink is not set (default)\n                           :create
      updates the target\n                       when the target file is a directory\n
      \                        behaves like file resource not pointing to a real file\n
      \                          when force_unlink is set to true\n                             :create
      unlinks the target\n                           when force_unlink is set to false\n
      \                            :create raises an error\n                           when
      force_unlink is not set (default)\n                             :create raises
      an error\n                       when notification is configured\n                         when
      path is specified with normal separator\n                           should notify
      the other resources correctly\n                         when path is specified
      with windows separator\n                           should notify the other resources
      correctly\n                       when the target file does not exist\n                         when
      running action :create\n                           creates the file when the
      :create action is run\n                           creates the file with the
      correct content when the :create action is run\n                           is
      marked as updated by last action\n                         when running action
      :create_if_missing\n                           creates the file with the correct
      content\n                           is marked as updated by last action\n                         when
      running action :delete\n                           deletes the file when the
      :delete action is run\n                           is not marked updated by last
      action\n                       behaves like a securable resource without existing
      target\n                         on Windows\n                           leaves
      owner as system default on create if owner is not specified\n                           sets
      owner when owner is specified\n                           fails to set owner
      when owner has invalid characters\n                           sets owner when
      owner is specified with a \\\n                           leaves owner alone
      if owner is not specified and resource already exists\n                           leaves
      group as system default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                   when deploying via destdir\n
      \                    behaves like a configured file resource\n                       when
      the target file is a symlink\n                         when configured not to
      manage symlink's target\n                           when symlink target has
      correct content\n                             behaves like file resource not
      pointing to a real file\n                               when force_unlink is
      set to true\n                                 :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                           when
      symlink target has the wrong content\n                             behaves like
      file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                       when the target file does not exist\n
      \                        when force_unlink is set to true\n                           :create
      updates the target\n                         when force_unlink is set to false\n
      \                          :create updates the target\n                         when
      force_unlink is not set (default)\n                           :create updates
      the target\n                       when the target file is a directory\n                         behaves
      like file resource not pointing to a real file\n                           when
      force_unlink is set to true\n                             :create unlinks the
      target\n                           when force_unlink is set to false\n                             :create
      raises an error\n                           when force_unlink is not set (default)\n
      \                            :create raises an error\n                       when
      notification is configured\n                         when path is specified
      with normal separator\n                           should notify the other resources
      correctly\n                         when path is specified with windows separator\n
      \                          should notify the other resources correctly\n                       when
      the target file does not exist\n                         when running action
      :create\n                           creates the file when the :create action
      is run\n                           creates the file with the correct content
      when the :create action is run\n                           is marked as updated
      by last action\n                         when running action :create_if_missing\n
      \                          creates the file with the correct content\n                           is
      marked as updated by last action\n                         when running action
      :delete\n                           deletes the file when the :delete action
      is run\n                           is not marked updated by last action\n                       behaves
      like a securable resource without existing target\n                         on
      Windows\n                           leaves owner as system default on create
      if owner is not specified\n                           sets owner when owner
      is specified\n                           fails to set owner when owner has invalid
      characters\n                           sets owner when owner is specified with
      a \\\n                           leaves owner alone if owner is not specified
      and resource already exists\n                           leaves group as system
      default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                 when deploying with :copy\n
      \                  when deploying via tmpdir\n                     behaves like
      a configured file resource\n                       when the target file is a
      symlink\n                         when configured not to manage symlink's target\n
      \                          when symlink target has correct content\n                             behaves
      like file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when symlink target has the wrong
      content\n                             behaves like file resource not pointing
      to a real file\n                               when force_unlink is set to true\n
      \                                :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                       when
      the target file does not exist\n                         when force_unlink is
      set to true\n                           :create updates the target\n                         when
      force_unlink is set to false\n                           :create updates the
      target\n                         when force_unlink is not set (default)\n                           :create
      updates the target\n                       when the target file is a directory\n
      \                        behaves like file resource not pointing to a real file\n
      \                          when force_unlink is set to true\n                             :create
      unlinks the target\n                           when force_unlink is set to false\n
      \                            :create raises an error\n                           when
      force_unlink is not set (default)\n                             :create raises
      an error\n                       when notification is configured\n                         when
      path is specified with normal separator\n                           should notify
      the other resources correctly\n                         when path is specified
      with windows separator\n                           should notify the other resources
      correctly\n                       when the target file does not exist\n                         when
      running action :create\n                           creates the file when the
      :create action is run\n                           creates the file with the
      correct content when the :create action is run\n                           is
      marked as updated by last action\n                         when running action
      :create_if_missing\n                           creates the file with the correct
      content\n                           is marked as updated by last action\n                         when
      running action :delete\n                           deletes the file when the
      :delete action is run\n                           is not marked updated by last
      action\n                       behaves like a securable resource without existing
      target\n                         on Windows\n                           leaves
      owner as system default on create if owner is not specified\n                           sets
      owner when owner is specified\n                           fails to set owner
      when owner has invalid characters\n                           sets owner when
      owner is specified with a \\\n                           leaves owner alone
      if owner is not specified and resource already exists\n                           leaves
      group as system default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                   when deploying via destdir\n
      \                    behaves like a configured file resource\n                       when
      the target file is a symlink\n                         when configured not to
      manage symlink's target\n                           when symlink target has
      correct content\n                             behaves like file resource not
      pointing to a real file\n                               when force_unlink is
      set to true\n                                 :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                           when
      symlink target has the wrong content\n                             behaves like
      file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                       when the target file does not exist\n
      \                        when force_unlink is set to true\n                           :create
      updates the target\n                         when force_unlink is set to false\n
      \                          :create updates the target\n                         when
      force_unlink is not set (default)\n                           :create updates
      the target\n                       when the target file is a directory\n                         behaves
      like file resource not pointing to a real file\n                           when
      force_unlink is set to true\n                             :create unlinks the
      target\n                           when force_unlink is set to false\n                             :create
      raises an error\n                           when force_unlink is not set (default)\n
      \                            :create raises an error\n                       when
      notification is configured\n                         when path is specified
      with normal separator\n                           should notify the other resources
      correctly\n                         when path is specified with windows separator\n
      \                          should notify the other resources correctly\n                       when
      the target file does not exist\n                         when running action
      :create\n                           creates the file when the :create action
      is run\n                           creates the file with the correct content
      when the :create action is run\n                           is marked as updated
      by last action\n                         when running action :create_if_missing\n
      \                          creates the file with the correct content\n                           is
      marked as updated by last action\n                         when running action
      :delete\n                           deletes the file when the :delete action
      is run\n                           is not marked updated by last action\n                       behaves
      like a securable resource without existing target\n                         on
      Windows\n                           leaves owner as system default on create
      if owner is not specified\n                           sets owner when owner
      is specified\n                           fails to set owner when owner has invalid
      characters\n                           sets owner when owner is specified with
      a \\\n                           leaves owner alone if owner is not specified
      and resource already exists\n                           leaves group as system
      default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                 when running under why run\n
      \                  and the resource has a path with a missing intermediate directory\n
      \                    successfully doesn't create the file\n                 when
      setting atomic_update\n                   booleans should work\n                   anything
      else should raise an error\n\n             Chef::Resource::Directory\n               behaves
      like a directory resource\n                 when the target directory does not
      exist\n                   when running action :create\n                     and
      the recursive option is not set\n                       creates the directory
      when the :create action is run\n                       is marked updated by
      last action\n                     and the recursive option is set\n                       recursively
      creates required directories\n                       is marked updated by last
      action\n                   behaves like a securable resource without existing
      target\n                     on Windows\n                       leaves owner
      as system default on create if owner is not specified\n                       sets
      owner when owner is specified\n                       fails to set owner when
      owner has invalid characters\n                       sets owner when owner is
      specified with a \\\n                       leaves owner alone if owner is not
      specified and resource already exists\n                       leaves group as
      system default on create if group is not specified\n                       sets
      group when group is specified\n                       fails to set group when
      group has invalid characters\n                       leaves group alone if group
      is not specified and resource already exists\n                       does not
      inherit aces if inherits is set to false\n                       has the inheritable
      acls of parent directory if no acl is specified\n                       with
      rights and deny_rights attributes\n                         correctly sets :read
      rights\n                         correctly sets :read_execute rights\n                         correctly
      sets :write rights\n                         correctly sets :modify rights\n
      \                        correctly sets :full_control rights\n                         correctly
      sets deny_rights\n                         Sets multiple rights\n                         Sets
      deny_rights ahead of rights\n                         Sets deny_rights ahead
      of rights when specified in reverse order\n                       with a mode
      attribute\n                         respects mode in string form as an octal
      number\n                         respects mode in numeric form as a ruby-interpreted
      octal\n                         respects the owner, group and everyone bits
      of mode\n                         respects the individual read, write and execute
      bits of mode\n                         warns when mode tries to set owner bits
      but owner is not specified\n                         warns when mode tries to
      set group bits but group is not specified\n                 when the target
      directory exists\n                   when running action :create\n                     does
      not re-create the directory\n                     is not marked updated by last
      action\n                   when running action :delete\n                     without
      the recursive option\n                       deletes the directory\n                       is
      marked as updated by last action\n                     with the recursive option\n
      \                      recursively deletes directories\n               behaves
      like a securable resource with reporting\n                 reading file security
      metadata for reporting on windows\n                   when the target file doesn't
      exist\n                     has empty values for file metadata in 'current_resource'
      (PENDING: windows reporting not yet fully supported)\n                     and
      no security metadata is specified in new_resource\n                       sets
      the metadata values on the new_resource as strings after creating (PENDING:
      windows reporting not yet fully supported)\n                     and owner is
      specified with a string (username) in new_resource\n                       sets
      the owner on new_resource to the username (string) of the desired owner\n                     and
      owner is specified with a fully qualified domain user\n                       sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                   when the target
      file exists\n                     and no security metadata is specified in new_resource\n
      \                      sets the current values on current resource as strings
      (PENDING: windows reporting not yet fully supported)\n                     and
      owner is specified with a string (username) in new_resource\n                       sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                     and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                       sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                     and
      access rights are specified on the new_resource\n                       sets
      the expanded_rights on the current resource (PENDING: windows reporting not
      yet fully supported)\n                     and no access rights are specified
      on the current resource\n                       sets the expanded rights on
      the current resource (PENDING: windows reporting not yet fully supported)\n\n
      \            Chef::Resource::DscResource\n               when Powershell supports
      Invoke-DscResource\n                 with an invalid dsc resource\n                   raises
      an exception if the resource is not found (PENDING: Requires Powershell >= 5.0.10018.0)\n
      \                with a valid dsc resource\n                   converges the
      resource if it is not converged (PENDING: Requires Powershell >= 5.0.10018.0)\n
      \                  does not converge the resource if it is already converged
      (PENDING: Requires Powershell >= 5.0.10018.0)\n\n             Chef::Resource::DscScript\n
      \              when supplying configuration through the configuration attribute\n
      \                behaves like a dsc_script resource with specified PowerShell
      configuration code\n                   should create a registry key with a specific
      registry value and data\n                   it should behave like a dsc_script
      resource with configuration affected by cwd\n                     when the DSC
      configuration contains code that raises an exception if cwd has a specific value\n
      \                      should not raise an exception if the cwd is not etc\n
      \                      should raise an exception if the cwd is etc\n               when
      supplying configuration using the path attribute\n                 behaves like
      a dsc_script resource with specified PowerShell configuration code\n                   should
      create a registry key with a specific registry value and data\n                   it
      should behave like a dsc_script resource with configuration affected by cwd\n
      \                    when the DSC configuration contains code that raises an
      exception if cwd has a specific value\n                       should not raise
      an exception if the cwd is not etc\n                       should raise an exception
      if the cwd is etc\n               when running a configuration that manages
      users\n                 behaves like a dsc_script with configuration data\n
      \                  behaves like a dsc_script with configuration data set via
      an attribute\n                     should run a configuration script that creates
      a user\n                   behaves like a dsc_script with configuration data
      set via an attribute\n                     should run a configuration script
      that creates a user\n                 behaves like a dsc_script with configuration
      data that uses environment variables\n                   does not directly contain
      the user name\n                   behaves like a dsc_script with configuration
      data\n                     behaves like a dsc_script with configuration data
      set via an attribute\n                       should run a configuration script
      that creates a user\n                     behaves like a dsc_script with configuration
      data set via an attribute\n                       should run a configuration
      script that creates a user\n                 behaves like a dsc_script with
      configuration data that takes parameters\n                   does not directly
      contain the user name\n                   behaves like a dsc_script with configuration
      data\n                     behaves like a dsc_script with configuration data
      set via an attribute\n                       should run a configuration script
      that creates a user\n                     behaves like a dsc_script with configuration
      data set via an attribute\n                       should run a configuration
      script that creates a user\n                 behaves like a dsc_script without
      configuration data that takes parameters\n                   when configuration
      data is not specified\n                     should have a default value of nil
      for the configuration_data attribute\n                     should have a default
      value of nil for the configuration_data_path attribute\n                     should
      set a registry key according to parameters passed to the configuration\n               when
      using ps_credential\n                 allows the use of ps_credential (FAILED
      - 1)\n\n             Chef::Resource::Env\n               when running on Windows\n
      \                when the create action is invoked\n                   should
      create an environment variable for action create\n                   should
      modify an existing variable's value to a new value\n                   should
      modify an existing variable's value to a new value if the variable name case
      differs from the existing variable\n                   should not expand environment
      variables if the variable is not PATH\n                 when the modify action
      is invoked\n                   should raise an exception for modify if the variable
      doesn't exist\n                   should modify an existing variable's value
      to a new value\n                   should modify an existing variable's value
      to a new value if the variable name case differs from the existing variable\n
      \                  should not expand environment variables if the variable is
      not PATH\n                   when using PATH\n                     should expand
      PATH\n                 when the delete action is invoked\n                   should
      delete an environment variable\n                   should not raise an exception
      when a non-existent environment variable is deleted\n                   should
      delete an existing variable's value to a new value if the specified variable
      name case differs from the existing variable\n                   should delete
      a value from the current process even if it is not in the registry\n\n             Chef::Resource::Execute\n
      \              times out when a timeout is set on the resource\n               when
      guard is ruby block\n                 guard can still run\n               when
      why_run is enabled\n                 executes the guard and not the regular
      resource\n               when parent resource sets :cwd\n                 guard
      inherits :cwd from resource and runs\n                 guard inherits :cwd from
      resource and does not run\n               when parent resource sets :environment\n
      \                guard inherits :environment value from resource and runs\n
      \                guard inherits :environment value from resource and does not
      run\n                 guard adds additional values in its :environment and runs\n
      \                guard adds additional values in its :environment and does not
      run\n                 guard overwrites value with its :environment and runs\n
      \                guard overwrites value with its :environment and does not runs\n\n
      \            Chef::Resource::File\n               behaves like a file resource\n
      \                when deploying with :move\n                   when deploying
      via tmpdir\n                     behaves like a configured file resource\n                       when
      the target file is a symlink\n                         when configured not to
      manage symlink's target\n                           when symlink target has
      correct content\n                             behaves like file resource not
      pointing to a real file\n                               when force_unlink is
      set to true\n                                 :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                           when
      symlink target has the wrong content\n                             behaves like
      file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                       when the target file does not exist\n
      \                        when force_unlink is set to true\n                           :create
      updates the target\n                         when force_unlink is set to false\n
      \                          :create updates the target\n                         when
      force_unlink is not set (default)\n                           :create updates
      the target\n                       when the target file is a directory\n                         behaves
      like file resource not pointing to a real file\n                           when
      force_unlink is set to true\n                             :create unlinks the
      target\n                           when force_unlink is set to false\n                             :create
      raises an error\n                           when force_unlink is not set (default)\n
      \                            :create raises an error\n                       when
      notification is configured\n                         when path is specified
      with normal separator\n                           should notify the other resources
      correctly\n                         when path is specified with windows separator\n
      \                          should notify the other resources correctly\n                       when
      the target file does not exist\n                         when running action
      :create\n                           creates the file when the :create action
      is run\n                           creates the file with the correct content
      when the :create action is run\n                           is marked as updated
      by last action\n                         when running action :create_if_missing\n
      \                          creates the file with the correct content\n                           is
      marked as updated by last action\n                         when running action
      :delete\n                           deletes the file when the :delete action
      is run\n                           is not marked updated by last action\n                       behaves
      like a securable resource without existing target\n                         on
      Windows\n                           leaves owner as system default on create
      if owner is not specified\n                           sets owner when owner
      is specified\n                           fails to set owner when owner has invalid
      characters\n                           sets owner when owner is specified with
      a \\\n                           leaves owner alone if owner is not specified
      and resource already exists\n                           leaves group as system
      default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                   when deploying via destdir\n
      \                    behaves like a configured file resource\n                       when
      the target file is a symlink\n                         when configured not to
      manage symlink's target\n                           when symlink target has
      correct content\n                             behaves like file resource not
      pointing to a real file\n                               when force_unlink is
      set to true\n                                 :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                           when
      symlink target has the wrong content\n                             behaves like
      file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                       when the target file does not exist\n
      \                        when force_unlink is set to true\n                           :create
      updates the target\n                         when force_unlink is set to false\n
      \                          :create updates the target\n                         when
      force_unlink is not set (default)\n                           :create updates
      the target\n                       when the target file is a directory\n                         behaves
      like file resource not pointing to a real file\n                           when
      force_unlink is set to true\n                             :create unlinks the
      target\n                           when force_unlink is set to false\n                             :create
      raises an error\n                           when force_unlink is not set (default)\n
      \                            :create raises an error\n                       when
      notification is configured\n                         when path is specified
      with normal separator\n                           should notify the other resources
      correctly\n                         when path is specified with windows separator\n
      \                          should notify the other resources correctly\n                       when
      the target file does not exist\n                         when running action
      :create\n                           creates the file when the :create action
      is run\n                           creates the file with the correct content
      when the :create action is run\n                           is marked as updated
      by last action\n                         when running action :create_if_missing\n
      \                          creates the file with the correct content\n                           is
      marked as updated by last action\n                         when running action
      :delete\n                           deletes the file when the :delete action
      is run\n                           is not marked updated by last action\n                       behaves
      like a securable resource without existing target\n                         on
      Windows\n                           leaves owner as system default on create
      if owner is not specified\n                           sets owner when owner
      is specified\n                           fails to set owner when owner has invalid
      characters\n                           sets owner when owner is specified with
      a \\\n                           leaves owner alone if owner is not specified
      and resource already exists\n                           leaves group as system
      default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                 when deploying with :copy\n
      \                  when deploying via tmpdir\n                     behaves like
      a configured file resource\n                       when the target file is a
      symlink\n                         when configured not to manage symlink's target\n
      \                          when symlink target has correct content\n                             behaves
      like file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when symlink target has the wrong
      content\n                             behaves like file resource not pointing
      to a real file\n                               when force_unlink is set to true\n
      \                                :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                       when
      the target file does not exist\n                         when force_unlink is
      set to true\n                           :create updates the target\n                         when
      force_unlink is set to false\n                           :create updates the
      target\n                         when force_unlink is not set (default)\n                           :create
      updates the target\n                       when the target file is a directory\n
      \                        behaves like file resource not pointing to a real file\n
      \                          when force_unlink is set to true\n                             :create
      unlinks the target\n                           when force_unlink is set to false\n
      \                            :create raises an error\n                           when
      force_unlink is not set (default)\n                             :create raises
      an error\n                       when notification is configured\n                         when
      path is specified with normal separator\n                           should notify
      the other resources correctly\n                         when path is specified
      with windows separator\n                           should notify the other resources
      correctly\n                       when the target file does not exist\n                         when
      running action :create\n                           creates the file when the
      :create action is run\n                           creates the file with the
      correct content when the :create action is run\n                           is
      marked as updated by last action\n                         when running action
      :create_if_missing\n                           creates the file with the correct
      content\n                           is marked as updated by last action\n                         when
      running action :delete\n                           deletes the file when the
      :delete action is run\n                           is not marked updated by last
      action\n                       behaves like a securable resource without existing
      target\n                         on Windows\n                           leaves
      owner as system default on create if owner is not specified\n                           sets
      owner when owner is specified\n                           fails to set owner
      when owner has invalid characters\n                           sets owner when
      owner is specified with a \\\n                           leaves owner alone
      if owner is not specified and resource already exists\n                           leaves
      group as system default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                   when deploying via destdir\n
      \                    behaves like a configured file resource\n                       when
      the target file is a symlink\n                         when configured not to
      manage symlink's target\n                           when symlink target has
      correct content\n                             behaves like file resource not
      pointing to a real file\n                               when force_unlink is
      set to true\n                                 :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                           when
      symlink target has the wrong content\n                             behaves like
      file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                       when the target file does not exist\n
      \                        when force_unlink is set to true\n                           :create
      updates the target\n                         when force_unlink is set to false\n
      \                          :create updates the target\n                         when
      force_unlink is not set (default)\n                           :create updates
      the target\n                       when the target file is a directory\n                         behaves
      like file resource not pointing to a real file\n                           when
      force_unlink is set to true\n                             :create unlinks the
      target\n                           when force_unlink is set to false\n                             :create
      raises an error\n                           when force_unlink is not set (default)\n
      \                            :create raises an error\n                       when
      notification is configured\n                         when path is specified
      with normal separator\n                           should notify the other resources
      correctly\n                         when path is specified with windows separator\n
      \                          should notify the other resources correctly\n                       when
      the target file does not exist\n                         when running action
      :create\n                           creates the file when the :create action
      is run\n                           creates the file with the correct content
      when the :create action is run\n                           is marked as updated
      by last action\n                         when running action :create_if_missing\n
      \                          creates the file with the correct content\n                           is
      marked as updated by last action\n                         when running action
      :delete\n                           deletes the file when the :delete action
      is run\n                           is not marked updated by last action\n                       behaves
      like a securable resource without existing target\n                         on
      Windows\n                           leaves owner as system default on create
      if owner is not specified\n                           sets owner when owner
      is specified\n                           fails to set owner when owner has invalid
      characters\n                           sets owner when owner is specified with
      a \\\n                           leaves owner alone if owner is not specified
      and resource already exists\n                           leaves group as system
      default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                 when running under why run\n
      \                  and the resource has a path with a missing intermediate directory\n
      \                    successfully doesn't create the file\n                 when
      setting atomic_update\n                   booleans should work\n                   anything
      else should raise an error\n               behaves like a securable resource
      with reporting\n                 reading file security metadata for reporting
      on windows\n                   when the target file doesn't exist\n                     has
      empty values for file metadata in 'current_resource' (PENDING: windows reporting
      not yet fully supported)\n                     and no security metadata is specified
      in new_resource\n                       sets the metadata values on the new_resource
      as strings after creating (PENDING: windows reporting not yet fully supported)\n
      \                    and owner is specified with a string (username) in new_resource\n
      \                      sets the owner on new_resource to the username (string)
      of the desired owner\n                     and owner is specified with a fully
      qualified domain user\n                       sets the owner on new_resource
      to the fully qualified name of the desired owner (PENDING: windows reporting
      not yet fully supported)\n                   when the target file exists\n                     and
      no security metadata is specified in new_resource\n                       sets
      the current values on current resource as strings (PENDING: windows reporting
      not yet fully supported)\n                     and owner is specified with a
      string (username) in new_resource\n                       sets the owner on
      current_resource to the username (string) of the desired owner (PENDING: windows
      reporting not yet fully supported)\n                     and owner is specified
      as a fully qualified 'domain\\user' in new_resource\n                       sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                     and
      access rights are specified on the new_resource\n                       sets
      the expanded_rights on the current resource (PENDING: windows reporting not
      yet fully supported)\n                     and no access rights are specified
      on the current resource\n                       sets the expanded rights on
      the current resource (PENDING: windows reporting not yet fully supported)\n
      \              when running action :create without content\n                 and
      the target file does not exist\n                   creates the file\n                   is
      marked updated by last action\n               when using backup\n                 only
      stores the number of requested backups\n               when running action :create
      on a relative path\n                 and the file exists\n                   should
      run without an exception\n               when running action :touch\n                 and
      the target file does not exist\n                   it creates the file\n                   is
      marked updated by last action\n                 and the target file exists and
      has the correct content\n                   updates the mtime of the file\n
      \                  does not change the content\n                   is marked
      as updated by last action\n\n             Chef::Resource::Group\n               append
      should be false by default\n               group create action\n                 should
      create a group\n                 when group name is length 256\n                   should
      create a group\n                 when group name length is more than 256\n                   should
      not create a group\n                 should raise an error when same member
      is included in the members and excluded_members\n                   should raise
      an error\n               group remove action\n                 when there is
      a group\n                   should remove a group\n                 when there
      is no group\n                   should be no-op\n               group modify
      action\n                 when there is no group\n                   should raise
      an error\n                 when there is a group\n                   behaves
      like correct group management\n                     when no users exist\n                       when
      append is not set\n                         should raise an error\n                       when
      append is set\n                         should raise an error\n                     when
      the users exist\n                       when append is not set\n                         should
      set the group to to contain given members\n                         when group
      already contains some users\n                           should remove all existing
      users and only add the new users to the group\n                       when append
      is set\n                         should add included members to the group\n
      \                        when group already contains some users\n                           should
      add the included users and remove excluded users\n                 when running
      on Windows\n                   behaves like an expected invalid domain error
      case\n                     when updating membership\n                       raises
      an error for a non well-formed domain name\n                       raises an
      error for a nonexistent domain\n                     when removing members\n
      \                      does not raise an error for a non well-formed domain
      name\n                       does not raise an error for a nonexistent domain\n
      \              group manage action\n                 when there is no group\n
      \                  raises an error on modify\n                   does not raise
      an error on manage\n                 when there is a group\n                   behaves
      like correct group management\n                     when no users exist\n                       when
      append is not set\n                         should raise an error\n                       when
      append is set\n                         should raise an error\n                     when
      the users exist\n                       when append is not set\n                         should
      set the group to to contain given members\n                         when group
      already contains some users\n                           should remove all existing
      users and only add the new users to the group\n                       when append
      is set\n                         should add included members to the group\n
      \                        when group already contains some users\n                           should
      add the included users and remove excluded users\n                 running on
      windows\n                   behaves like an expected invalid domain error case\n
      \                    when updating membership\n                       raises
      an error for a non well-formed domain name\n                       raises an
      error for a nonexistent domain\n                     when removing members\n
      \                      does not raise an error for a non well-formed domain
      name\n                       does not raise an error for a nonexistent domain\n\n
      \            Chef::Resource::Link\n               when supported on platform\n
      \                is symbolic\n                   when the link destination is
      a file\n                     and the link does not yet exist\n                       the
      :create action\n                         links to the target file\n                         marks
      the resource updated\n                         logs that it created\n                       the
      :delete action\n                         leaves the file deleted\n                         does
      not mark the resource updated\n                         does not log that it
      deleted\n                     and the link already exists and is a symbolic
      link\n                       pointing at the target\n                         the
      :delete action does not delete the target file\n                         the
      :create action\n                           leaves the file linked\n                           does
      not mark the resource updated\n                           does not log that
      it created\n                         the :delete action\n                           deletes
      the file\n                           marks the resource updated\n                           logs
      that it deleted\n                       pointing somewhere else\n                         the
      :delete action does not delete the target file\n                         the
      :create action\n                           links to the target file\n                           marks
      the resource updated\n                           logs that it created\n                         the
      :delete action\n                           deletes the file\n                           marks
      the resource updated\n                           logs that it deleted\n                       pointing
      nowhere\n                         the :create action\n                           links
      to the target file\n                           marks the resource updated\n
      \                          logs that it created\n                         the
      :delete action\n                           deletes the file\n                           marks
      the resource updated\n                           logs that it deleted\n                     and
      the link already exists and is a hard link to the file\n                       the
      :create action\n                         links to the target file\n                         marks
      the resource updated\n                         logs that it created\n                       behaves
      like delete errors out\n                         delete errors out\n                     and
      the link already exists and is a file\n                       the :create action\n
      \                        links to the target file\n                         marks
      the resource updated\n                         logs that it created\n                       behaves
      like delete errors out\n                         delete errors out\n                     and
      the link already exists and is a directory\n                       create errors
      out\n                       behaves like delete errors out\n                         delete
      errors out\n                     behaves like a securable resource without existing
      target\n                       on Windows\n                         leaves owner
      as system default on create if owner is not specified\n                         sets
      owner when owner is specified\n                         fails to set owner when
      owner has invalid characters\n                         sets owner when owner
      is specified with a \\\n                         leaves owner alone if owner
      is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                   when
      the link destination is a directory\n                     and the link does
      not yet exist\n                       the :create action\n                         links
      to the target file\n                         marks the resource updated\n                         logs
      that it created\n                       the :delete action\n                         leaves
      the file deleted\n                         does not mark the resource updated\n
      \                        does not log that it deleted\n                     and
      the link already exists and points to a different directory\n                       the
      :create action\n                         links to the target file\n                         marks
      the resource updated\n                         logs that it created\n                   when
      the link destination is a symbolic link\n                     to a file that
      exists\n                       and the link does not yet exist\n                         the
      :create action\n                           links to the target file\n                           marks
      the resource updated\n                           logs that it created\n                         the
      :delete action\n                           leaves the file deleted\n                           does
      not mark the resource updated\n                           does not log that
      it deleted\n                     to a file that does not exist\n                       and
      the link does not yet exist\n                         the :create action\n                           links
      to the target file\n                           marks the resource updated\n
      \                          logs that it created\n                         the
      :delete action\n                           leaves the file deleted\n                           does
      not mark the resource updated\n                           does not log that
      it deleted\n                   when the link destination does not exist\n                     the
      :create action\n                       links to the target file\n                       marks
      the resource updated\n                       logs that it created\n                     the
      :delete action\n                       leaves the file deleted\n                       does
      not mark the resource updated\n                       does not log that it deleted\n
      \                  with a relative link destination\n                     when
      the link does not yet exist\n                       the :create action\n                         links
      to the target file\n                         marks the resource updated\n                         logs
      that it created\n                       the :delete action\n                         leaves
      the file deleted\n                         does not mark the resource updated\n
      \                        does not log that it deleted\n                     when
      the link already exists and points at the target\n                       the
      :create action\n                         leaves the file linked\n                         does
      not mark the resource updated\n                         does not log that it
      created\n                       the :delete action\n                         deletes
      the file\n                         marks the resource updated\n                         logs
      that it deleted\n                     when the link already exists and points
      at the target with an absolute path\n                       the :create action\n
      \                        links to the target file\n                         marks
      the resource updated\n                         logs that it created\n                       the
      :delete action\n                         deletes the file\n                         marks
      the resource updated\n                         logs that it deleted\n                   with
      a bare filename for the link destination\n                     when the link
      does not yet exist\n                       the :create action\n                         links
      to the target file\n                         marks the resource updated\n                         logs
      that it created\n                       the :delete action\n                         leaves
      the file deleted\n                         does not mark the resource updated\n
      \                        does not log that it deleted\n                     when
      the link already exists and points at the target\n                       the
      :create action\n                         leaves the file linked\n                         does
      not mark the resource updated\n                         does not log that it
      created\n                       the :delete action\n                         deletes
      the file\n                         marks the resource updated\n                         logs
      that it deleted\n                     when the link already exists and points
      at the target with an absolute path\n                       the :create action\n
      \                        links to the target file\n                         marks
      the resource updated\n                         logs that it created\n                       the
      :delete action\n                         deletes the file\n                         marks
      the resource updated\n                         logs that it deleted\n                 is
      a hard link\n                   when the link destination is a file\n                     and
      the link does not yet exist\n                       the :create action\n                         preserves
      the hard link\n                         marks the resource updated\n                         logs
      that it created\n                       the :delete action\n                         leaves
      the file deleted\n                         does not mark the resource updated\n
      \                        does not log that it deleted\n                     and
      the link already exists and is a symbolic link pointing at the same file\n                       the
      :create action\n                         preserves the hard link\n                         marks
      the resource updated\n                         logs that it created\n                       behaves
      like delete errors out\n                         delete errors out\n                     and
      the link already exists and is a hard link to the file\n                       the
      :delete action does not delete the target file\n                       the :create
      action\n                         links to the target file\n                         does
      not mark the resource updated\n                         does not log that it
      created\n                       the :delete action\n                         deletes
      the file\n                         marks the resource updated\n                         logs
      that it deleted\n                     and the link already exists and is a file\n
      \                      the :create action\n                         preserves
      the hard link\n                         marks the resource updated\n                         logs
      that it created\n                       behaves like delete errors out\n                         delete
      errors out\n                     and the link already exists and is a directory\n
      \                      errors out\n                       behaves like delete
      errors out\n                         delete errors out\n                     and
      specifies security attributes\n                       ignores them\n                   when
      the link destination is a directory\n                     and the link does
      not yet exist\n                       create errors out\n                       the
      :delete action\n                         leaves the file deleted\n                         does
      not mark the resource updated\n                         does not log that it
      deleted\n                   when the link destination is a symbolic link\n                     to
      a real file\n                       and the link does not yet exist\n                         links
      to the target file\n                         the :delete action\n                           leaves
      the file deleted\n                           does not mark the resource updated\n
      \                          does not log that it deleted\n                     to
      a nonexistent file\n                       and the link does not yet exist\n
      \                        links to the target file\n                         the
      :delete action\n                           leaves the file deleted\n                           does
      not mark the resource updated\n                           does not log that
      it deleted\n                   when the link destination does not exist\n                     and
      the link does not yet exist\n                       create errors out\n                       the
      :delete action\n                         leaves the file deleted\n                         does
      not mark the resource updated\n                         does not log that it
      deleted\n\n             Chef::Resource::Ohai\n               when reloading
      all plugins\n                 behaves like reloaded :uptime\n                   should
      reload :uptime\n               when reloading only uptime\n                 behaves
      like reloaded :uptime\n                   should reload :uptime\n\n             Chef::Resource::PowershellScript\n
      \              behaves like a Windows script running on Windows\n                 when
      the run action is invoked on Windows\n                   executes the script
      code\n                 when $env:TMP has a space\n                   executes
      the script code\n                 when evaluating guards\n                   has
      a guard_interpreter attribute set to the short name of the resource\n                 when
      the architecture attribute is not set\n                   behaves like a script
      resource with architecture attribute\n                     with the given architecture
      attribute value\n                       creates a process with the expected
      architecture\n                       executes guards with the same architecture
      as the resource\n                       when the guard's architecture is specified
      as 64-bit\n                         executes a 64-bit guard\n                       when
      the guard's architecture is specified as 32-bit\n                         executes
      a 32-bit guard\n                 when the architecture attribute is :i386\n
      \                  behaves like a script resource with architecture attribute\n
      \                    with the given architecture attribute value\n                       creates
      a process with the expected architecture\n                       executes guards
      with the same architecture as the resource\n                       when the
      guard's architecture is specified as 64-bit\n                         executes
      a 64-bit guard\n                       when the guard's architecture is specified
      as 32-bit\n                         executes a 32-bit guard\n                 when
      the architecture attribute is :x86_64\n                   behaves like a script
      resource with architecture attribute\n                     with the given architecture
      attribute value\n                       creates a process with the expected
      architecture\n                       executes guards with the same architecture
      as the resource\n                       when the guard's architecture is specified
      as 64-bit\n                         executes a 64-bit guard\n                       when
      the guard's architecture is specified as 32-bit\n                         executes
      a 32-bit guard\n               when the run action is invoked on Windows\n                 successfully
      executes a non-cmdlet Windows binary as the last command of the script\n                 returns
      the exit status 27 for a powershell script that exits with 27\n                 returns
      the exit status -27 as a signed integer or an unsigned 16-bit 2's complement
      value of 65509 for a powershell script that exits with -27\n                 returns
      the process exit code\n                 returns 0 if the last command was a
      cmdlet that succeeded\n                 returns 0 if the last command was a
      cmdlet that succeeded and was preceded by a non-cmdlet Windows binary that failed\n
      \                returns 1 if the last command was a cmdlet that failed\n                 returns
      1 if the last command was a cmdlet that failed and was preceded by a successfully
      executed non-cmdlet Windows binary\n                 raises a Mixlib::ShellOut::ShellCommandFailed
      error if the script is not syntactically correct\n                 raises an
      error if the script is not syntactically correct even if returns is set to 1
      which is what powershell.exe returns for syntactically invalid scripts\n                 returns
      1 if the last command was a cmdlet that failed and was preceded by an unsuccessfully
      executed non-cmdlet Windows binary\n                 returns 0 if the last command
      was a non-cmdlet Windows binary that succeeded and was preceded by a failed
      cmdlet\n                 returns a specific error code if the last command was
      a non-cmdlet Windows binary that failed and was preceded by cmdlet that succeeded\n
      \                returns a specific error code if the last command was a non-cmdlet
      Windows binary that failed and was preceded by cmdlet that failed\n                 returns
      0 for $false as the last line of the script when convert_boolean_return is false\n
      \                returns 0 for $true as the last line of the script when convert_boolean_return
      is false\n                 returns 1 for $false as the last line of the script
      when convert_boolean_return is true\n                 returns 0 for $true as
      the last line of the script when convert_boolean_return is true\n                 executes
      a script with a 64-bit process on a 64-bit OS, otherwise a 32-bit process\n
      \                returns 1 if an invalid flag is passed to the interpreter\n
      \                returns 0 if a valid flag is passed to the interpreter\n                 raises
      an error when given a block and a guard_interpreter\n                 when dsc
      is supported\n                   can execute LCM configuration code\n               when
      running on a 64-bit version of Ruby\n                 executes a script with
      a 64-bit process if :x86_64 arch is specified\n                 executes a script
      with a 32-bit process if :i386 arch is specified\n               when executing
      guards\n                 when the guard_interpreter's default value of :powershell_script
      is overridden to :default\n                   evaluates a succeeding not_if
      block using cmd.exe as false by default\n                   evaluates a failing
      not_if block using cmd.exe as true by default\n                   evaluates
      an succeeding only_if block using cmd.exe as true by default\n                   evaluates
      a failing only_if block using cmd.exe as false by default\n                 the
      only_if is specified before the guard\n                   evaluates a powershell
      $true for a only_if block as true\n                 with powershell_script as
      the guard_interpreter\n                   has a guard_interpreter attribute
      set to :powershell_script\n                   evaluates a powershell $false
      for a not_if block as true\n                   evaluates a powershell $true
      for a not_if block as false\n                   evaluates a powershell $false
      for an only_if block as false\n                   evaluates a powershell $true
      for a only_if block as true\n                   evaluates a not_if block using
      powershell.exe\n                   evaluates an only_if block using powershell.exe\n
      \                  evaluates a non-zero powershell exit status for not_if as
      true\n                   evaluates a zero powershell exit status for not_if
      as false\n                   evaluates a failed executable exit status for not_if
      as false\n                   evaluates a successful executable exit status for
      not_if as true\n                   evaluates a failed executable exit status
      for only_if as false\n                   evaluates a successful executable exit
      status for only_if as true\n                   evaluates a failed cmdlet exit
      status for not_if as true\n                   evaluates a successful cmdlet
      exit status for not_if as true\n                   evaluates a failed cmdlet
      exit status for only_if as false\n                   evaluates a successful
      cmdlet exit status for only_if as true\n                   evaluates a not_if
      block using the cwd guard parameter\n                   evaluates an only_if
      block using the cwd guard parameter\n                   inherits cwd from the
      parent resource for only_if\n                   inherits cwd from the parent
      resource for not_if\n                   evaluates a 64-bit resource with a 64-bit
      guard and interprets boolean false as zero status code\n                   evaluates
      a 64-bit resource with a 64-bit guard and interprets boolean true as nonzero
      status code\n                   evaluates a 32-bit resource with a 32-bit guard
      and interprets boolean false as zero status code\n                   evaluates
      a 32-bit resource with a 32-bit guard and interprets boolean true as nonzero
      status code\n                   evaluates a simple boolean false as nonzero
      status code when convert_boolean_return is true for only_if\n                   evaluates
      a simple boolean false as nonzero status code when convert_boolean_return is
      true for not_if\n                   evaluates a simple boolean true as 0 status
      code when convert_boolean_return is true for only_if\n                   evaluates
      a simple boolean true as 0 status code when convert_boolean_return is true for
      not_if\n                   evaluates a 32-bit resource with a 32-bit guard and
      interprets boolean false as zero status code using convert_boolean_return for
      only_if\n                   evaluates a 32-bit resource with a 32-bit guard
      and interprets boolean false as zero status code using convert_boolean_return
      for not_if\n                   evaluates a 32-bit resource with a 32-bit guard
      and interprets boolean true as nonzero status code using convert_boolean_return
      for only_if\n                   evaluates a 32-bit resource with a 32-bit guard
      and interprets boolean true as nonzero status code using convert_boolean_return
      for not_if\n\n             Chef::Resource::Reboot\n               the request_reboot_on_successful_run
      action\n                 should have modified the run context correctly\n               the
      reboot_interrupt_run action\n                 should have modified the run context
      correctly\n               the cancel action\n                 should have cleared
      the reboot request\n\n             Chef::Resource::RemoteDirectory\n               behaves
      like a directory resource\n                 when the target directory does not
      exist\n                   when running action :create\n                     and
      the recursive option is not set\n                       creates the directory
      when the :create action is run\n                       is marked updated by
      last action\n                     and the recursive option is set\n                       recursively
      creates required directories\n                       is marked updated by last
      action\n                   behaves like a securable resource without existing
      target\n                     on Windows\n                       leaves owner
      as system default on create if owner is not specified\n                       sets
      owner when owner is specified\n                       fails to set owner when
      owner has invalid characters\n                       sets owner when owner is
      specified with a \\\n                       leaves owner alone if owner is not
      specified and resource already exists\n                       leaves group as
      system default on create if group is not specified\n                       sets
      group when group is specified\n                       fails to set group when
      group has invalid characters\n                       leaves group alone if group
      is not specified and resource already exists\n                       does not
      inherit aces if inherits is set to false\n                       has the inheritable
      acls of parent directory if no acl is specified\n                       with
      rights and deny_rights attributes\n                         correctly sets :read
      rights\n                         correctly sets :read_execute rights\n                         correctly
      sets :write rights\n                         correctly sets :modify rights\n
      \                        correctly sets :full_control rights\n                         correctly
      sets deny_rights\n                         Sets multiple rights\n                         Sets
      deny_rights ahead of rights\n                         Sets deny_rights ahead
      of rights when specified in reverse order\n                       with a mode
      attribute\n                         respects mode in string form as an octal
      number\n                         respects mode in numeric form as a ruby-interpreted
      octal\n                         respects the owner, group and everyone bits
      of mode\n                         respects the individual read, write and execute
      bits of mode\n                         warns when mode tries to set owner bits
      but owner is not specified\n                         warns when mode tries to
      set group bits but group is not specified\n                 when the target
      directory exists\n                   when running action :create\n                     does
      not re-create the directory\n                     is not marked updated by last
      action\n                   when running action :delete\n                     without
      the recursive option\n                       deletes the directory\n                       is
      marked as updated by last action\n                     with the recursive option\n
      \                      recursively deletes directories\n               behaves
      like a securable resource with reporting\n                 reading file security
      metadata for reporting on windows\n                   when the target file doesn't
      exist\n                     has empty values for file metadata in 'current_resource'
      (PENDING: windows reporting not yet fully supported)\n                     and
      no security metadata is specified in new_resource\n                       sets
      the metadata values on the new_resource as strings after creating (PENDING:
      windows reporting not yet fully supported)\n                     and owner is
      specified with a string (username) in new_resource\n                       sets
      the owner on new_resource to the username (string) of the desired owner\n                     and
      owner is specified with a fully qualified domain user\n                       sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                   when the target
      file exists\n                     and no security metadata is specified in new_resource\n
      \                      sets the current values on current resource as strings
      (PENDING: windows reporting not yet fully supported)\n                     and
      owner is specified with a string (username) in new_resource\n                       sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                     and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                       sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                     and
      access rights are specified on the new_resource\n                       sets
      the expanded_rights on the current resource (PENDING: windows reporting not
      yet fully supported)\n                     and no access rights are specified
      on the current resource\n                       sets the expanded rights on
      the current resource (PENDING: windows reporting not yet fully supported)\n
      \              when creating the remote directory with purging disabled\n                 and
      the directory does not yet exist\n                   transfers the directory
      with all contents\n                   is marked as updated by last action\n
      \                and there are extraneous files in the directory\n                   does
      not modify the expected state of the directory\n                   does not
      remove unmanaged files\n                 and the directory is in the desired
      state\n                   does not modify the expected state of the directory\n
      \                  is not marked as updated by last action\n                 with
      overwrite disabled\n                   leaves modifications alone\n               when
      creating the directory with purging enabled\n                 and there are
      no extraneous files in the directory\n                   creates the directory
      contents as normal\n                 and there are extraneous files in the directory\n
      \                  removes unmanaged files\n                   does not modify
      managed files\n                   is marked as updated by last action\n                 and
      there are deeply nested extraneous files in the directory\n                   removes
      files in subdirectories before files above\n                   is marked as
      updated by last action\n\n             Chef::Resource::RemoteFile\n               when
      fetching files over HTTP\n                 when redownload isn't necessary\n
      \                  does not fetch the file\n                 when using normal
      encoding\n                   behaves like a file resource\n                     when
      deploying with :move\n                       when deploying via tmpdir\n                         behaves
      like a configured file resource\n                           when the target
      file is a symlink\n                             when configured not to manage
      symlink's target\n                               when symlink target has correct
      content\n                                 behaves like file resource not pointing
      to a real file\n                                   when force_unlink is set
      to true\n                                     :create unlinks the target\n                                   when
      force_unlink is set to false\n                                     :create raises
      an error\n                                   when force_unlink is not set (default)\n
      \                                    :create raises an error\n                               when
      symlink target has the wrong content\n                                 behaves
      like file resource not pointing to a real file\n                                   when
      force_unlink is set to true\n                                     :create unlinks
      the target\n                                   when force_unlink is set to false\n
      \                                    :create raises an error\n                                   when
      force_unlink is not set (default)\n                                     :create
      raises an error\n                           when the target file does not exist\n
      \                            when force_unlink is set to true\n                               :create
      updates the target\n                             when force_unlink is set to
      false\n                               :create updates the target\n                             when
      force_unlink is not set (default)\n                               :create updates
      the target\n                           when the target file is a directory\n
      \                            behaves like file resource not pointing to a real
      file\n                               when force_unlink is set to true\n                                 :create
      unlinks the target\n                               when force_unlink is set
      to false\n                                 :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when notification is configured\n
      \                            when path is specified with normal separator\n
      \                              should notify the other resources correctly\n
      \                            when path is specified with windows separator\n
      \                              should notify the other resources correctly\n
      \                          when the target file does not exist\n                             when
      running action :create\n                               creates the file when
      the :create action is run\n                               creates the file with
      the correct content when the :create action is run\n                               is
      marked as updated by last action\n                             when running
      action :create_if_missing\n                               creates the file with
      the correct content\n                               is marked as updated by
      last action\n                             when running action :delete\n                               deletes
      the file when the :delete action is run\n                               is not
      marked updated by last action\n                           behaves like a securable
      resource without existing target\n                             on Windows\n
      \                              leaves owner as system default on create if owner
      is not specified\n                               sets owner when owner is specified\n
      \                              fails to set owner when owner has invalid characters\n
      \                              sets owner when owner is specified with a \\\n
      \                              leaves owner alone if owner is not specified
      and resource already exists\n                               leaves group as
      system default on create if group is not specified\n                               sets
      group when group is specified\n                               fails to set group
      when group has invalid characters\n                               leaves group
      alone if group is not specified and resource already exists\n                               does
      not inherit aces if inherits is set to false\n                               has
      the inheritable acls of parent directory if no acl is specified\n                               with
      rights and deny_rights attributes\n                                 correctly
      sets :read rights\n                                 correctly sets :read_execute
      rights\n                                 correctly sets :write rights\n                                 correctly
      sets :modify rights\n                                 correctly sets :full_control
      rights\n                                 correctly sets deny_rights\n                                 Sets
      multiple rights\n                                 Sets deny_rights ahead of
      rights\n                                 Sets deny_rights ahead of rights when
      specified in reverse order\n                               with a mode attribute\n
      \                                respects mode in string form as an octal number\n
      \                                respects mode in numeric form as a ruby-interpreted
      octal\n                                 respects the owner, group and everyone
      bits of mode\n                                 respects the individual read,
      write and execute bits of mode\n                                 warns when
      mode tries to set owner bits but owner is not specified\n                                 warns
      when mode tries to set group bits but group is not specified\n                           when
      the target file has the wrong content\n                             and the
      target file has the correct permissions\n                               behaves
      like a file with the wrong content\n                                 when diff
      is disabled\n                                   when running action :create\n
      \                                    with backups enabled\n                                       overwrites
      the file with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the wrong content\n                                 when diff is
      disabled\n                                   when running action :create\n                                     with
      backups enabled\n                                       overwrites the file
      with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the target
      file has the correct content\n                             and the target file
      has the correct permissions\n                               behaves like a file
      with the correct content\n                                 when running action
      :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the correct content\n                                 when running
      action :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the path
      starts with '/' and target file exists\n                             :create
      action should run without any updates\n                               does not
      overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                       when deploying
      via destdir\n                         behaves like a configured file resource\n
      \                          when the target file is a symlink\n                             when
      configured not to manage symlink's target\n                               when
      symlink target has correct content\n                                 behaves
      like file resource not pointing to a real file\n                                   when
      force_unlink is set to true\n                                     :create unlinks
      the target\n                                   when force_unlink is set to false\n
      \                                    :create raises an error\n                                   when
      force_unlink is not set (default)\n                                     :create
      raises an error\n                               when symlink target has the
      wrong content\n                                 behaves like file resource not
      pointing to a real file\n                                   when force_unlink
      is set to true\n                                     :create unlinks the target\n
      \                                  when force_unlink is set to false\n                                     :create
      raises an error\n                                   when force_unlink is not
      set (default)\n                                     :create raises an error\n
      \                          when the target file does not exist\n                             when
      force_unlink is set to true\n                               :create updates
      the target\n                             when force_unlink is set to false\n
      \                              :create updates the target\n                             when
      force_unlink is not set (default)\n                               :create updates
      the target\n                           when the target file is a directory\n
      \                            behaves like file resource not pointing to a real
      file\n                               when force_unlink is set to true\n                                 :create
      unlinks the target\n                               when force_unlink is set
      to false\n                                 :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when notification is configured\n
      \                            when path is specified with normal separator\n
      \                              should notify the other resources correctly\n
      \                            when path is specified with windows separator\n
      \                              should notify the other resources correctly\n
      \                          when the target file does not exist\n                             when
      running action :create\n                               creates the file when
      the :create action is run\n                               creates the file with
      the correct content when the :create action is run\n                               is
      marked as updated by last action\n                             when running
      action :create_if_missing\n                               creates the file with
      the correct content\n                               is marked as updated by
      last action\n                             when running action :delete\n                               deletes
      the file when the :delete action is run\n                               is not
      marked updated by last action\n                           behaves like a securable
      resource without existing target\n                             on Windows\n
      \                              leaves owner as system default on create if owner
      is not specified\n                               sets owner when owner is specified\n
      \                              fails to set owner when owner has invalid characters\n
      \                              sets owner when owner is specified with a \\\n
      \                              leaves owner alone if owner is not specified
      and resource already exists\n                               leaves group as
      system default on create if group is not specified\n                               sets
      group when group is specified\n                               fails to set group
      when group has invalid characters\n                               leaves group
      alone if group is not specified and resource already exists\n                               does
      not inherit aces if inherits is set to false\n                               has
      the inheritable acls of parent directory if no acl is specified\n                               with
      rights and deny_rights attributes\n                                 correctly
      sets :read rights\n                                 correctly sets :read_execute
      rights\n                                 correctly sets :write rights\n                                 correctly
      sets :modify rights\n                                 correctly sets :full_control
      rights\n                                 correctly sets deny_rights\n                                 Sets
      multiple rights\n                                 Sets deny_rights ahead of
      rights\n                                 Sets deny_rights ahead of rights when
      specified in reverse order\n                               with a mode attribute\n
      \                                respects mode in string form as an octal number\n
      \                                respects mode in numeric form as a ruby-interpreted
      octal\n                                 respects the owner, group and everyone
      bits of mode\n                                 respects the individual read,
      write and execute bits of mode\n                                 warns when
      mode tries to set owner bits but owner is not specified\n                                 warns
      when mode tries to set group bits but group is not specified\n                           when
      the target file has the wrong content\n                             and the
      target file has the correct permissions\n                               behaves
      like a file with the wrong content\n                                 when diff
      is disabled\n                                   when running action :create\n
      \                                    with backups enabled\n                                       overwrites
      the file with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the wrong content\n                                 when diff is
      disabled\n                                   when running action :create\n                                     with
      backups enabled\n                                       overwrites the file
      with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the target
      file has the correct content\n                             and the target file
      has the correct permissions\n                               behaves like a file
      with the correct content\n                                 when running action
      :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the correct content\n                                 when running
      action :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the path
      starts with '/' and target file exists\n                             :create
      action should run without any updates\n                               does not
      overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                     when deploying with
      :copy\n                       when deploying via tmpdir\n                         behaves
      like a configured file resource\n                           when the target
      file is a symlink\n                             when configured not to manage
      symlink's target\n                               when symlink target has correct
      content\n                                 behaves like file resource not pointing
      to a real file\n                                   when force_unlink is set
      to true\n                                     :create unlinks the target\n                                   when
      force_unlink is set to false\n                                     :create raises
      an error\n                                   when force_unlink is not set (default)\n
      \                                    :create raises an error\n                               when
      symlink target has the wrong content\n                                 behaves
      like file resource not pointing to a real file\n                                   when
      force_unlink is set to true\n                                     :create unlinks
      the target\n                                   when force_unlink is set to false\n
      \                                    :create raises an error\n                                   when
      force_unlink is not set (default)\n                                     :create
      raises an error\n                           when the target file does not exist\n
      \                            when force_unlink is set to true\n                               :create
      updates the target\n                             when force_unlink is set to
      false\n                               :create updates the target\n                             when
      force_unlink is not set (default)\n                               :create updates
      the target\n                           when the target file is a directory\n
      \                            behaves like file resource not pointing to a real
      file\n                               when force_unlink is set to true\n                                 :create
      unlinks the target\n                               when force_unlink is set
      to false\n                                 :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when notification is configured\n
      \                            when path is specified with normal separator\n
      \                              should notify the other resources correctly\n
      \                            when path is specified with windows separator\n
      \                              should notify the other resources correctly\n
      \                          when the target file does not exist\n                             when
      running action :create\n                               creates the file when
      the :create action is run\n                               creates the file with
      the correct content when the :create action is run\n                               is
      marked as updated by last action\n                             when running
      action :create_if_missing\n                               creates the file with
      the correct content\n                               is marked as updated by
      last action\n                             when running action :delete\n                               deletes
      the file when the :delete action is run\n                               is not
      marked updated by last action\n                           behaves like a securable
      resource without existing target\n                             on Windows\n
      \                              leaves owner as system default on create if owner
      is not specified\n                               sets owner when owner is specified\n
      \                              fails to set owner when owner has invalid characters\n
      \                              sets owner when owner is specified with a \\\n
      \                              leaves owner alone if owner is not specified
      and resource already exists\n                               leaves group as
      system default on create if group is not specified\n                               sets
      group when group is specified\n                               fails to set group
      when group has invalid characters\n                               leaves group
      alone if group is not specified and resource already exists\n                               does
      not inherit aces if inherits is set to false\n                               has
      the inheritable acls of parent directory if no acl is specified\n                               with
      rights and deny_rights attributes\n                                 correctly
      sets :read rights\n                                 correctly sets :read_execute
      rights\n                                 correctly sets :write rights\n                                 correctly
      sets :modify rights\n                                 correctly sets :full_control
      rights\n                                 correctly sets deny_rights\n                                 Sets
      multiple rights\n                                 Sets deny_rights ahead of
      rights\n                                 Sets deny_rights ahead of rights when
      specified in reverse order\n                               with a mode attribute\n
      \                                respects mode in string form as an octal number\n
      \                                respects mode in numeric form as a ruby-interpreted
      octal\n                                 respects the owner, group and everyone
      bits of mode\n                                 respects the individual read,
      write and execute bits of mode\n                                 warns when
      mode tries to set owner bits but owner is not specified\n                                 warns
      when mode tries to set group bits but group is not specified\n                           when
      the target file has the wrong content\n                             and the
      target file has the correct permissions\n                               behaves
      like a file with the wrong content\n                                 when diff
      is disabled\n                                   when running action :create\n
      \                                    with backups enabled\n                                       overwrites
      the file with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the wrong content\n                                 when diff is
      disabled\n                                   when running action :create\n                                     with
      backups enabled\n                                       overwrites the file
      with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the target
      file has the correct content\n                             and the target file
      has the correct permissions\n                               behaves like a file
      with the correct content\n                                 when running action
      :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the correct content\n                                 when running
      action :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the path
      starts with '/' and target file exists\n                             :create
      action should run without any updates\n                               does not
      overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                       when deploying
      via destdir\n                         behaves like a configured file resource\n
      \                          when the target file is a symlink\n                             when
      configured not to manage symlink's target\n                               when
      symlink target has correct content\n                                 behaves
      like file resource not pointing to a real file\n                                   when
      force_unlink is set to true\n                                     :create unlinks
      the target\n                                   when force_unlink is set to false\n
      \                                    :create raises an error\n                                   when
      force_unlink is not set (default)\n                                     :create
      raises an error\n                               when symlink target has the
      wrong content\n                                 behaves like file resource not
      pointing to a real file\n                                   when force_unlink
      is set to true\n                                     :create unlinks the target\n
      \                                  when force_unlink is set to false\n                                     :create
      raises an error\n                                   when force_unlink is not
      set (default)\n                                     :create raises an error\n
      \                          when the target file does not exist\n                             when
      force_unlink is set to true\n                               :create updates
      the target\n                             when force_unlink is set to false\n
      \                              :create updates the target\n                             when
      force_unlink is not set (default)\n                               :create updates
      the target\n                           when the target file is a directory\n
      \                            behaves like file resource not pointing to a real
      file\n                               when force_unlink is set to true\n                                 :create
      unlinks the target\n                               when force_unlink is set
      to false\n                                 :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when notification is configured\n
      \                            when path is specified with normal separator\n
      \                              should notify the other resources correctly\n
      \                            when path is specified with windows separator\n
      \                              should notify the other resources correctly\n
      \                          when the target file does not exist\n                             when
      running action :create\n                               creates the file when
      the :create action is run\n                               creates the file with
      the correct content when the :create action is run\n                               is
      marked as updated by last action\n                             when running
      action :create_if_missing\n                               creates the file with
      the correct content\n                               is marked as updated by
      last action\n                             when running action :delete\n                               deletes
      the file when the :delete action is run\n                               is not
      marked updated by last action\n                           behaves like a securable
      resource without existing target\n                             on Windows\n
      \                              leaves owner as system default on create if owner
      is not specified\n                               sets owner when owner is specified\n
      \                              fails to set owner when owner has invalid characters\n
      \                              sets owner when owner is specified with a \\\n
      \                              leaves owner alone if owner is not specified
      and resource already exists\n                               leaves group as
      system default on create if group is not specified\n                               sets
      group when group is specified\n                               fails to set group
      when group has invalid characters\n                               leaves group
      alone if group is not specified and resource already exists\n                               does
      not inherit aces if inherits is set to false\n                               has
      the inheritable acls of parent directory if no acl is specified\n                               with
      rights and deny_rights attributes\n                                 correctly
      sets :read rights\n                                 correctly sets :read_execute
      rights\n                                 correctly sets :write rights\n                                 correctly
      sets :modify rights\n                                 correctly sets :full_control
      rights\n                                 correctly sets deny_rights\n                                 Sets
      multiple rights\n                                 Sets deny_rights ahead of
      rights\n                                 Sets deny_rights ahead of rights when
      specified in reverse order\n                               with a mode attribute\n
      \                                respects mode in string form as an octal number\n
      \                                respects mode in numeric form as a ruby-interpreted
      octal\n                                 respects the owner, group and everyone
      bits of mode\n                                 respects the individual read,
      write and execute bits of mode\n                                 warns when
      mode tries to set owner bits but owner is not specified\n                                 warns
      when mode tries to set group bits but group is not specified\n                           when
      the target file has the wrong content\n                             and the
      target file has the correct permissions\n                               behaves
      like a file with the wrong content\n                                 when diff
      is disabled\n                                   when running action :create\n
      \                                    with backups enabled\n                                       overwrites
      the file with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the wrong content\n                                 when diff is
      disabled\n                                   when running action :create\n                                     with
      backups enabled\n                                       overwrites the file
      with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the target
      file has the correct content\n                             and the target file
      has the correct permissions\n                               behaves like a file
      with the correct content\n                                 when running action
      :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the correct content\n                                 when running
      action :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the path
      starts with '/' and target file exists\n                             :create
      action should run without any updates\n                               does not
      overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                     when running under
      why run\n                       and the resource has a path with a missing intermediate
      directory\n                         successfully doesn't create the file\n                     when
      setting atomic_update\n                       booleans should work\n                       anything
      else should raise an error\n                   behaves like a securable resource
      with reporting\n                     reading file security metadata for reporting
      on windows\n                       when the target file doesn't exist\n                         has
      empty values for file metadata in 'current_resource' (PENDING: windows reporting
      not yet fully supported)\n                         and no security metadata
      is specified in new_resource\n                           sets the metadata values
      on the new_resource as strings after creating (PENDING: windows reporting not
      yet fully supported)\n                         and owner is specified with a
      string (username) in new_resource\n                           sets the owner
      on new_resource to the username (string) of the desired owner\n                         and
      owner is specified with a fully qualified domain user\n                           sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                       when the
      target file exists\n                         and no security metadata is specified
      in new_resource\n                           sets the current values on current
      resource as strings (PENDING: windows reporting not yet fully supported)\n                         and
      owner is specified with a string (username) in new_resource\n                           sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                         and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                           sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                         and
      access rights are specified on the new_resource\n                           sets
      the expanded_rights on the current resource (PENDING: windows reporting not
      yet fully supported)\n                         and no access rights are specified
      on the current resource\n                           sets the expanded rights
      on the current resource (PENDING: windows reporting not yet fully supported)\n
      \                when using gzip encoding\n                   behaves like a
      file resource\n                     when deploying with :move\n                       when
      deploying via tmpdir\n                         behaves like a configured file
      resource\n                           when the target file is a symlink\n                             when
      configured not to manage symlink's target\n                               when
      symlink target has correct content\n                                 behaves
      like file resource not pointing to a real file\n                                   when
      force_unlink is set to true\n                                     :create unlinks
      the target\n                                   when force_unlink is set to false\n
      \                                    :create raises an error\n                                   when
      force_unlink is not set (default)\n                                     :create
      raises an error\n                               when symlink target has the
      wrong content\n                                 behaves like file resource not
      pointing to a real file\n                                   when force_unlink
      is set to true\n                                     :create unlinks the target\n
      \                                  when force_unlink is set to false\n                                     :create
      raises an error\n                                   when force_unlink is not
      set (default)\n                                     :create raises an error\n
      \                          when the target file does not exist\n                             when
      force_unlink is set to true\n                               :create updates
      the target\n                             when force_unlink is set to false\n
      \                              :create updates the target\n                             when
      force_unlink is not set (default)\n                               :create updates
      the target\n                           when the target file is a directory\n
      \                            behaves like file resource not pointing to a real
      file\n                               when force_unlink is set to true\n                                 :create
      unlinks the target\n                               when force_unlink is set
      to false\n                                 :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when notification is configured\n
      \                            when path is specified with normal separator\n
      \                              should notify the other resources correctly\n
      \                            when path is specified with windows separator\n
      \                              should notify the other resources correctly\n
      \                          when the target file does not exist\n                             when
      running action :create\n                               creates the file when
      the :create action is run\n                               creates the file with
      the correct content when the :create action is run\n                               is
      marked as updated by last action\n                             when running
      action :create_if_missing\n                               creates the file with
      the correct content\n                               is marked as updated by
      last action\n                             when running action :delete\n                               deletes
      the file when the :delete action is run\n                               is not
      marked updated by last action\n                           behaves like a securable
      resource without existing target\n                             on Windows\n
      \                              leaves owner as system default on create if owner
      is not specified\n                               sets owner when owner is specified\n
      \                              fails to set owner when owner has invalid characters\n
      \                              sets owner when owner is specified with a \\\n
      \                              leaves owner alone if owner is not specified
      and resource already exists\n                               leaves group as
      system default on create if group is not specified\n                               sets
      group when group is specified\n                               fails to set group
      when group has invalid characters\n                               leaves group
      alone if group is not specified and resource already exists\n                               does
      not inherit aces if inherits is set to false\n                               has
      the inheritable acls of parent directory if no acl is specified\n                               with
      rights and deny_rights attributes\n                                 correctly
      sets :read rights\n                                 correctly sets :read_execute
      rights\n                                 correctly sets :write rights\n                                 correctly
      sets :modify rights\n                                 correctly sets :full_control
      rights\n                                 correctly sets deny_rights\n                                 Sets
      multiple rights\n                                 Sets deny_rights ahead of
      rights\n                                 Sets deny_rights ahead of rights when
      specified in reverse order\n                               with a mode attribute\n
      \                                respects mode in string form as an octal number\n
      \                                respects mode in numeric form as a ruby-interpreted
      octal\n                                 respects the owner, group and everyone
      bits of mode\n                                 respects the individual read,
      write and execute bits of mode\n                                 warns when
      mode tries to set owner bits but owner is not specified\n                                 warns
      when mode tries to set group bits but group is not specified\n                           when
      the target file has the wrong content\n                             and the
      target file has the correct permissions\n                               behaves
      like a file with the wrong content\n                                 when diff
      is disabled\n                                   when running action :create\n
      \                                    with backups enabled\n                                       overwrites
      the file with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the wrong content\n                                 when diff is
      disabled\n                                   when running action :create\n                                     with
      backups enabled\n                                       overwrites the file
      with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the target
      file has the correct content\n                             and the target file
      has the correct permissions\n                               behaves like a file
      with the correct content\n                                 when running action
      :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the correct content\n                                 when running
      action :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the path
      starts with '/' and target file exists\n                             :create
      action should run without any updates\n                               does not
      overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                       when deploying
      via destdir\n                         behaves like a configured file resource\n
      \                          when the target file is a symlink\n                             when
      configured not to manage symlink's target\n                               when
      symlink target has correct content\n                                 behaves
      like file resource not pointing to a real file\n                                   when
      force_unlink is set to true\n                                     :create unlinks
      the target\n                                   when force_unlink is set to false\n
      \                                    :create raises an error\n                                   when
      force_unlink is not set (default)\n                                     :create
      raises an error\n                               when symlink target has the
      wrong content\n                                 behaves like file resource not
      pointing to a real file\n                                   when force_unlink
      is set to true\n                                     :create unlinks the target\n
      \                                  when force_unlink is set to false\n                                     :create
      raises an error\n                                   when force_unlink is not
      set (default)\n                                     :create raises an error\n
      \                          when the target file does not exist\n                             when
      force_unlink is set to true\n                               :create updates
      the target\n                             when force_unlink is set to false\n
      \                              :create updates the target\n                             when
      force_unlink is not set (default)\n                               :create updates
      the target\n                           when the target file is a directory\n
      \                            behaves like file resource not pointing to a real
      file\n                               when force_unlink is set to true\n                                 :create
      unlinks the target\n                               when force_unlink is set
      to false\n                                 :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when notification is configured\n
      \                            when path is specified with normal separator\n
      \                              should notify the other resources correctly\n
      \                            when path is specified with windows separator\n
      \                              should notify the other resources correctly\n
      \                          when the target file does not exist\n                             when
      running action :create\n                               creates the file when
      the :create action is run\n                               creates the file with
      the correct content when the :create action is run\n                               is
      marked as updated by last action\n                             when running
      action :create_if_missing\n                               creates the file with
      the correct content\n                               is marked as updated by
      last action\n                             when running action :delete\n                               deletes
      the file when the :delete action is run\n                               is not
      marked updated by last action\n                           behaves like a securable
      resource without existing target\n                             on Windows\n
      \                              leaves owner as system default on create if owner
      is not specified\n                               sets owner when owner is specified\n
      \                              fails to set owner when owner has invalid characters\n
      \                              sets owner when owner is specified with a \\\n
      \                              leaves owner alone if owner is not specified
      and resource already exists\n                               leaves group as
      system default on create if group is not specified\n                               sets
      group when group is specified\n                               fails to set group
      when group has invalid characters\n                               leaves group
      alone if group is not specified and resource already exists\n                               does
      not inherit aces if inherits is set to false\n                               has
      the inheritable acls of parent directory if no acl is specified\n                               with
      rights and deny_rights attributes\n                                 correctly
      sets :read rights\n                                 correctly sets :read_execute
      rights\n                                 correctly sets :write rights\n                                 correctly
      sets :modify rights\n                                 correctly sets :full_control
      rights\n                                 correctly sets deny_rights\n                                 Sets
      multiple rights\n                                 Sets deny_rights ahead of
      rights\n                                 Sets deny_rights ahead of rights when
      specified in reverse order\n                               with a mode attribute\n
      \                                respects mode in string form as an octal number\n
      \                                respects mode in numeric form as a ruby-interpreted
      octal\n                                 respects the owner, group and everyone
      bits of mode\n                                 respects the individual read,
      write and execute bits of mode\n                                 warns when
      mode tries to set owner bits but owner is not specified\n                                 warns
      when mode tries to set group bits but group is not specified\n                           when
      the target file has the wrong content\n                             and the
      target file has the correct permissions\n                               behaves
      like a file with the wrong content\n                                 when diff
      is disabled\n                                   when running action :create\n
      \                                    with backups enabled\n                                       overwrites
      the file with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the wrong content\n                                 when diff is
      disabled\n                                   when running action :create\n                                     with
      backups enabled\n                                       overwrites the file
      with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the target
      file has the correct content\n                             and the target file
      has the correct permissions\n                               behaves like a file
      with the correct content\n                                 when running action
      :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the correct content\n                                 when running
      action :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the path
      starts with '/' and target file exists\n                             :create
      action should run without any updates\n                               does not
      overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                     when deploying with
      :copy\n                       when deploying via tmpdir\n                         behaves
      like a configured file resource\n                           when the target
      file is a symlink\n                             when configured not to manage
      symlink's target\n                               when symlink target has correct
      content\n                                 behaves like file resource not pointing
      to a real file\n                                   when force_unlink is set
      to true\n                                     :create unlinks the target\n                                   when
      force_unlink is set to false\n                                     :create raises
      an error\n                                   when force_unlink is not set (default)\n
      \                                    :create raises an error\n                               when
      symlink target has the wrong content\n                                 behaves
      like file resource not pointing to a real file\n                                   when
      force_unlink is set to true\n                                     :create unlinks
      the target\n                                   when force_unlink is set to false\n
      \                                    :create raises an error\n                                   when
      force_unlink is not set (default)\n                                     :create
      raises an error\n                           when the target file does not exist\n
      \                            when force_unlink is set to true\n                               :create
      updates the target\n                             when force_unlink is set to
      false\n                               :create updates the target\n                             when
      force_unlink is not set (default)\n                               :create updates
      the target\n                           when the target file is a directory\n
      \                            behaves like file resource not pointing to a real
      file\n                               when force_unlink is set to true\n                                 :create
      unlinks the target\n                               when force_unlink is set
      to false\n                                 :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when notification is configured\n
      \                            when path is specified with normal separator\n
      \                              should notify the other resources correctly\n
      \                            when path is specified with windows separator\n
      \                              should notify the other resources correctly\n
      \                          when the target file does not exist\n                             when
      running action :create\n                               creates the file when
      the :create action is run\n                               creates the file with
      the correct content when the :create action is run\n                               is
      marked as updated by last action\n                             when running
      action :create_if_missing\n                               creates the file with
      the correct content\n                               is marked as updated by
      last action\n                             when running action :delete\n                               deletes
      the file when the :delete action is run\n                               is not
      marked updated by last action\n                           behaves like a securable
      resource without existing target\n                             on Windows\n
      \                              leaves owner as system default on create if owner
      is not specified\n                               sets owner when owner is specified\n
      \                              fails to set owner when owner has invalid characters\n
      \                              sets owner when owner is specified with a \\\n
      \                              leaves owner alone if owner is not specified
      and resource already exists\n                               leaves group as
      system default on create if group is not specified\n                               sets
      group when group is specified\n                               fails to set group
      when group has invalid characters\n                               leaves group
      alone if group is not specified and resource already exists\n                               does
      not inherit aces if inherits is set to false\n                               has
      the inheritable acls of parent directory if no acl is specified\n                               with
      rights and deny_rights attributes\n                                 correctly
      sets :read rights\n                                 correctly sets :read_execute
      rights\n                                 correctly sets :write rights\n                                 correctly
      sets :modify rights\n                                 correctly sets :full_control
      rights\n                                 correctly sets deny_rights\n                                 Sets
      multiple rights\n                                 Sets deny_rights ahead of
      rights\n                                 Sets deny_rights ahead of rights when
      specified in reverse order\n                               with a mode attribute\n
      \                                respects mode in string form as an octal number\n
      \                                respects mode in numeric form as a ruby-interpreted
      octal\n                                 respects the owner, group and everyone
      bits of mode\n                                 respects the individual read,
      write and execute bits of mode\n                                 warns when
      mode tries to set owner bits but owner is not specified\n                                 warns
      when mode tries to set group bits but group is not specified\n                           when
      the target file has the wrong content\n                             and the
      target file has the correct permissions\n                               behaves
      like a file with the wrong content\n                                 when diff
      is disabled\n                                   when running action :create\n
      \                                    with backups enabled\n                                       overwrites
      the file with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the wrong content\n                                 when diff is
      disabled\n                                   when running action :create\n                                     with
      backups enabled\n                                       overwrites the file
      with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the target
      file has the correct content\n                             and the target file
      has the correct permissions\n                               behaves like a file
      with the correct content\n                                 when running action
      :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the correct content\n                                 when running
      action :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the path
      starts with '/' and target file exists\n                             :create
      action should run without any updates\n                               does not
      overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                       when deploying
      via destdir\n                         behaves like a configured file resource\n
      \                          when the target file is a symlink\n                             when
      configured not to manage symlink's target\n                               when
      symlink target has correct content\n                                 behaves
      like file resource not pointing to a real file\n                                   when
      force_unlink is set to true\n                                     :create unlinks
      the target\n                                   when force_unlink is set to false\n
      \                                    :create raises an error\n                                   when
      force_unlink is not set (default)\n                                     :create
      raises an error\n                               when symlink target has the
      wrong content\n                                 behaves like file resource not
      pointing to a real file\n                                   when force_unlink
      is set to true\n                                     :create unlinks the target\n
      \                                  when force_unlink is set to false\n                                     :create
      raises an error\n                                   when force_unlink is not
      set (default)\n                                     :create raises an error\n
      \                          when the target file does not exist\n                             when
      force_unlink is set to true\n                               :create updates
      the target\n                             when force_unlink is set to false\n
      \                              :create updates the target\n                             when
      force_unlink is not set (default)\n                               :create updates
      the target\n                           when the target file is a directory\n
      \                            behaves like file resource not pointing to a real
      file\n                               when force_unlink is set to true\n                                 :create
      unlinks the target\n                               when force_unlink is set
      to false\n                                 :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when notification is configured\n
      \                            when path is specified with normal separator\n
      \                              should notify the other resources correctly\n
      \                            when path is specified with windows separator\n
      \                              should notify the other resources correctly\n
      \                          when the target file does not exist\n                             when
      running action :create\n                               creates the file when
      the :create action is run\n                               creates the file with
      the correct content when the :create action is run\n                               is
      marked as updated by last action\n                             when running
      action :create_if_missing\n                               creates the file with
      the correct content\n                               is marked as updated by
      last action\n                             when running action :delete\n                               deletes
      the file when the :delete action is run\n                               is not
      marked updated by last action\n                           behaves like a securable
      resource without existing target\n                             on Windows\n
      \                              leaves owner as system default on create if owner
      is not specified\n                               sets owner when owner is specified\n
      \                              fails to set owner when owner has invalid characters\n
      \                              sets owner when owner is specified with a \\\n
      \                              leaves owner alone if owner is not specified
      and resource already exists\n                               leaves group as
      system default on create if group is not specified\n                               sets
      group when group is specified\n                               fails to set group
      when group has invalid characters\n                               leaves group
      alone if group is not specified and resource already exists\n                               does
      not inherit aces if inherits is set to false\n                               has
      the inheritable acls of parent directory if no acl is specified\n                               with
      rights and deny_rights attributes\n                                 correctly
      sets :read rights\n                                 correctly sets :read_execute
      rights\n                                 correctly sets :write rights\n                                 correctly
      sets :modify rights\n                                 correctly sets :full_control
      rights\n                                 correctly sets deny_rights\n                                 Sets
      multiple rights\n                                 Sets deny_rights ahead of
      rights\n                                 Sets deny_rights ahead of rights when
      specified in reverse order\n                               with a mode attribute\n
      \                                respects mode in string form as an octal number\n
      \                                respects mode in numeric form as a ruby-interpreted
      octal\n                                 respects the owner, group and everyone
      bits of mode\n                                 respects the individual read,
      write and execute bits of mode\n                                 warns when
      mode tries to set owner bits but owner is not specified\n                                 warns
      when mode tries to set group bits but group is not specified\n                           when
      the target file has the wrong content\n                             and the
      target file has the correct permissions\n                               behaves
      like a file with the wrong content\n                                 when diff
      is disabled\n                                   when running action :create\n
      \                                    with backups enabled\n                                       overwrites
      the file with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the wrong content\n                                 when diff is
      disabled\n                                   when running action :create\n                                     with
      backups enabled\n                                       overwrites the file
      with the updated content when the :create action is run\n                                       backs
      up the existing file\n                                       is marked as updated
      by last action\n                                     with backups disabled\n
      \                                      should not attempt to backup the existing
      file if :backup == 0\n                                     with a checksum that
      does not match the content to deploy\n                                       raises
      an exception\n                                   when running action :create_if_missing\n
      \                                    doesn't overwrite the file when the :create_if_missing
      action is run\n                                     is not marked as updated\n
      \                                  when running action :delete\n                                     deletes
      the file\n                                     is marked as updated by last
      action\n                                 when diff is enabled\n                                   sensitive
      attribute\n                                     should be insensitive by default\n
      \                                      should be falsey\n                                     when
      set\n                                       should be set on the resource\n
      \                                      when running :create action\n                                         should
      suppress the diff\n                                         should still include
      the updated checksums\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the target
      file has the correct content\n                             and the target file
      has the correct permissions\n                               behaves like a file
      with the correct content\n                                 when running action
      :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                             and the target
      file has incorrect permissions\n                               behaves like
      a file with the correct content\n                                 when running
      action :create\n                                   does not overwrite the original
      when the :create action is run\n                                   does not
      update the mtime of the file when the :create action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :create_if_missing\n                                   doesn't
      overwrite the file when the :create_if_missing action is run\n                                   is
      not marked as updated by last action\n                                 when
      running action :delete\n                                   deletes the file
      when the :delete action is run\n                                   is marked
      as updated by last action\n                               behaves like a securable
      resource with existing target\n                                 on Windows\n
      \                                  when setting owner\n                                     should
      set the owner\n                                     is marked as updated only
      if changes are made\n                                   when setting group\n
      \                                    should set the group\n                                     is
      marked as updated only if changes are made\n                                   when
      setting rights and deny_rights\n                                     should
      set the rights and deny_rights\n                                     is marked
      as updated only if changes are made\n                           when the path
      starts with '/' and target file exists\n                             :create
      action should run without any updates\n                               does not
      overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                     when running under
      why run\n                       and the resource has a path with a missing intermediate
      directory\n                         successfully doesn't create the file\n                     when
      setting atomic_update\n                       booleans should work\n                       anything
      else should raise an error\n                   behaves like a securable resource
      with reporting\n                     reading file security metadata for reporting
      on windows\n                       when the target file doesn't exist\n                         has
      empty values for file metadata in 'current_resource' (PENDING: windows reporting
      not yet fully supported)\n                         and no security metadata
      is specified in new_resource\n                           sets the metadata values
      on the new_resource as strings after creating (PENDING: windows reporting not
      yet fully supported)\n                         and owner is specified with a
      string (username) in new_resource\n                           sets the owner
      on new_resource to the username (string) of the desired owner\n                         and
      owner is specified with a fully qualified domain user\n                           sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                       when the
      target file exists\n                         and no security metadata is specified
      in new_resource\n                           sets the current values on current
      resource as strings (PENDING: windows reporting not yet fully supported)\n                         and
      owner is specified with a string (username) in new_resource\n                           sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                         and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                           sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                         and
      access rights are specified on the new_resource\n                           sets
      the expanded_rights on the current resource (PENDING: windows reporting not
      yet fully supported)\n                         and no access rights are specified
      on the current resource\n                           sets the expanded rights
      on the current resource (PENDING: windows reporting not yet fully supported)\n
      \              when fetching files over HTTPS\n             [2016-06-17 21:17:12]
      ERROR OpenSSL::SSL::SSLError: SSL_accept returned=1 errno=0 state=SSLv2/v3 read
      client hello A: http request\n               c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in
      `accept'\n             [2016-06-17 21:17:12] ERROR OpenSSL::SSL::SSLError: SSL_accept
      returned=1 errno=0 state=SSLv2/v3 read client hello A: http request\n               c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in
      `accept'\n                 behaves like a file resource\n                   when
      deploying with :move\n                     when deploying via tmpdir\n                       behaves
      like a configured file resource\n                         when the target file
      is a symlink\n                           when configured not to manage symlink's
      target\n                             when symlink target has correct content\n
      \                              behaves like file resource not pointing to a
      real file\n                                 when force_unlink is set to true\n
      \                                  :create unlinks the target\n                                 when
      force_unlink is set to false\n                                   :create raises
      an error\n                                 when force_unlink is not set (default)\n
      \                                  :create raises an error\n                             when
      symlink target has the wrong content\n                               behaves
      like file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                         when the target file does not exist\n
      \                          when force_unlink is set to true\n                             :create
      updates the target\n                           when force_unlink is set to false\n
      \                            :create updates the target\n                           when
      force_unlink is not set (default)\n                             :create updates
      the target\n                         when the target file is a directory\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when notification is configured\n                           when
      path is specified with normal separator\n                             should
      notify the other resources correctly\n                           when path is
      specified with windows separator\n                             should notify
      the other resources correctly\n                         when the target file
      does not exist\n                           when running action :create\n                             creates
      the file when the :create action is run\n                             creates
      the file with the correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                     when deploying via
      destdir\n                       behaves like a configured file resource\n                         when
      the target file is a symlink\n                           when configured not
      to manage symlink's target\n                             when symlink target
      has correct content\n                               behaves like file resource
      not pointing to a real file\n                                 when force_unlink
      is set to true\n                                   :create unlinks the target\n
      \                                when force_unlink is set to false\n                                   :create
      raises an error\n                                 when force_unlink is not set
      (default)\n                                   :create raises an error\n                             when
      symlink target has the wrong content\n                               behaves
      like file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                         when the target file does not exist\n
      \                          when force_unlink is set to true\n                             :create
      updates the target\n                           when force_unlink is set to false\n
      \                            :create updates the target\n                           when
      force_unlink is not set (default)\n                             :create updates
      the target\n                         when the target file is a directory\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when notification is configured\n                           when
      path is specified with normal separator\n                             should
      notify the other resources correctly\n                           when path is
      specified with windows separator\n                             should notify
      the other resources correctly\n                         when the target file
      does not exist\n                           when running action :create\n                             creates
      the file when the :create action is run\n                             creates
      the file with the correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                   when deploying with
      :copy\n                     when deploying via tmpdir\n                       behaves
      like a configured file resource\n                         when the target file
      is a symlink\n                           when configured not to manage symlink's
      target\n                             when symlink target has correct content\n
      \                              behaves like file resource not pointing to a
      real file\n                                 when force_unlink is set to true\n
      \                                  :create unlinks the target\n                                 when
      force_unlink is set to false\n                                   :create raises
      an error\n                                 when force_unlink is not set (default)\n
      \                                  :create raises an error\n                             when
      symlink target has the wrong content\n                               behaves
      like file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                         when the target file does not exist\n
      \                          when force_unlink is set to true\n                             :create
      updates the target\n                           when force_unlink is set to false\n
      \                            :create updates the target\n                           when
      force_unlink is not set (default)\n                             :create updates
      the target\n                         when the target file is a directory\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when notification is configured\n                           when
      path is specified with normal separator\n                             should
      notify the other resources correctly\n                           when path is
      specified with windows separator\n                             should notify
      the other resources correctly\n                         when the target file
      does not exist\n                           when running action :create\n                             creates
      the file when the :create action is run\n                             creates
      the file with the correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                     when deploying via
      destdir\n                       behaves like a configured file resource\n                         when
      the target file is a symlink\n                           when configured not
      to manage symlink's target\n                             when symlink target
      has correct content\n                               behaves like file resource
      not pointing to a real file\n                                 when force_unlink
      is set to true\n                                   :create unlinks the target\n
      \                                when force_unlink is set to false\n                                   :create
      raises an error\n                                 when force_unlink is not set
      (default)\n                                   :create raises an error\n                             when
      symlink target has the wrong content\n                               behaves
      like file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                         when the target file does not exist\n
      \                          when force_unlink is set to true\n                             :create
      updates the target\n                           when force_unlink is set to false\n
      \                            :create updates the target\n                           when
      force_unlink is not set (default)\n                             :create updates
      the target\n                         when the target file is a directory\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when notification is configured\n                           when
      path is specified with normal separator\n                             should
      notify the other resources correctly\n                           when path is
      specified with windows separator\n                             should notify
      the other resources correctly\n                         when the target file
      does not exist\n                           when running action :create\n                             creates
      the file when the :create action is run\n                             creates
      the file with the correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                   when running under
      why run\n                     and the resource has a path with a missing intermediate
      directory\n                       successfully doesn't create the file\n                   when
      setting atomic_update\n                     booleans should work\n                     anything
      else should raise an error\n               when dealing with content length
      checking\n                 when downloading compressed data\n                   should
      create the file\n                   should mark the resource as updated\n                   has
      the correct content\n                 when downloding uncompressed data\n                   should
      create the file\n                   should mark the resource as updated\n                   has
      the correct content\n                 when downloading truncated compressed
      data\n                   should raise ContentLengthMismatch\n                 when
      downloding truncated uncompressed data\n                   should raise ContentLengthMismatch\n
      \                when downloding data with transfer-encoding set\n                   should
      create the file\n                   should mark the resource as updated\n                   has
      the correct content\n                 when the download of the source raises
      an exception\n                   should not create the file\n\n             Chef::Resource::Template\n
      \              behaves like a file resource\n                 when deploying
      with :move\n                   when deploying via tmpdir\n                     behaves
      like a configured file resource\n                       when the target file
      is a symlink\n                         when configured not to manage symlink's
      target\n                           when symlink target has correct content\n
      \                            behaves like file resource not pointing to a real
      file\n                               when force_unlink is set to true\n                                 :create
      unlinks the target\n                               when force_unlink is set
      to false\n                                 :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when symlink target has the wrong
      content\n                             behaves like file resource not pointing
      to a real file\n                               when force_unlink is set to true\n
      \                                :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                       when
      the target file does not exist\n                         when force_unlink is
      set to true\n                           :create updates the target\n                         when
      force_unlink is set to false\n                           :create updates the
      target\n                         when force_unlink is not set (default)\n                           :create
      updates the target\n                       when the target file is a directory\n
      \                        behaves like file resource not pointing to a real file\n
      \                          when force_unlink is set to true\n                             :create
      unlinks the target\n                           when force_unlink is set to false\n
      \                            :create raises an error\n                           when
      force_unlink is not set (default)\n                             :create raises
      an error\n                       when notification is configured\n                         when
      path is specified with normal separator\n                           should notify
      the other resources correctly\n                         when path is specified
      with windows separator\n                           should notify the other resources
      correctly\n                       when the target file does not exist\n                         when
      running action :create\n                           creates the file when the
      :create action is run\n                           creates the file with the
      correct content when the :create action is run\n                           is
      marked as updated by last action\n                         when running action
      :create_if_missing\n                           creates the file with the correct
      content\n                           is marked as updated by last action\n                         when
      running action :delete\n                           deletes the file when the
      :delete action is run\n                           is not marked updated by last
      action\n                       behaves like a securable resource without existing
      target\n                         on Windows\n                           leaves
      owner as system default on create if owner is not specified\n                           sets
      owner when owner is specified\n                           fails to set owner
      when owner has invalid characters\n                           sets owner when
      owner is specified with a \\\n                           leaves owner alone
      if owner is not specified and resource already exists\n                           leaves
      group as system default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                   when deploying via destdir\n
      \                    behaves like a configured file resource\n                       when
      the target file is a symlink\n                         when configured not to
      manage symlink's target\n                           when symlink target has
      correct content\n                             behaves like file resource not
      pointing to a real file\n                               when force_unlink is
      set to true\n                                 :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                           when
      symlink target has the wrong content\n                             behaves like
      file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                       when the target file does not exist\n
      \                        when force_unlink is set to true\n                           :create
      updates the target\n                         when force_unlink is set to false\n
      \                          :create updates the target\n                         when
      force_unlink is not set (default)\n                           :create updates
      the target\n                       when the target file is a directory\n                         behaves
      like file resource not pointing to a real file\n                           when
      force_unlink is set to true\n                             :create unlinks the
      target\n                           when force_unlink is set to false\n                             :create
      raises an error\n                           when force_unlink is not set (default)\n
      \                            :create raises an error\n                       when
      notification is configured\n                         when path is specified
      with normal separator\n                           should notify the other resources
      correctly\n                         when path is specified with windows separator\n
      \                          should notify the other resources correctly\n                       when
      the target file does not exist\n                         when running action
      :create\n                           creates the file when the :create action
      is run\n                           creates the file with the correct content
      when the :create action is run\n                           is marked as updated
      by last action\n                         when running action :create_if_missing\n
      \                          creates the file with the correct content\n                           is
      marked as updated by last action\n                         when running action
      :delete\n                           deletes the file when the :delete action
      is run\n                           is not marked updated by last action\n                       behaves
      like a securable resource without existing target\n                         on
      Windows\n                           leaves owner as system default on create
      if owner is not specified\n                           sets owner when owner
      is specified\n                           fails to set owner when owner has invalid
      characters\n                           sets owner when owner is specified with
      a \\\n                           leaves owner alone if owner is not specified
      and resource already exists\n                           leaves group as system
      default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                 when deploying with :copy\n
      \                  when deploying via tmpdir\n                     behaves like
      a configured file resource\n                       when the target file is a
      symlink\n                         when configured not to manage symlink's target\n
      \                          when symlink target has correct content\n                             behaves
      like file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when symlink target has the wrong
      content\n                             behaves like file resource not pointing
      to a real file\n                               when force_unlink is set to true\n
      \                                :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                       when
      the target file does not exist\n                         when force_unlink is
      set to true\n                           :create updates the target\n                         when
      force_unlink is set to false\n                           :create updates the
      target\n                         when force_unlink is not set (default)\n                           :create
      updates the target\n                       when the target file is a directory\n
      \                        behaves like file resource not pointing to a real file\n
      \                          when force_unlink is set to true\n                             :create
      unlinks the target\n                           when force_unlink is set to false\n
      \                            :create raises an error\n                           when
      force_unlink is not set (default)\n                             :create raises
      an error\n                       when notification is configured\n                         when
      path is specified with normal separator\n                           should notify
      the other resources correctly\n                         when path is specified
      with windows separator\n                           should notify the other resources
      correctly\n                       when the target file does not exist\n                         when
      running action :create\n                           creates the file when the
      :create action is run\n                           creates the file with the
      correct content when the :create action is run\n                           is
      marked as updated by last action\n                         when running action
      :create_if_missing\n                           creates the file with the correct
      content\n                           is marked as updated by last action\n                         when
      running action :delete\n                           deletes the file when the
      :delete action is run\n                           is not marked updated by last
      action\n                       behaves like a securable resource without existing
      target\n                         on Windows\n                           leaves
      owner as system default on create if owner is not specified\n                           sets
      owner when owner is specified\n                           fails to set owner
      when owner has invalid characters\n                           sets owner when
      owner is specified with a \\\n                           leaves owner alone
      if owner is not specified and resource already exists\n                           leaves
      group as system default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                   when deploying via destdir\n
      \                    behaves like a configured file resource\n                       when
      the target file is a symlink\n                         when configured not to
      manage symlink's target\n                           when symlink target has
      correct content\n                             behaves like file resource not
      pointing to a real file\n                               when force_unlink is
      set to true\n                                 :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                           when
      symlink target has the wrong content\n                             behaves like
      file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                       when the target file does not exist\n
      \                        when force_unlink is set to true\n                           :create
      updates the target\n                         when force_unlink is set to false\n
      \                          :create updates the target\n                         when
      force_unlink is not set (default)\n                           :create updates
      the target\n                       when the target file is a directory\n                         behaves
      like file resource not pointing to a real file\n                           when
      force_unlink is set to true\n                             :create unlinks the
      target\n                           when force_unlink is set to false\n                             :create
      raises an error\n                           when force_unlink is not set (default)\n
      \                            :create raises an error\n                       when
      notification is configured\n                         when path is specified
      with normal separator\n                           should notify the other resources
      correctly\n                         when path is specified with windows separator\n
      \                          should notify the other resources correctly\n                       when
      the target file does not exist\n                         when running action
      :create\n                           creates the file when the :create action
      is run\n                           creates the file with the correct content
      when the :create action is run\n                           is marked as updated
      by last action\n                         when running action :create_if_missing\n
      \                          creates the file with the correct content\n                           is
      marked as updated by last action\n                         when running action
      :delete\n                           deletes the file when the :delete action
      is run\n                           is not marked updated by last action\n                       behaves
      like a securable resource without existing target\n                         on
      Windows\n                           leaves owner as system default on create
      if owner is not specified\n                           sets owner when owner
      is specified\n                           fails to set owner when owner has invalid
      characters\n                           sets owner when owner is specified with
      a \\\n                           leaves owner alone if owner is not specified
      and resource already exists\n                           leaves group as system
      default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                 when running under why run\n
      \                  and the resource has a path with a missing intermediate directory\n
      \                    successfully doesn't create the file\n                 when
      setting atomic_update\n                   booleans should work\n                   anything
      else should raise an error\n               behaves like a securable resource
      with reporting\n                 reading file security metadata for reporting
      on windows\n                   when the target file doesn't exist\n                     has
      empty values for file metadata in 'current_resource' (PENDING: windows reporting
      not yet fully supported)\n                     and no security metadata is specified
      in new_resource\n                       sets the metadata values on the new_resource
      as strings after creating (PENDING: windows reporting not yet fully supported)\n
      \                    and owner is specified with a string (username) in new_resource\n
      \                      sets the owner on new_resource to the username (string)
      of the desired owner\n                     and owner is specified with a fully
      qualified domain user\n                       sets the owner on new_resource
      to the fully qualified name of the desired owner (PENDING: windows reporting
      not yet fully supported)\n                   when the target file exists\n                     and
      no security metadata is specified in new_resource\n                       sets
      the current values on current resource as strings (PENDING: windows reporting
      not yet fully supported)\n                     and owner is specified with a
      string (username) in new_resource\n                       sets the owner on
      current_resource to the username (string) of the desired owner (PENDING: windows
      reporting not yet fully supported)\n                     and owner is specified
      as a fully qualified 'domain\\user' in new_resource\n                       sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                     and
      access rights are specified on the new_resource\n                       sets
      the expanded_rights on the current resource (PENDING: windows reporting not
      yet fully supported)\n                     and no access rights are specified
      on the current resource\n                       sets the expanded rights on
      the current resource (PENDING: windows reporting not yet fully supported)\n
      \              when the target file does not exist\n                 creates
      the template with the rendered content using the variable attribute when the
      :create action is run\n                 creates the template with the rendered
      content using a local erb file when the :create action is run\n               when
      the template resource defines helper methods\n                 using single
      helper syntax\n                   behaves like a template with helpers\n                     generates
      expected content by calling helper methods\n                 using single helper
      syntax referencing @node\n                   behaves like a template with helpers\n
      \                    generates expected content by calling helper methods\n
      \                using an inline block to define helpers\n                   behaves
      like a template with helpers\n                     generates expected content
      by calling helper methods\n                 using an inline block referencing
      @node\n                   behaves like a template with helpers\n                     generates
      expected content by calling helper methods\n                 using a module
      from a library\n                   behaves like a template with helpers\n                     generates
      expected content by calling helper methods\n                 using a module
      from a library referencing @node\n                   behaves like a template
      with helpers\n                     generates expected content by calling helper
      methods\n                 using helpers with partial templates\n                   behaves
      like a template with helpers\n                     generates expected content
      by calling helper methods\n               when template source contains windows
      style line endings\n                 for all lines\n                   output
      should contain platform's line endings\n                 for some lines\n                   output
      should contain platform's line endings\n                 for no lines\n                   output
      should contain platform's line endings\n\n             Chef::Provider::User::Windows\n
      \              action :create\n                 creates a user when a username
      and password are given\n                 reports no changes if there are no
      changes needed\n                 allows chaning the password\n                 with
      a gid specified\n                   warns unsupported\n               action
      :remove\n                 deletes the user\n                 is idempotent\n
      \              action :lock\n                 locks the user account\n                 is
      idempotent\n               action :unlock\n                 unlocks the user
      account\n                 is idempotent\n\n             Chef::REST\n               behaves
      like downloading all the things\n                 when downloading a simple
      uncompressed file\n                   behaves like downloads requests correctly\n
      \                    successfully downloads a streaming request\n                     successfully
      downloads a GET request\n                 when downloading a compressed file
      that should be left compressed\n                   behaves like downloads requests
      correctly\n                     successfully downloads a streaming request\n
      \                    successfully downloads a GET request\n                 when
      downloading a file that has been compressed by the webserver\n                   behaves
      like downloads requests correctly\n                     successfully downloads
      a streaming request\n                     successfully downloads a GET request\n
      \                when downloading an uncompressed file with a correct content_length\n
      \                  behaves like downloads requests correctly\n                     successfully
      downloads a streaming request\n                     successfully downloads a
      GET request\n                 when downloading a file that has been compressed
      by the webserver with a correct content_length\n                   behaves like
      downloads requests correctly\n                     successfully downloads a
      streaming request\n                     successfully downloads a GET request\n
      \                when downloading an uncompressed file that is truncated\n                   behaves
      like validates content length and throws an exception\n                     fails
      validation on a streaming download\n                     fails validation on
      a GET request\n                 when downloading a file that has been compressed
      by the webserver that is truncated\n                   behaves like validates
      content length and throws an exception\n                     fails validation
      on a streaming download\n                     fails validation on a GET request\n
      \                when downloading a file that has transfer encoding set with
      a bad content length that should be ignored\n                   behaves like
      downloads requests correctly\n                     successfully downloads a
      streaming request\n                     successfully downloads a GET request\n
      \                when downloading an endpoint that 403s\n                   behaves
      like an endpoint that 403s\n                     fails with a Net::HTTPServerException
      on a streaming download\n                     fails with a Net::HTTPServerException
      on a GET request\n                 when downloading an endpoint that 403s\n
      \                  behaves like a 403 after a successful request when reusing
      the request object\n                     fails with a Net::HTTPServerException
      on a streaming download\n                     fails with a Net::HTTPServerException
      on a GET request\n\n             TinyServer::API\n               is a Singleton\n
      \              clears the router\n               creates a route for a GET request\n
      \              creates a route for a request with a block\n               returns
      debugging info for 404s\n\n             TinyServer::Manager\n               runs
      the server\n\n             ChefConfig::PathHelper escape_glob\n               escapes
      the glob metacharacters so globbing succeeds\n\n             Chef::Util::Powershell::Cmdlet\n
      \              executes a simple process\n               #run does not raise
      a PowershellCmdletException exception if the command cannot be executed\n               #run!
      raises a PowershellCmdletException exception if the command cannot be executed\n
      \              executes a 64-bit command on a 64-bit OS, 32-bit otherwise\n
      \              passes command line switches to the command\n               passes
      command line arguments to the command\n               passes command line arguments
      and switches to the command\n               passes execution options to the
      command\n               when returning json\n                 returns json format
      data\n               when returning Ruby objects\n                 returns object
      format data\n               when constructor is given invalid arguments\n                 throws
      an exception if an invalid format is passed to the constructor\n\n             Chef
      Versions\n               chef-client version should be sane\n               chef-shell
      version should be sane\n               chef-apply version should be sane\n               knife
      version should be sane\n               chef-solo version should be sane\n\n
      \            Chef::ReservedNames::Win32::Crypto\n               #encrypt\n                 can
      be decrypted by powershell\n\n             Chef::Win32::Registry\n               hive_exists?\n
      \                returns true if the hive exists\n                 returns false
      if the hive does not exist\n               key_exists?\n                 returns
      true if the key path exists\n                 returns false if the key path
      does not exist\n                 throws an exception if the hive does not exist\n
      \              key_exists!\n                 returns true if the key path exists\n
      \                throws an exception if the key path does not exist\n                 throws
      an exception if the hive does not exist\n               value_exists?\n                 throws
      an exception if the hive does not exist\n                 throws an exception
      if the key does not exist\n                 returns true if the value exists\n
      \                returns true if the value exists with a case mismatch on the
      value name\n                 returns false if the value does not exist\n               value_exists!\n
      \                throws an exception if the hive does not exist\n                 throws
      an exception if the key does not exist\n                 returns true if the
      value exists\n                 returns true if the value exists with a case
      mismatch on the value name\n                 throws an exception if the value
      does not exist\n               data_exists?\n                 throws an exception
      if the hive does not exist\n                 throws an exception if the key
      does not exist\n                 returns true if all the data matches\n                 returns
      true if all the data matches with a case mismatch on the data name\n                 returns
      false if the name does not exist\n                 returns false if the types
      do not match\n                 returns false if the data does not match\n               data_exists!\n
      \                throws an exception if the hive does not exist\n                 throws
      an exception if the key does not exist\n                 returns true if all
      the data matches\n                 returns true if all the data matches with
      a case mismatch on the data name\n                 throws an exception if the
      name does not exist\n                 throws an exception if the types do not
      match\n                 throws an exception if the data does not match\n               get_values\n
      \                returns all values for a key if it exists\n                 throws
      an exception if the key does not exist\n                 throws an exception
      if the hive does not exist\n               set_value\n                 updates
      a value if the key, value exist and type matches and value different\n                 updates
      a value if the type does match and the values are different\n                 creates
      a value if key exists and value does not\n                 does nothing if data,type
      and name parameters for the value are same\n                 throws an exception
      if the key does not exist\n                 throws an exception if the hive
      does not exist\n                 casts an integer string given as a dword into
      an integer\n                 casts a nonsense string given as a dword into zero\n
      \                throws an exception when trying to cast an array to an int
      for a dword\n                 stores the string representation of an array into
      a string if you pass it an array\n                 stores the string representation
      of a number into a string if you pass it an number\n                 throws
      an exception when a multi-string is passed a number\n                 throws
      an exception when a multi-string is passed a string\n               create_key\n
      \                throws an exception if the path has missing keys but recursive
      set to false\n                 creates the key_path if the keys were missing
      but recursive was set to true\n                 does nothing if the key already
      exists\n                 throws an exception of the hive does not exist\n               delete_value\n
      \                deletes values if the value exists\n                 does nothing
      if value does not exist\n                 throws an exception if the key does
      not exist?\n                 throws an exception if the hive does not exist\n
      \              delete_key\n                 deletes a key if it has no subkeys\n
      \                throws an exception if key to delete has subkeys and recursive
      is false\n                 deletes a key if it has subkeys and recursive true\n
      \                does nothing if the key does not exist\n                 throws
      an exception if the hive does not exist\n               has_subkeys?\n                 throws
      an exception if the hive was missing\n                 throws an exception if
      the key is missing\n                 returns true if the key has subkeys\n                 returns
      false if the key has no subkeys\n               get_subkeys\n                 throws
      an exception if the key is missing\n                 throws an exception if
      the hive does not exist\n                 returns the array of subkeys for a
      given key\n               architecture\n                 on 32-bit\n                   registry
      constructor\n                     throws an exception if requested architecture
      is 64bit but running on 32bit\n                     can correctly set the requested
      architecture to 32-bit\n                     can correctly set the requested
      architecture to :machine\n                   architecture setter\n                     throws
      an exception if requested architecture is 64bit but running on 32bit\n                     sets
      the requested architecture to :machine if passed :machine\n                     sets
      the requested architecture to 32-bit if passed i386 as a string\n                 on
      64-bit\n                   registry constructor\n                     can correctly
      set the requested architecture to 32-bit\n                     can correctly
      set the requested architecture to 64-bit\n                     can correctly
      set the requested architecture to :machine\n                   architecture
      setter\n                     sets the requested architecture to 64-bit if passed
      64-bit\n                     sets the requested architecture to :machine if
      passed :machine\n                     sets the requested architecture to 32-bit
      if passed 32-bit\n                 when running on an actual 64-bit server\n
      \                  key_exists?\n                     does not find 64-bit keys
      in the 32-bit registry\n                     finds 32-bit keys in the 32-bit
      registry\n                     does not find 32-bit keys in the 64-bit registry\n
      \                    finds 64-bit keys in the 64-bit registry\n                   value_exists?\n
      \                    does not find 64-bit values in the 32-bit registry\n                     finds
      32-bit values in the 32-bit registry\n                     does not find 32-bit
      values in the 64-bit registry\n                     finds 64-bit values in the
      64-bit registry\n                   data_exists?\n                     does
      not find 64-bit keys in the 32-bit registry\n                     finds 32-bit
      keys in the 32-bit registry\n                     does not find 32-bit keys
      in the 64-bit registry\n                     finds 64-bit keys in the 64-bit
      registry\n                   create_key\n                     can create a 32-bit
      only registry key\n                     can create a 64-bit only registry key\n\n
      \            Chef::Win32::Security\n               has_admin_privileges? returns
      true when running as admin\n               has_admin_privileges? returns false
      when running as non-admin (PENDING: requires user support in mixlib-shellout)\n
      \              get_file_security\n                 should return a security
      descriptor when called with a path that exists\n               access_check\n
      \                should check if the provided token has the desired access\n
      \              Chef::Win32::Security::Token\n                 with all rights\n
      \                  can duplicate a token\n                 with read only rights\n
      \                  raises an exception when trying to duplicate\n\n             Chef::ReservedNames::Win32::SID\n
      \              should resolve default_security_object_group as a sane user group\n
      \              running as an elevated administrator user\n                 should
      resolve default_security_object_owner as the Administrators group\n               running
      as a non-elevated administrator user\n                 should resolve default_security_object_owner
      as the current user (PENDING: requires user support in mixlib-shellout, see
      security_spec.rb)\n               running as a non-elevated, non-administrator
      user\n                 should resolve default_security_object_owner as the current
      user (PENDING: requires user support in mixlib-shellout, see security_spec.rb)\n\n
      \            Chef::ReservedNames::Win32::File::VersionInfo\n               file
      version has the same version as windows\n               product version has
      the same version as windows\n               company is microsoft\n               file
      description is command processor\n\n             Chef::ReservedNames::Win32::Version\n
      \              Win32 version object\n                 should have have one method
      for each marketing version\n                 should only contain version methods
      with legal method names\n                 should have exactly one method that
      returns true\n                 should successfully execute all version methods\n
      \              Windows Operating System version\n                 should match
      the version from WMI\n\n             Pending: (Failures listed here are expected
      and do not affect your suite's status)\n\n               1) Chef::Audit::RspecFormatter
      should not close the output using our formatter\n                  # This spec
      requires forking to work properly, and your platform does not support forking\n
      \                 # ./spec/functional/audit/rspec_formatter_spec.rb:44\n\n               2)
      Chef::Audit::Runner#run log location is stdout Correctly runs an empty controls
      block\n                  # This spec requires forking to work properly, and
      your platform does not support forking\n                  # ./spec/functional/audit/runner_spec.rb:88\n\n
      \              3) Chef::Audit::Runner#run log location is stdout there is a
      single successful control correctly runs\n                  # This spec requires
      forking to work properly, and your platform does not support forking\n                  #
      ./spec/functional/audit/runner_spec.rb:96\n\n               4) Chef::Audit::Runner#run
      log location is stdout there is a single failing control correctly runs\n                  #
      This spec requires forking to work properly, and your platform does not support
      forking\n                  # ./spec/functional/audit/runner_spec.rb:107\n\n
      \              5) Chef::DSL::RebootPending reboot_pending? HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Component
      Based Servicing\\RebootRequired returns true if the registry key exists\n                  #
      Permissions are limited to 'TrustedInstaller' by default\n                  Failure/Error:
      registry.create_key(reg_key, false)\n\n                  Win32::Registry::Error:\n
      \                   Access is denied.\n                  # ./lib/chef/win32/registry.rb:120:in
      `create_key'\n                  # ./spec/functional/dsl/reboot_pending_spec.rb:69:in
      `block (4 levels) in <top (required)>'\n\n               6) Chef::Resource::CookbookFile
      behaves like a securable resource with reporting reading file security metadata
      for reporting on windows when the target file doesn't exist has empty values
      for file metadata in 'current_resource'\n                  # windows reporting
      not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \              7) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and no security metadata is specified in new_resource
      sets the metadata values on the new_resource as strings after creating\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \              8) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and owner is specified with a fully qualified
      domain user sets the owner on new_resource to the fully qualified name of the
      desired owner\n                  # windows reporting not yet fully supported\n
      \                 # ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \              9) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no security metadata is specified in new_resource
      sets the current values on current resource as strings\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \              10) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified with a string (username) in new_resource
      sets the owner on current_resource to the username (string) of the desired owner\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \              11) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified as a fully qualified 'domain\\user'
      in new_resource sets the owner on current_resource to the fully qualified name
      of the desired owner\n                  # windows reporting not yet fully supported\n
      \                 # ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \              12) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and access rights are specified on the new_resource sets
      the expanded_rights on the current resource\n                  # windows reporting
      not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \              13) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no access rights are specified on the current resource
      sets the expanded rights on the current resource\n                  # windows
      reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \              14) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist has empty values for file metadata in 'current_resource'\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \              15) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and no security metadata is specified in new_resource
      sets the metadata values on the new_resource as strings after creating\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \              16) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and owner is specified with a fully qualified
      domain user sets the owner on new_resource to the fully qualified name of the
      desired owner\n                  # windows reporting not yet fully supported\n
      \                 # ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \              17) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no security metadata is specified in new_resource
      sets the current values on current resource as strings\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \              18) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified with a string (username) in new_resource
      sets the owner on current_resource to the username (string) of the desired owner\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \              19) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified as a fully qualified 'domain\\user'
      in new_resource sets the owner on current_resource to the fully qualified name
      of the desired owner\n                  # windows reporting not yet fully supported\n
      \                 # ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \              20) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and access rights are specified on the new_resource sets
      the expanded_rights on the current resource\n                  # windows reporting
      not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \              21) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no access rights are specified on the current resource
      sets the expanded rights on the current resource\n                  # windows
      reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \              22) Chef::Resource::DscResource when Powershell supports Invoke-DscResource
      with an invalid dsc resource raises an exception if the resource is not found\n
      \                 # Requires Powershell >= 5.0.10018.0\n                  #
      ./spec/functional/resource/dsc_resource_spec.rb:46\n\n               23) Chef::Resource::DscResource
      when Powershell supports Invoke-DscResource with a valid dsc resource converges
      the resource if it is not converged\n                  # Requires Powershell
      >= 5.0.10018.0\n                  # ./spec/functional/resource/dsc_resource_spec.rb:67\n\n
      \              24) Chef::Resource::DscResource when Powershell supports Invoke-DscResource
      with a valid dsc resource does not converge the resource if it is already converged\n
      \                 # Requires Powershell >= 5.0.10018.0\n                  #
      ./spec/functional/resource/dsc_resource_spec.rb:76\n\n               25) Chef::Resource::File
      behaves like a securable resource with reporting reading file security metadata
      for reporting on windows when the target file doesn't exist has empty values
      for file metadata in 'current_resource'\n                  # windows reporting
      not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \              26) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file doesn't exist and no security metadata is specified in new_resource sets
      the metadata values on the new_resource as strings after creating\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \              27) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file doesn't exist and owner is specified with a fully qualified domain user
      sets the owner on new_resource to the fully qualified name of the desired owner\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \              28) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file exists and no security metadata is specified in new_resource sets the current
      values on current resource as strings\n                  # windows reporting
      not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \              29) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file exists and owner is specified with a string (username) in new_resource
      sets the owner on current_resource to the username (string) of the desired owner\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \              30) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file exists and owner is specified as a fully qualified 'domain\\user' in new_resource
      sets the owner on current_resource to the fully qualified name of the desired
      owner\n                  # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \              31) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file exists and access rights are specified on the new_resource sets the expanded_rights
      on the current resource\n                  # windows reporting not yet fully
      supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \              32) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file exists and no access rights are specified on the current resource sets
      the expanded rights on the current resource\n                  # windows reporting
      not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \              33) Chef::Resource::RemoteDirectory behaves like a securable
      resource with reporting reading file security metadata for reporting on windows
      when the target file doesn't exist has empty values for file metadata in 'current_resource'\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \              34) Chef::Resource::RemoteDirectory behaves like a securable
      resource with reporting reading file security metadata for reporting on windows
      when the target file doesn't exist and no security metadata is specified in
      new_resource sets the metadata values on the new_resource as strings after creating\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \              35) Chef::Resource::RemoteDirectory behaves like a securable
      resource with reporting reading file security metadata for reporting on windows
      when the target file doesn't exist and owner is specified with a fully qualified
      domain user sets the owner on new_resource to the fully qualified name of the
      desired owner\n                  # windows reporting not yet fully supported\n
      \                 # ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \              36) Chef::Resource::RemoteDirectory behaves like a securable
      resource with reporting reading file security metadata for reporting on windows
      when the target file exists and no security metadata is specified in new_resource
      sets the current values on current resource as strings\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \              37) Chef::Resource::RemoteDirectory behaves like a securable
      resource with reporting reading file security metadata for reporting on windows
      when the target file exists and owner is specified with a string (username)
      in new_resource sets the owner on current_resource to the username (string)
      of the desired owner\n                  # windows reporting not yet fully supported\n
      \                 # ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \              38) Chef::Resource::RemoteDirectory behaves like a securable
      resource with reporting reading file security metadata for reporting on windows
      when the target file exists and owner is specified as a fully qualified 'domain\\user'
      in new_resource sets the owner on current_resource to the fully qualified name
      of the desired owner\n                  # windows reporting not yet fully supported\n
      \                 # ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \              39) Chef::Resource::RemoteDirectory behaves like a securable
      resource with reporting reading file security metadata for reporting on windows
      when the target file exists and access rights are specified on the new_resource
      sets the expanded_rights on the current resource\n                  # windows
      reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \              40) Chef::Resource::RemoteDirectory behaves like a securable
      resource with reporting reading file security metadata for reporting on windows
      when the target file exists and no access rights are specified on the current
      resource sets the expanded rights on the current resource\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \              41) Chef::Resource::RemoteFile when fetching files over HTTP
      when using normal encoding behaves like a securable resource with reporting
      reading file security metadata for reporting on windows when the target file
      doesn't exist has empty values for file metadata in 'current_resource'\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \              42) Chef::Resource::RemoteFile when fetching files over HTTP
      when using normal encoding behaves like a securable resource with reporting
      reading file security metadata for reporting on windows when the target file
      doesn't exist and no security metadata is specified in new_resource sets the
      metadata values on the new_resource as strings after creating\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \              43) Chef::Resource::RemoteFile when fetching files over HTTP
      when using normal encoding behaves like a securable resource with reporting
      reading file security metadata for reporting on windows when the target file
      doesn't exist and owner is specified with a fully qualified domain user sets
      the owner on new_resource to the fully qualified name of the desired owner\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \              44) Chef::Resource::RemoteFile when fetching files over HTTP
      when using normal encoding behaves like a securable resource with reporting
      reading file security metadata for reporting on windows when the target file
      exists and no security metadata is specified in new_resource sets the current
      values on current resource as strings\n                  # windows reporting
      not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \              45) Chef::Resource::RemoteFile when fetching files over HTTP
      when using normal encoding behaves like a securable resource with reporting
      reading file security metadata for reporting on windows when the target file
      exists and owner is specified with a string (username) in new_resource sets
      the owner on current_resource to the username (string) of the desired owner\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \              46) Chef::Resource::RemoteFile when fetching files over HTTP
      when using normal encoding behaves like a securable resource with reporting
      reading file security metadata for reporting on windows when the target file
      exists and owner is specified as a fully qualified 'domain\\user' in new_resource
      sets the owner on current_resource to the fully qualified name of the desired
      owner\n                  # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \              47) Chef::Resource::RemoteFile when fetching files over HTTP
      when using normal encoding behaves like a securable resource with reporting
      reading file security metadata for reporting on windows when the target file
      exists and access rights are specified on the new_resource sets the expanded_rights
      on the current resource\n                  # windows reporting not yet fully
      supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \              48) Chef::Resource::RemoteFile when fetching files over HTTP
      when using normal encoding behaves like a securable resource with reporting
      reading file security metadata for reporting on windows when the target file
      exists and no access rights are specified on the current resource sets the expanded
      rights on the current resource\n                  # windows reporting not yet
      fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \              49) Chef::Resource::RemoteFile when fetching files over HTTP
      when using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file doesn't
      exist has empty values for file metadata in 'current_resource'\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \              50) Chef::Resource::RemoteFile when fetching files over HTTP
      when using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file doesn't
      exist and no security metadata is specified in new_resource sets the metadata
      values on the new_resource as strings after creating\n                  # windows
      reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \              51) Chef::Resource::RemoteFile when fetching files over HTTP
      when using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file doesn't
      exist and owner is specified with a fully qualified domain user sets the owner
      on new_resource to the fully qualified name of the desired owner\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \              52) Chef::Resource::RemoteFile when fetching files over HTTP
      when using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and no security metadata is specified in new_resource sets the current values
      on current resource as strings\n                  # windows reporting not yet
      fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \              53) Chef::Resource::RemoteFile when fetching files over HTTP
      when using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and owner is specified with a string (username) in new_resource sets the owner
      on current_resource to the username (string) of the desired owner\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \              54) Chef::Resource::RemoteFile when fetching files over HTTP
      when using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and owner is specified as a fully qualified 'domain\\user' in new_resource sets
      the owner on current_resource to the fully qualified name of the desired owner\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \              55) Chef::Resource::RemoteFile when fetching files over HTTP
      when using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and access rights are specified on the new_resource sets the expanded_rights
      on the current resource\n                  # windows reporting not yet fully
      supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \              56) Chef::Resource::RemoteFile when fetching files over HTTP
      when using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and no access rights are specified on the current resource sets the expanded
      rights on the current resource\n                  # windows reporting not yet
      fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \              57) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist has empty values for file metadata in 'current_resource'\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \              58) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and no security metadata is specified in new_resource
      sets the metadata values on the new_resource as strings after creating\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \              59) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and owner is specified with a fully qualified
      domain user sets the owner on new_resource to the fully qualified name of the
      desired owner\n                  # windows reporting not yet fully supported\n
      \                 # ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \              60) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no security metadata is specified in new_resource
      sets the current values on current resource as strings\n                  #
      windows reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \              61) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified with a string (username) in new_resource
      sets the owner on current_resource to the username (string) of the desired owner\n
      \                 # windows reporting not yet fully supported\n                  #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \              62) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified as a fully qualified 'domain\\user'
      in new_resource sets the owner on current_resource to the fully qualified name
      of the desired owner\n                  # windows reporting not yet fully supported\n
      \                 # ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \              63) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and access rights are specified on the new_resource sets
      the expanded_rights on the current resource\n                  # windows reporting
      not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \              64) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no access rights are specified on the current resource
      sets the expanded rights on the current resource\n                  # windows
      reporting not yet fully supported\n                  # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \              65) Chef::Win32::Security has_admin_privileges? returns false
      when running as non-admin\n                  # requires user support in mixlib-shellout\n
      \                 # ./spec/functional/win32/security_spec.rb:34\n\n               66)
      Chef::ReservedNames::Win32::SID running as a non-elevated administrator user
      should resolve default_security_object_owner as the current user\n                  #
      requires user support in mixlib-shellout, see security_spec.rb\n                  #
      ./spec/functional/win32/sid_spec.rb:43\n\n               67) Chef::ReservedNames::Win32::SID
      running as a non-elevated, non-administrator user should resolve default_security_object_owner
      as the current user\n                  # requires user support in mixlib-shellout,
      see security_spec.rb\n                  # ./spec/functional/win32/sid_spec.rb:50\n\n
      \            Failures:\n\n               1) Chef::Resource::DscScript when using
      ps_credential allows the use of ps_credential FIXED\n                  Expected
      pending 'Pended until we can adjust the test cert to meet the WMF 5 cert requirements.'
      to fail. No Error was raised.\n                  # ./spec/functional/resource/dsc_script_spec.rb:471\n\n
      \            Finished in 13 minutes 38 seconds (files took 31.19 seconds to
      load)\n             3549 examples, 1 failure, 67 pending\n\n             Failed
      examples:\n\n             rspec ./spec/functional/resource/dsc_script_spec.rb:471
      # Chef::Resource::DscScript when using ps_credential allows the use of ps_credential\n
      \            STDERR: WARNING: Shared example group 'with a chef repo' has been
      previously defined at:\n               c:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/cheffish-2.0.4/lib/cheffish/rspec/repository_support.rb:12\n
      \            ...and you are now defining it at:\n               C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/support/shared/integration/integration_helper.rb:111\n
      \            The new definition will overwrite the original one.\n             Deleted
      cookbook[obsolete-cookbook][1.0.0]\n             Deleted cookbook[obsolete-cookbook][1.1.0]\n
      \            Deleted cookbook[obsolete-cookbook][1.2.0]\n             Deleted
      cookbook[obsolete-cookbook][1.0.0]\n             Deleted cookbook[obsolete-cookbook][1.0.0]\n
      \            Deleted cookbook[obsolete-cookbook][1.1.0]\n             Deleted
      cookbook[obsolete-cookbook][1.2.0]\n             WARNING: Using the `raise_error`
      matcher without providing a specific error or message risks false positives,
      since `raise_error` will match when Ruby raises a `NoMethodError`, `NameError`
      or `ArgumentError`, potentially allowing the expectation to pass without even
      executing the method you are intending to call. Actual error raised was #<ArgumentError:
      group[group3267] (dynamically defined) had an error: ArgumentError: A member
      could not be added to or removed from the local group because the member does
      not exist.\n             ---- Begin Win32 API output ----\n             System
      Error Code: 1387\n             System Error Message: A member could not be added
      to or removed from the local group because the member does not exist.\n             ----
      End Win32 API output ----\n             >. Instead consider providing a specific
      error class or message. This message can be supressed by setting: `RSpec::Expectations.configuration.warn_about_potential_false_positives
      = false`. Called from C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/functional/resource/group_spec.rb:145:in
      `block (5 levels) in <top (required)>'.\n             WARNING: Using the `raise_error`
      matcher without providing a specific error or message risks false positives,
      since `raise_error` will match when Ruby raises a `NoMethodError`, `NameError`
      or `ArgumentError`, potentially allowing the expectation to pass without even
      executing the method you are intending to call. Actual error raised was #<Chef::Exceptions::Win32APIError:
      group[group7380] (dynamically defined) had an error: Chef::Exceptions::Win32APIError:
      No mapping between account names and security IDs was done.\n             ----
      Begin Win32 API output ----\n             System Error Code: 1332\n             System
      Error Message: No mapping between account names and security IDs was done.\n
      \            ---- End Win32 API output ----\n             >. Instead consider
      providing a specific error class or message. This message can be supressed by
      setting: `RSpec::Expectations.configuration.warn_about_potential_false_positives
      = false`. Called from C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/functional/resource/group_spec.rb:155:in
      `block (5 levels) in <top (required)>'.\n             WARNING: Using the `raise_error`
      matcher without providing a specific error or message risks false positives,
      since `raise_error` will match when Ruby raises a `NoMethodError`, `NameError`
      or `ArgumentError`, potentially allowing the expectation to pass without even
      executing the method you are intending to call. Actual error raised was #<ArgumentError:
      group[group6414] (dynamically defined) had an error: ArgumentError: A member
      could not be added to or removed from the local group because the member does
      not exist.\n             ---- Begin Win32 API output ----\n             System
      Error Code: 1387\n             System Error Message: A member could not be added
      to or removed from the local group because the member does not exist.\n             ----
      End Win32 API output ----\n             >. Instead consider providing a specific
      error class or message. This message can be supressed by setting: `RSpec::Expectations.configuration.warn_about_potential_false_positives
      = false`. Called from C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/functional/resource/group_spec.rb:145:in
      `block (5 levels) in <top (required)>'.\n             WARNING: Using the `raise_error`
      matcher without providing a specific error or message risks false positives,
      since `raise_error` will match when Ruby raises a `NoMethodError`, `NameError`
      or `ArgumentError`, potentially allowing the expectation to pass without even
      executing the method you are intending to call. Actual error raised was #<Chef::Exceptions::Win32APIError:
      group[group1320] (dynamically defined) had an error: Chef::Exceptions::Win32APIError:
      No mapping between account names and security IDs was done.\n             ----
      Begin Win32 API output ----\n             System Error Code: 1332\n             System
      Error Message: No mapping between account names and security IDs was done.\n
      \            ---- End Win32 API output ----\n             >. Instead consider
      providing a specific error class or message. This message can be supressed by
      setting: `RSpec::Expectations.configuration.warn_about_potential_false_positives
      = false`. Called from C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/functional/resource/group_spec.rb:155:in
      `block (5 levels) in <top (required)>'.\n             Invalid switch - \"test-dir\".\n
      \            Invalid switch - \"test-dir\".\n             Invalid switch - \"test-dir\".\n
      \            Invalid switch - \"test-dir\".\n             Invalid switch - \"test-dir\".\n
      \            Invalid switch - \"test-dir\".\n             Invalid switch - \"test-dir\".\n
      \            Invalid switch - \"test-dir\".\n             Invalid switch - \"test-dir\".\n
      \            Invalid switch - \"test-dir\".\n             Invalid switch - \"test-dir\".\n
      \            Invalid switch - \"test-dir\".\n             Invalid switch - \"test-dir\".\n
      \            Invalid switch - \"test-dir\".\n             Invalid switch - \"test-dir\".\n
      \            Invalid switch - \"test-dir\".\n             Invalid switch - \"test-dir\".\n
      \            Invalid switch - \"test-dir\".\n             Invalid switch - \"test-dir\".\n
      \            Invalid switch - \"test-dir\".\n             Invalid switch - \"test-dir\".\n
      \            Invalid switch - \"test-dir\".\n             Invalid switch - \"test-dir\".\n
      \            WARNING: Using the `raise_error` matcher without providing a specific
      error or message risks false positives, since `raise_error` will match when
      Ruby raises a `NoMethodError`, `NameError` or `ArgumentError`, potentially allowing
      the expectation to pass without even executing the method you are intending
      to call. Actual error raised was #<Errno::EADDRNOTAVAIL: remote_file[C:/test-dir/remote_file_spec20160617-2036-xelqz5]
      (dynamically defined) had an error: Errno::EADDRNOTAVAIL: The requested address
      is not valid in its context. - connect(2) for \"localhost\" port 0>. Instead
      consider providing a specific error class or message. This message can be supressed
      by setting: `RSpec::Expectations.configuration.warn_about_potential_false_positives
      = false`. Called from C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/functional/resource/remote_file_spec.rb:235:in
      `block (4 levels) in <top (required)>'.\n             ---- End output of bundle
      exec rspec -f documentation -t ~requires_git spec/functional ----\n             Ran
      bundle exec rspec -f documentation -t ~requires_git spec/functional returned
      1\n                  # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/mixlib-shellout-2.2.6-universal-mingw32/lib/mixlib/shellout.rb:289:in
      `invalid!'\n                  # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/mixlib-shellout-2.2.6-universal-mingw32/lib/mixlib/shellout.rb:276:in
      `error!'\n                  # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/fips-unit-functional_spec.rb:44:in
      `block in run_rspec_test'\n                  # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/bundler-1.12.5/lib/bundler.rb:237:in
      `block in with_clean_env'\n                  # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/bundler-1.12.5/lib/bundler.rb:447:in
      `with_env'\n                  # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/bundler-1.12.5/lib/bundler.rb:237:in
      `with_clean_env'\n                  # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/fips-unit-functional_spec.rb:39:in
      `run_rspec_test'\n                  # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/fips-unit-functional_spec.rb:53:in
      `block (2 levels) in <top (required)>'\n\n             Finished in 18 minutes
      4 seconds (files took 1.41 seconds to load)\n             2 examples, 1 failure\n\n
      \            Failed examples:\n\n             rspec C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/fips-unit-functional_spec.rb:52
      # Chef Fips Unit/Functional Specs passes the functional specs\n\n             C:/opscode/chef/embedded/bin/ruby.exe
      -IC:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec -I'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-support-3.4.1/lib';'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/lib'
      'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/exe/rspec'
      --pattern 'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/**/*_spec.rb'
      --color --format documentation --default-path C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec\n
      \     $$$$$$ C:/opscode/chef/embedded/bin/ruby.exe -IC:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec
      -I'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-support-3.4.1/lib';'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/lib'
      'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/exe/rspec'
      --pattern 'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/**/*_spec.rb'
      --color --format documentation --default-path C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec
      failed\n      $$$$$$ !!!!!! Ruby Script [C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec] exit code was
      1\n      D      Cleaning up local sandbox in /tmp/cheftest/fips-unit-functional-windows-2012r2-sandbox-20160617-21980-78ficg\n
      \     D      Verify failed on instance <fips-unit-functional-windows-2012r2>.\n
      \     D      ------Exception-------\n      D      Class: Kitchen::InstanceFailure\n
      \     D      Message: Verify failed on instance <fips-unit-functional-windows-2012r2>.
      \ Please see .kitchen/logs/fips-unit-functional-windows-2012r2.log for more
      details\n      D      ----------------------\n      D      ------Backtrace-------\n
      \     D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/verifier/base.rb:86:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:415:in
      `verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:160:in
      `verify'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:194:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:194:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n      D      ----End Backtrace-----\n
      \     D      ---Nested Exception---\n      D      Class: Kitchen::ActionFailed\n
      \     D      Message: WinRM exited (1) for command: [$env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      test\n      ]\n      D      ----------------------\n      D      ------Backtrace-------\n
      \     D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/verifier/base.rb:86:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:513:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:478:in
      `block in action'\n      D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:477:in
      `action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:415:in
      `verify_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:347:in
      `each'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:347:in
      `transition_to'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:160:in
      `verify'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:194:in
      `public_send'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:194:in
      `run_action_in_thread'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n      D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n      D      ----End Backtrace-----\n
      \     D      [WinRM] closing remote shell A66F1176-299F-413D-8871-E04ABACAC354
      on http://10.194.9.191:5985/wsman\n      D      [WinRM] remote shell A66F1176-299F-413D-8871-E04ABACAC354
      closed\n      D      [WinRM] closing remote shell 622F2AD8-B056-485C-ADC6-D9A1956F3430
      on http://10.194.10.193:5985/wsman\n      D      [WinRM] remote shell 622F2AD8-B056-485C-ADC6-D9A1956F3430
      closed\n      STDERR: >>>>>> Verify failed on instance <fips-unit-functional-windows-2012r2>.\n
      \     >>>>>> Please see .kitchen/logs/fips-unit-functional-windows-2012r2.log
      for more details\n      >>>>>> ------Exception-------\n      >>>>>> Class: Kitchen::ActionFailed\n
      \     >>>>>> Message: WinRM exited (1) for command: [$env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \     $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n      $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \     $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n      $env:GEM_CACHE =
      \"$env:TEMP\\verifier\\gems\\cache\"\n\n      & $env:TEMP\\verifier\\bin\\busser.bat
      test\n      ]\n      >>>>>> ----------------------\n      ---- End output of
      bundle exec kitchen verify  -c -l debug ----\n      Ran bundle exec kitchen
      verify  -c -l debug returned 10\n\n      Resource Declaration:\n      ---------------------\n
      \     # In /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb\n\n
      \      36:       execute \"bundle exec kitchen #{command}#{instances ? \" #{instances}\"
      : \"\"}#{kitchen_options ? \" #{kitchen_options}\" : \"\"}\" do\n       37:
      \        cwd kitchen_dir\n       38:         env({\n       39:           \"KITCHEN_DRIVER\"
      => driver,\n       40:           \"KITCHEN_INSTANCES\" => instances,\n       41:
      \          \"KITCHEN_LOCAL_YAML\" => ::File.expand_path(\"../../.kitchen.#{driver}.yml\",
      __FILE__),\n       42:           \"KITCHEN_CHEF_PRODUCT\" => chef_product,\n
      \      43:           \"KITCHEN_CHEF_CHANNEL\" => chef_channel,\n       44:           \"KITCHEN_CHEF_VERSION\"
      => chef_version,\n       45:           \"ARTIFACTORY_USERNAME\" => artifactory_username,\n
      \      46:           \"ARTIFACTORY_PASSWORD\" => artifactory_password\n       47:
      \        }.merge(new_resource.env))\n       48:       end\n       49:     end\n\n
      \     Compiled Resource:\n      ------------------\n      # Declared in /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb:36:in
      `block in <class:Kitchen>'\n\n      execute(\"bundle exec kitchen verify  -c
      -l debug\") do\n        action [:run]\n        retries 0\n        retry_delay
      2\n        default_guard_interpreter :execute\n        command \"bundle exec
      kitchen verify  -c -l debug\"\n        backup 5\n        cwd \"/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/fips\"\n
      \       environment {\"KITCHEN_DRIVER\"=>\"ec2\", \"KITCHEN_INSTANCES\"=>\"\",
      \"KITCHEN_LOCAL_YAML\"=>\"/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/.kitchen.ec2.yml\",
      \"KITCHEN_CHEF_PRODUCT\"=>\"chef\", \"KITCHEN_CHEF_CHANNEL\"=>\"unstable\",
      \"KITCHEN_CHEF_VERSION\"=>\"12.12.2+20160617191633\", \"ARTIFACTORY_USERNAME\"=>\"chef-web-downloads\",
      \"ARTIFACTORY_PASSWORD\"=>\"fWPxYSB69EiuSpl8*3Dr^kGwf#hxUE6cmjeZRB%H!Cruit7qiKp%toH3nXKStQUg\"}\n
      \       returns 0\n        declared_type :execute\n        cookbook_name \"acceptance-cookbook\"\n
      \     end\n\n\n    ================================================================================\n
      \   Error executing action `run` on resource 'kitchen[verify]'\n    ================================================================================\n\n
      \   Mixlib::ShellOut::ShellCommandFailed\n    ------------------------------------\n
      \   execute[bundle exec kitchen verify  -c -l debug] (/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/kitchen_acceptance/libraries/kitchen.rb
      line 36) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process
      to exit with [0], but received '10'\n    ---- Begin output of bundle exec kitchen
      verify  -c -l debug ----\n    STDOUT: -----> Starting Kitchen (v1.9.2)\n    D
      \     winrm requested, loading winrm gem ([\"~> 1.6\"])\n    D      winrm is
      loaded.\n    D      winrm-fs requested, loading winrm-fs gem ([\"~> 0.4.1\"])\n
      \   D      winrm-fs is loaded.\n    D      winrm requested, loading winrm gem
      ([\"~> 1.6\"])\n    D      winrm was already loaded.\n    D      winrm-fs requested,
      loading winrm-fs gem ([\"~> 0.4.1\"])\n    D      winrm-fs was already loaded.\n
      \   -----> Setting up <fips-unit-functional-windows-2012r2>...\n    -----> Setting
      up <fips-unit-functional-centos-6>...\n           Finished setting up <fips-unit-functional-centos-6>
      (0m0.00s).\n    -----> Setting up <fips-integration-windows-2012r2>...\n           Finished
      setting up <fips-integration-windows-2012r2> (0m0.00s).\n           Finished
      setting up <fips-unit-functional-windows-2012r2> (0m0.00s).\n    -----> Setting
      up <fips-integration-centos-6>...\n    -----> Verifying <fips-unit-functional-centos-6>...\n
      \   -----> Verifying <fips-unit-functional-windows-2012r2>...\n           Preparing
      files for transfer\n           Finished setting up <fips-integration-centos-6>
      (0m0.00s).\n    -----> Verifying <fips-integration-windows-2012r2>...\n           Preparing
      files for transfer\n    D      Creating local sandbox in /tmp/cheftest/fips-unit-functional-windows-2012r2-sandbox-20160617-21980-78ficg\n
      \   D      Creating local sandbox in /tmp/cheftest/fips-integration-windows-2012r2-sandbox-20160617-21980-y6mv2n\n
      \   D      [WinRM] negotiate::http://10.194.10.193:5985/wsman<{:user=>\"administrator\",
      :pass=>\"rW4?hqTd(w\", :elevated_username=>\"administrator\", :elevated_password=>\"rW4?hqTd(w\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n
      \   $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n    $gem
      = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n    $version = \"busser\"\n
      \   $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable -n
      $env:TEMP\\verifier\\bin --no-user-install\"\n    $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \   $plugins = \"busser-serverspec\"\n\n    if ((& \"$ruby\" \"$gem\" list busser
      -i) -ne \"true\") {\n      Write-Host \"-----> Installing Busser ($version)`n\"\n
      \     & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n    } else
      {\n      Write-Host \"-----> Busser installation detected ($version)`n\"\n    }\n\n
      \   if (-Not (Test-Path \"$busser\")) {\n      $gem_bindir = & \"$ruby\" -rrubygems
      -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n      & \"$ruby\" \"$gem_bindir\\busser\"
      setup --type bat 2>&1\n    }\n\n    Write-Host \"       Installing Busser plugins:
      $plugins`n\"\n    & \"$busser\" plugin install $plugins.Split() 2>&1\n    )\n
      \   -----> Verifying <fips-integration-centos-6>...\n           Preparing files
      for transfer\n    D      Creating local sandbox in /tmp/cheftest/fips-integration-centos-6-sandbox-20160617-21980-khbb6\n
      \   D      [SSH] root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n
      \   ruby=\"/opt/chef/embedded/bin/ruby\"\n    gem=\"/opt/chef/embedded/bin/gem\"\n
      \   version=\"busser\"\n    gem_install_args=\"busser --no-rdoc --no-ri --no-format-executable
      -n /tmp/verifier/bin --no-user-install\"\n    busser=\"sudo -E /tmp/verifier/bin/busser\"\n
      \   plugins=\"busser-serverspec\"\n\n    $gem list busser -i 2>&1 >/dev/null\n
      \   if test $? -ne 0; then\n      echo \"-----> Installing Busser ($version)\"\n
      \     $gem install $gem_install_args\n    else\n      echo \"-----> Busser installation
      detected ($version)\"\n    fi\n\n    if test ! -f \"$BUSSER_ROOT/bin/busser\";
      then\n      $busser setup\n    fi\n\n    echo \"       Installing Busser plugins:
      $plugins\"\n    $busser plugin install $plugins\n    ')\n    D      [SSH] opening
      connection to root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n    D      [WinRM] negotiate::http://10.194.9.191:5985/wsman<{:user=>\"administrator\",
      :pass=>\")eYvstpx7kW\", :elevated_username=>\"administrator\", :elevated_password=>\")eYvstpx7kW\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n
      \   $ruby = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\ruby.exe\"\n    $gem
      = \"$env:systemdrive\\opscode\\chef\\embedded\\bin\\gem\"\n    $version = \"busser\"\n
      \   $gem_install_args = \"busser --no-rdoc --no-ri --no-format-executable -n
      $env:TEMP\\verifier\\bin --no-user-install\"\n    $busser = \"$env:TEMP\\verifier\\bin\\busser.bat\"\n
      \   $plugins = \"busser-serverspec\"\n\n    if ((& \"$ruby\" \"$gem\" list busser
      -i) -ne \"true\") {\n      Write-Host \"-----> Installing Busser ($version)`n\"\n
      \     & \"$ruby\" \"$gem\" install $gem_install_args.Split() 2>&1\n    } else
      {\n      Write-Host \"-----> Busser installation detected ($version)`n\"\n    }\n\n
      \   if (-Not (Test-Path \"$busser\")) {\n      $gem_bindir = & \"$ruby\" -rrubygems
      -e \"puts Gem.bindir.dup.gsub('/', '\\\\')\"\n      & \"$ruby\" \"$gem_bindir\\busser\"
      setup --type bat 2>&1\n    }\n\n    Write-Host \"       Installing Busser plugins:
      $plugins`n\"\n    & \"$busser\" plugin install $plugins.Split() 2>&1\n    )\n
      \          Preparing files for transfer\n    D      Creating local sandbox in
      /tmp/cheftest/fips-unit-functional-centos-6-sandbox-20160617-21980-2vl32j\n
      \   D      [SSH] root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n
      \   ruby=\"/opt/chef/embedded/bin/ruby\"\n    gem=\"/opt/chef/embedded/bin/gem\"\n
      \   version=\"busser\"\n    gem_install_args=\"busser --no-rdoc --no-ri --no-format-executable
      -n /tmp/verifier/bin --no-user-install\"\n    busser=\"sudo -E /tmp/verifier/bin/busser\"\n
      \   plugins=\"busser-serverspec\"\n\n    $gem list busser -i 2>&1 >/dev/null\n
      \   if test $? -ne 0; then\n      echo \"-----> Installing Busser ($version)\"\n
      \     $gem install $gem_install_args\n    else\n      echo \"-----> Busser installation
      detected ($version)\"\n    fi\n\n    if test ! -f \"$BUSSER_ROOT/bin/busser\";
      then\n      $busser setup\n    fi\n\n    echo \"       Installing Busser plugins:
      $plugins\"\n    $busser plugin install $plugins\n    ')\n    D      [SSH] opening
      connection to root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"]}>\n    D      [WinRM] opening remote shell on
      http://10.194.10.193:5985/wsman\n    D      [WinRM] opening remote shell on
      http://10.194.9.191:5985/wsman\n    D      [WinRM] remote shell 622F2AD8-B056-485C-ADC6-D9A1956F3430
      is open on http://10.194.10.193:5985/wsman\n    D      [WinRM] remote shell
      A66F1176-299F-413D-8871-E04ABACAC354 is open on http://10.194.9.191:5985/wsman\n
      \          bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \          sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \          bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \          sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \   -----> Installing Busser (busser)\n    -----> Installing Busser (busser)\n
      \          Fetching: thor-0.19.0.gem\rFetching: thor-0.19.0.gem (  3%)\rFetching:
      thor-0.19.0.gem (  6%)\rFetching: thor-0.19.0.gem (  9%)\rFetching: thor-0.19.0.gem
      ( 12%)\rFetching: thor-0.19.0.gem ( 15%)\rFetching: thor-0.19.0.gem ( 18%)\rFetching:
      thor-0.19.0.gem ( 21%)\rFetching: thor-0.19.0.gem ( 24%)\rFetching: thor-0.19.0.gem
      ( 27%)\rFetching: thor-0.19.0.gem ( 30%)\rFetching: thor-0.19.0.gem ( 33%)\rFetching:
      thor-0.19.0.gem ( 35%)\rFetching: thor-0.19.0.gem ( 53%)\rFetching: thor-0.19.0.gem
      ( 71%)\rFetching: thor-0.19.0.gem ( 89%)\rFetching: thor-0.19.0.gem (100%)\rFetching:
      thor-0.19.0.gem (100%)\n           Successfully installed thor-0.19.0\n           Fetching:
      busser-0.7.1.gem\rFetching: busser-0.7.1.gem ( 64%)\rFetching: busser-0.7.1.gem
      (100%)\rFetching: busser-0.7.1.gem (100%)\n           Fetching: thor-0.19.0.gem\rFetching:
      thor-0.19.0.gem (  3%)\rFetching: thor-0.19.0.gem (  6%)\rFetching: thor-0.19.0.gem
      (  9%)\rFetching: thor-0.19.0.gem ( 12%)\rFetching: thor-0.19.0.gem ( 15%)\rFetching:
      thor-0.19.0.gem ( 18%)\rFetching: thor-0.19.0.gem ( 21%)\rFetching: thor-0.19.0.gem
      ( 24%)\rFetching: thor-0.19.0.gem ( 27%)\rFetching: thor-0.19.0.gem ( 30%)\rFetching:
      thor-0.19.0.gem ( 33%)\rFetching: thor-0.19.0.gem ( 35%)\rFetching: thor-0.19.0.gem
      ( 53%)\rFetching: thor-0.19.0.gem ( 71%)\rFetching: thor-0.19.0.gem ( 89%)\rFetching:
      thor-0.19.0.gem (100%)\rFetching: thor-0.19.0.gem (100%)\n           Successfully
      installed busser-0.7.1\n           2 gems installed\n           Installing Busser
      plugins: busser-serverspec\n           Successfully installed thor-0.19.0\n
      \          Fetching: busser-0.7.1.gem\rFetching: busser-0.7.1.gem ( 64%)\rFetching:
      busser-0.7.1.gem (100%)\rFetching: busser-0.7.1.gem (100%)\n           Successfully
      installed busser-0.7.1\n           2 gems installed\n           Installing Busser
      plugins: busser-serverspec\n           Plugin serverspec installed (version
      0.5.9)\n    -----> Running postinstall for serverspec plugin\n    -----> Installing
      Busser (busser)\n\n           Plugin serverspec installed (version 0.5.9)\n
      \   -----> Running postinstall for serverspec plugin\n    -----> Installing
      Busser (busser)\n\n    D      [SSH] root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser suite cleanup\n    ')\n           bash:
      warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           sh: warning:
      setlocale: LC_ALL: cannot change locale (C.UTF-8)\n    D      [SSH] root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser suite cleanup\n    ')\n           bash:
      warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           sh: warning:
      setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           Suite path directory
      /tmp/verifier/suites does not exist, skipping.\n           Transferring files
      to <fips-integration-centos-6>\n    D      TIMING: scp async upload (Kitchen::Transport::Ssh)\n
      \   D      TIMING: scp async upload (Kitchen::Transport::Ssh) took (0m0.10s)\n
      \   D      Transfer complete\n    D      [SSH] root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser test\n    ')\n           bash: warning:
      setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           sh: warning: setlocale:
      LC_ALL: cannot change locale (C.UTF-8)\n           Suite path directory /tmp/verifier/suites
      does not exist, skipping.\n           Transferring files to <fips-unit-functional-centos-6>\n
      \   D      TIMING: scp async upload (Kitchen::Transport::Ssh)\n    D      TIMING:
      scp async upload (Kitchen::Transport::Ssh) took (0m0.10s)\n    D      Transfer
      complete\n    D      [SSH] root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}> (sh -c '\n    BUSSER_ROOT=\"/tmp/verifier\";
      export BUSSER_ROOT\n    GEM_HOME=\"/tmp/verifier/gems\"; export GEM_HOME\n    GEM_PATH=\"/tmp/verifier/gems\";
      export GEM_PATH\n    GEM_CACHE=\"/tmp/verifier/gems/cache\"; export GEM_CACHE\n\n
      \   sudo -E /tmp/verifier/bin/busser test\n    ')\n           bash: warning:
      setlocale: LC_ALL: cannot change locale (C.UTF-8)\n    -----> Running serverspec
      test suite\n    -----> Bundle Installing..\n           \\33[1m\\33[32m         run\\33[0m
      \ /opt/chef/embedded/bin/ruby /tmp/verifier/gems/bin/bundle install --gemfile
      /tmp/verifier/suites/serverspec/Gemfile --local || /opt/chef/embedded/bin/ruby
      /tmp/verifier/gems/bin/bundle install --gemfile /tmp/verifier/suites/serverspec/Gemfile
      from \".\"\n           sh: warning: setlocale: LC_ALL: cannot change locale
      (C.UTF-8)\n           sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \   -----> Running serverspec test suite\n    -----> Bundle Installing..\n           \\33[1m\\33[32m
      \        run\\33[0m  /opt/chef/embedded/bin/ruby /tmp/verifier/gems/bin/bundle
      install --gemfile /tmp/verifier/suites/serverspec/Gemfile --local || /opt/chef/embedded/bin/ruby
      /tmp/verifier/gems/bin/bundle install --gemfile /tmp/verifier/suites/serverspec/Gemfile
      from \".\"\n           sh: warning: setlocale: LC_ALL: cannot change locale
      (C.UTF-8)\n           \\33[33mDon't run Bundler as root. Bundler can ask for
      sudo if it is needed, and\n           installing your bundle as root will break
      this application for all non-root\n           users on this machine.\\33[0m\n
      \          sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \          sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \          \\33[31mCould not find gem 'mixlib-shellout' in any of the gem sources
      listed in your\n           Gemfile or available on this machine.\\33[0m\n           sh:
      warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           \\33[33mDon't
      run Bundler as root. Bundler can ask for sudo if it is needed, and\n           installing
      your bundle as root will break this application for all non-root\n           users
      on this machine.\\33[0m\n           sh: warning: setlocale: LC_ALL: cannot change
      locale (C.UTF-8)\n           \\33[33mDon't run Bundler as root. Bundler can
      ask for sudo if it is needed, and\n           installing your bundle as root
      will break this application for all non-root\n           users on this machine.\\33[0m\n
      \          sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \          \\33[31mCould not find gem 'mixlib-shellout' in any of the gem sources
      listed in your\n           Gemfile or available on this machine.\\33[0m\n           sh:
      warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n           \\33[33mDon't
      run Bundler as root. Bundler can ask for sudo if it is needed, and\n           installing
      your bundle as root will break this application for all non-root\n           users
      on this machine.\\33[0m\n           Successfully installed thor-0.19.0\n           Successfully
      installed busser-0.7.1\n           2 gems installed\n           Installing Busser
      plugins: busser-serverspec\n\n           Successfully installed thor-0.19.0\n
      \          Successfully installed busser-0.7.1\n           2 gems installed\n
      \          Installing Busser plugins: busser-serverspec\n\n           Fetching
      gem metadata from https://rubygems.org/\n           Plugin serverspec installed
      (version 0.5.9)\n    -----> Running postinstall for serverspec plugin\n           Plugin
      serverspec installed (version 0.5.9)\n    -----> Running postinstall for serverspec
      plugin\n           Fetching version metadata from https://rubygems.org/\n           Resolving
      dependencies...\n    D      [WinRM] negotiate::http://10.194.9.191:5985/wsman<{:user=>\"administrator\",
      :pass=>\")eYvstpx7kW\", :elevated_username=>\"administrator\", :elevated_password=>\")eYvstpx7kW\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat suite cleanup\n    )\n           Fetching
      gem metadata from https://rubygems.org/\n    D      [WinRM] negotiate::http://10.194.10.193:5985/wsman<{:user=>\"administrator\",
      :pass=>\"rW4?hqTd(w\", :elevated_username=>\"administrator\", :elevated_password=>\"rW4?hqTd(w\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat suite cleanup\n    )\n           \\33[32mInstalling
      mixlib-shellout 2.2.6\\33[0m\n           Using bundler 1.12.5\n           \\33[32mBundle
      complete! 1 Gemfile dependency, 2 gems now installed.\\33[0m\n           \\33[32mUse
      `bundle show [gemname]` to see where a bundled gem is installed.\\33[0m\n           Fetching
      version metadata from https://rubygems.org/\n    -----> Installing Serverspec..\n
      \          Resolving dependencies...\n           \\33[32mInstalling mixlib-shellout
      2.2.6\\33[0m\n           Using bundler 1.12.5\n           \\33[32mBundle complete!
      1 Gemfile dependency, 2 gems now installed.\\33[0m\n           \\33[32mUse `bundle
      show [gemname]` to see where a bundled gem is installed.\\33[0m\n    ----->
      Installing Serverspec..\n           Fetching: sfl-2.2.gem\rFetching: sfl-2.2.gem
      ( 26%)\rFetching: sfl-2.2.gem ( 59%)\rFetching: sfl-2.2.gem ( 93%)\rFetching:
      sfl-2.2.gem (100%)\rFetching: sfl-2.2.gem (100%)\n           Fetching: net-telnet-0.1.1.gem\rFetching:
      net-telnet-0.1.1.gem ( 13%)\rFetching: net-telnet-0.1.1.gem ( 29%)\rFetching:
      net-telnet-0.1.1.gem ( 45%)\rFetching: net-telnet-0.1.1.gem ( 62%)\rFetching:
      net-telnet-0.1.1.gem ( 78%)\rFetching: net-telnet-0.1.1.gem ( 93%)\rFetching:
      net-telnet-0.1.1.gem (100%)\rFetching: net-telnet-0.1.1.gem (100%)\n           Fetching:
      sfl-2.2.gem\rFetching: sfl-2.2.gem ( 26%)\rFetching: sfl-2.2.gem ( 59%)\rFetching:
      sfl-2.2.gem ( 93%)\rFetching: sfl-2.2.gem (100%)\rFetching: sfl-2.2.gem (100%)\n
      \          Fetching: net-telnet-0.1.1.gem\rFetching: net-telnet-0.1.1.gem (
      13%)\rFetching: net-telnet-0.1.1.gem ( 29%)\rFetching: net-telnet-0.1.1.gem
      ( 45%)\rFetching: net-telnet-0.1.1.gem ( 62%)\rFetching: net-telnet-0.1.1.gem
      ( 78%)\rFetching: net-telnet-0.1.1.gem ( 93%)\rFetching: net-telnet-0.1.1.gem
      (100%)\rFetching: net-telnet-0.1.1.gem (100%)\n           Fetching: net-ssh-3.1.1.gem\rFetching:
      net-ssh-3.1.1.gem (  2%)\rFetching: net-ssh-3.1.1.gem (  3%)\rFetching: net-ssh-3.1.1.gem
      (  5%)\rFetching: net-ssh-3.1.1.gem (  6%)\rFetching: net-ssh-3.1.1.gem (  8%)\rFetching:
      net-ssh-3.1.1.gem (  9%)\rFetching: net-ssh-3.1.1.gem ( 10%)\rFetching: net-ssh-3.1.1.gem
      ( 12%)\rFetching: net-ssh-3.1.1.gem ( 13%)\rFetching: net-ssh-3.1.1.gem ( 15%)\rFetching:
      net-ssh-3.1.1.gem ( 16%)\rFetching: net-ssh-3.1.1.gem ( 18%)\rFetching: net-ssh-3.1.1.gem
      ( 27%)\rFetching: net-ssh-3.1.1.gem ( 36%)\rFetching: net-ssh-3.1.1.gem ( 44%)\rFetching:
      net-ssh-3.1.1.gem ( 53%)\rFetching: net-ssh-3.1.1.gem ( 62%)\rFetching: net-ssh-3.1.1.gem
      ( 71%)\rFetching: net-ssh-3.1.1.gem ( 80%)\rFetching: net-ssh-3.1.1.gem ( 89%)\rFetching:
      net-ssh-3.1.1.gem ( 98%)\rFetching: net-ssh-3.1.1.gem (100%)\rFetching: net-ssh-3.1.1.gem
      (100%)\n           Fetching: net-ssh-3.1.1.gem\rFetching: net-ssh-3.1.1.gem
      (  2%)\rFetching: net-ssh-3.1.1.gem (  3%)\rFetching: net-ssh-3.1.1.gem (  5%)\rFetching:
      net-ssh-3.1.1.gem (  6%)\rFetching: net-ssh-3.1.1.gem (  8%)\rFetching: net-ssh-3.1.1.gem
      (  9%)\rFetching: net-ssh-3.1.1.gem ( 10%)\rFetching: net-ssh-3.1.1.gem ( 12%)\rFetching:
      net-ssh-3.1.1.gem ( 13%)\rFetching: net-ssh-3.1.1.gem ( 15%)\rFetching: net-ssh-3.1.1.gem
      ( 16%)\rFetching: net-ssh-3.1.1.gem ( 18%)\rFetching: net-ssh-3.1.1.gem ( 27%)\rFetching:
      net-ssh-3.1.1.gem ( 36%)\rFetching: net-ssh-3.1.1.gem ( 44%)\rFetching: net-ssh-3.1.1.gem
      ( 53%)\rFetching: net-ssh-3.1.1.gem ( 62%)\rFetching: net-ssh-3.1.1.gem ( 71%)\rFetching:
      net-ssh-3.1.1.gem ( 80%)\rFetching: net-ssh-3.1.1.gem ( 89%)\rFetching: net-ssh-3.1.1.gem
      ( 98%)\rFetching: net-ssh-3.1.1.gem (100%)\rFetching: net-ssh-3.1.1.gem (100%)\n
      \          Fetching: net-scp-1.2.1.gem\rFetching: net-scp-1.2.1.gem ( 48%)\rFetching:
      net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem (100%)\rFetching: net-scp-1.2.1.gem
      (100%)\n           Suite path directory C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites
      does not exist, skipping.\n           Transferring files to <fips-unit-functional-windows-2012r2>\n
      \          Fetching: net-scp-1.2.1.gem\rFetching: net-scp-1.2.1.gem ( 48%)\rFetching:
      net-scp-1.2.1.gem ( 98%)\rFetching: net-scp-1.2.1.gem (100%)\rFetching: net-scp-1.2.1.gem
      (100%)\n    D      creating hash for directory $env:TEMP\\verifier\n    D      Populating
      files\n    D      +++ Adding serverspec/Gemfile\n    D      +++ Adding serverspec/fips-unit-functional_spec.rb\n
      \   D      === All files added.\n    D      Running check_files.ps1\n    D      @{\n
      \   D        \"5d2e53a5614191437bca7afdb9d7591e\" = @{\n    D          \"target\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\";\n
      \   D          \"src_basename\" = \"suites\";\n    D          \"dst\" = \"$env:TEMP\\verifier\\suites\"\n
      \   D        }\n    D      }\n           Fetching: specinfra-2.59.0.gem\rFetching:
      specinfra-2.59.0.gem ( 20%)\rFetching: specinfra-2.59.0.gem ( 41%)\rFetching:
      specinfra-2.59.0.gem ( 62%)\rFetching: specinfra-2.59.0.gem ( 82%)\rFetching:
      specinfra-2.59.0.gem (100%)\rFetching: specinfra-2.59.0.gem (100%)\n           Fetching:
      specinfra-2.59.0.gem\rFetching: specinfra-2.59.0.gem ( 20%)\rFetching: specinfra-2.59.0.gem
      ( 41%)\rFetching: specinfra-2.59.0.gem ( 62%)\rFetching: specinfra-2.59.0.gem
      ( 82%)\rFetching: specinfra-2.59.0.gem (100%)\rFetching: specinfra-2.59.0.gem
      (100%)\n           Suite path directory C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites
      does not exist, skipping.\n           Transferring files to <fips-integration-windows-2012r2>\n
      \   D      creating hash for directory $env:TEMP\\verifier\n    D      Populating
      files\n    D      +++ Adding serverspec/Gemfile\n    D      +++ Adding serverspec/fips-integration_spec.rb\n
      \   D      === All files added.\n    D      Running check_files.ps1\n    D      @{\n
      \   D        \"a58c3771533a6479cf23bf871167f7d9\" = @{\n    D          \"target\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\";\n
      \   D          \"src_basename\" = \"suites\";\n    D          \"dst\" = \"$env:TEMP\\verifier\\suites\"\n
      \   D        }\n    D      }\n           Fetching: rspec-support-3.4.1.gem\rFetching:
      rspec-support-3.4.1.gem ( 50%)\rFetching: rspec-support-3.4.1.gem (100%)\rFetching:
      rspec-support-3.4.1.gem (100%)\n           Fetching: rspec-support-3.4.1.gem\rFetching:
      rspec-support-3.4.1.gem ( 50%)\rFetching: rspec-support-3.4.1.gem (100%)\rFetching:
      rspec-support-3.4.1.gem (100%)\n           Fetching: diff-lcs-1.2.5.gem\rFetching:
      diff-lcs-1.2.5.gem ( 33%)\rFetching: diff-lcs-1.2.5.gem ( 66%)\rFetching: diff-lcs-1.2.5.gem
      ( 99%)\rFetching: diff-lcs-1.2.5.gem (100%)\rFetching: diff-lcs-1.2.5.gem (100%)\n
      \          Fetching: diff-lcs-1.2.5.gem\rFetching: diff-lcs-1.2.5.gem ( 33%)\rFetching:
      diff-lcs-1.2.5.gem ( 66%)\rFetching: diff-lcs-1.2.5.gem ( 99%)\rFetching: diff-lcs-1.2.5.gem
      (100%)\rFetching: diff-lcs-1.2.5.gem (100%)\n           Fetching: rspec-expectations-3.4.0.gem\rFetching:
      rspec-expectations-3.4.0.gem ( 21%)\rFetching: rspec-expectations-3.4.0.gem
      ( 43%)\rFetching: rspec-expectations-3.4.0.gem ( 65%)\rFetching: rspec-expectations-3.4.0.gem
      ( 87%)\rFetching: rspec-expectations-3.4.0.gem (100%)\rFetching: rspec-expectations-3.4.0.gem
      (100%)\n           Fetching: rspec-expectations-3.4.0.gem\rFetching: rspec-expectations-3.4.0.gem
      ( 21%)\rFetching: rspec-expectations-3.4.0.gem ( 43%)\rFetching: rspec-expectations-3.4.0.gem
      ( 65%)\rFetching: rspec-expectations-3.4.0.gem ( 87%)\rFetching: rspec-expectations-3.4.0.gem
      (100%)\rFetching: rspec-expectations-3.4.0.gem (100%)\n           Fetching:
      rspec-core-3.4.4.gem\rFetching: rspec-core-3.4.4.gem ( 11%)\rFetching: rspec-core-3.4.4.gem
      ( 22%)\rFetching: rspec-core-3.4.4.gem ( 34%)\rFetching: rspec-core-3.4.4.gem
      ( 45%)\rFetching: rspec-core-3.4.4.gem ( 56%)\rFetching: rspec-core-3.4.4.gem
      ( 67%)\rFetching: rspec-core-3.4.4.gem ( 79%)\rFetching: rspec-core-3.4.4.gem
      ( 90%)\rFetching: rspec-core-3.4.4.gem (100%)\rFetching: rspec-core-3.4.4.gem
      (100%)\n           Fetching: rspec-core-3.4.4.gem\rFetching: rspec-core-3.4.4.gem
      ( 11%)\rFetching: rspec-core-3.4.4.gem ( 22%)\rFetching: rspec-core-3.4.4.gem
      ( 34%)\rFetching: rspec-core-3.4.4.gem ( 45%)\rFetching: rspec-core-3.4.4.gem
      ( 56%)\rFetching: rspec-core-3.4.4.gem ( 67%)\rFetching: rspec-core-3.4.4.gem
      ( 79%)\rFetching: rspec-core-3.4.4.gem ( 90%)\rFetching: rspec-core-3.4.4.gem
      (100%)\rFetching: rspec-core-3.4.4.gem (100%)\n           Fetching: rspec-its-1.2.0.gem\rFetching:
      rspec-its-1.2.0.gem (100%)\rFetching: rspec-its-1.2.0.gem (100%)\n           Fetching:
      rspec-mocks-3.4.1.gem\rFetching: rspec-mocks-3.4.1.gem ( 21%)\rFetching: rspec-mocks-3.4.1.gem
      ( 43%)\rFetching: rspec-mocks-3.4.1.gem ( 65%)\rFetching: rspec-mocks-3.4.1.gem
      ( 87%)\rFetching: rspec-mocks-3.4.1.gem (100%)\rFetching: rspec-mocks-3.4.1.gem
      (100%)\n           Fetching: rspec-its-1.2.0.gem\rFetching: rspec-its-1.2.0.gem
      (100%)\rFetching: rspec-its-1.2.0.gem (100%)\n           Fetching: rspec-3.4.0.gem\rFetching:
      rspec-3.4.0.gem (100%)\rFetching: rspec-3.4.0.gem (100%)\n           Fetching:
      rspec-mocks-3.4.1.gem\rFetching: rspec-mocks-3.4.1.gem ( 21%)\rFetching: rspec-mocks-3.4.1.gem
      ( 43%)\rFetching: rspec-mocks-3.4.1.gem ( 65%)\rFetching: rspec-mocks-3.4.1.gem
      ( 87%)\rFetching: rspec-mocks-3.4.1.gem (100%)\rFetching: rspec-mocks-3.4.1.gem
      (100%)\n           Fetching: multi_json-1.12.1.gem\rFetching: multi_json-1.12.1.gem
      ( 61%)\rFetching: multi_json-1.12.1.gem (100%)\rFetching: multi_json-1.12.1.gem
      (100%)\n    D      Parsing CSV Response\n    D      \"chk_exists\",\"src_md5\",\"dst_md5\",\"chk_dirty\",\"verifies\",\"target_is_folder\"\n
      \   \"False\",\"5d2e53a5614191437bca7afdb9d7591e\",,\"True\",\"False\",\"False\"\n\n
      \   D      Uploading /tmp/cheftest/tmpzip-20160617-21980-ilp7ca.zip to encoded
      tmpfile $env:TEMP\\b64-5d2e53a5614191437bca7afdb9d7591e.txt\n           Fetching:
      serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem ( 41%)\rFetching: serverspec-2.36.0.gem
      ( 83%)\rFetching: serverspec-2.36.0.gem (100%)\rFetching: serverspec-2.36.0.gem
      (100%)\n           Fetching: rspec-3.4.0.gem\rFetching: rspec-3.4.0.gem (100%)\rFetching:
      rspec-3.4.0.gem (100%)\n    D      Parsing CSV Response\n    D      \"chk_exists\",\"src_md5\",\"dst_md5\",\"chk_dirty\",\"verifies\",\"target_is_folder\"\n
      \   \"False\",\"a58c3771533a6479cf23bf871167f7d9\",,\"True\",\"False\",\"False\"\n\n
      \   D      Uploading /tmp/cheftest/tmpzip-20160617-21980-emg48g.zip to encoded
      tmpfile $env:TEMP\\b64-a58c3771533a6479cf23bf871167f7d9.txt\n    -----> serverspec
      installed (version 2.36.0)\n           /opt/chef/embedded/bin/ruby -I/tmp/verifier/suites/serverspec
      -I/tmp/verifier/gems/gems/rspec-support-3.4.1/lib:/tmp/verifier/gems/gems/rspec-core-3.4.4/lib
      /opt/chef/embedded/bin/rspec --pattern /tmp/verifier/suites/serverspec/\\*\\*/\\*_spec.rb
      --color --format documentation --default-path /tmp/verifier/suites/serverspec\n
      \          Fetching: multi_json-1.12.1.gem\rFetching: multi_json-1.12.1.gem
      ( 61%)\rFetching: multi_json-1.12.1.gem (100%)\rFetching: multi_json-1.12.1.gem
      (100%)\n           sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \          Fetching: serverspec-2.36.0.gem\rFetching: serverspec-2.36.0.gem
      ( 41%)\rFetching: serverspec-2.36.0.gem ( 83%)\rFetching: serverspec-2.36.0.gem
      (100%)\rFetching: serverspec-2.36.0.gem (100%)\n    -----> serverspec installed
      (version 2.36.0)\n    D      Finished uploading /tmp/cheftest/tmpzip-20160617-21980-ilp7ca.zip
      to encoded tmpfile $env:TEMP\\b64-5d2e53a5614191437bca7afdb9d7591e.txt (1.22
      KB over 1 chunks) in (0m0.40s)\n    D      Running decode_files.ps1\n    D      @{\n
      \   D        \"$env:TEMP\\b64-5d2e53a5614191437bca7afdb9d7591e.txt\" = @{\n
      \   D          \"dst\" = \"$env:TEMP\\verifier\\suites\";\n    D          \"tmpzip\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\"\n
      \   D        }\n    D      }\n    D      Finished uploading /tmp/cheftest/tmpzip-20160617-21980-emg48g.zip
      to encoded tmpfile $env:TEMP\\b64-a58c3771533a6479cf23bf871167f7d9.txt (1.196
      KB over 1 chunks) in (0m0.32s)\n    D      Running decode_files.ps1\n    D      @{\n
      \   D        \"$env:TEMP\\b64-a58c3771533a6479cf23bf871167f7d9.txt\" = @{\n
      \   D          \"dst\" = \"$env:TEMP\\verifier\\suites\";\n    D          \"tmpzip\"
      = \"$env:TEMP\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\"\n
      \   D        }\n    D      }\n\n           Chef Fips Integration Specs\n           \\33[33m
      \ passes the integration specs (PENDING: No reason given)\\33[0m\n\n           Pending:
      (Failures listed here are expected and do not affect your suite's status)\n
      \          \\33[33m\n             1) Chef Fips Integration Specs passes the
      integration specs\\33[0m\n                \\33[36m# No reason given\\33[0m\n
      \          \\33[36m     # /tmp/verifier/suites/serverspec/fips-integration_spec.rb:48\n
      \          \\33[0m\n\n           Finished in 0.00053 seconds (files took 0.21936
      seconds to load)\n           \\33[33m1 example, 0 failures, 1 pending\\33[0m\n\n
      \          /opt/chef/embedded/bin/ruby -I/tmp/verifier/suites/serverspec -I/tmp/verifier/gems/gems/rspec-support-3.4.1/lib:/tmp/verifier/gems/gems/rspec-core-3.4.4/lib
      /opt/chef/embedded/bin/rspec --pattern /tmp/verifier/suites/serverspec/\\*\\*/\\*_spec.rb
      --color --format documentation --default-path /tmp/verifier/suites/serverspec\n
      \   D      Cleaning up local sandbox in /tmp/cheftest/fips-integration-centos-6-sandbox-20160617-21980-khbb6\n
      \          sh: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8)\n
      \          Finished verifying <fips-integration-centos-6> (0m11.14s).\n    D
      \     [SSH] shutting previous connection root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}>\n    D      [SSH] closing
      connection to root@10.194.8.205<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}>\n\n           Chef Fips Unit/Functional
      Specs\n    D      Parsing CSV Response\n    D      \"src_md5\",\"tmpzip\",\"verifies\",\"tmpfile\",\"dst_md5\",\"dst\"\n
      \   \"5d2e53a5614191437bca7afdb9d7591e\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-5d2e53a5614191437bca7afdb9d7591e.zip\",\"True\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\b64-5d2e53a5614191437bca7afdb9d7591e.txt\",\"5d2e53a5614191437bca7afdb9d7591e\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\verifier\\suites\"\n\n
      \   D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160617-21980-ilp7ca.zip\n
      \   D      Uploaded 1 items dirty_check: (0m1.09s) stream_files: (0m0.40s) decode:
      (0m1.18s)\n    D      Transfer complete\n    D      Parsing CSV Response\n    D
      \     [WinRM] negotiate::http://10.194.9.191:5985/wsman<{:user=>\"administrator\",
      :pass=>\")eYvstpx7kW\", :elevated_username=>\"administrator\", :elevated_password=>\")eYvstpx7kW\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat test\n    )\n    D      \"src_md5\",\"tmpzip\",\"verifies\",\"tmpfile\",\"dst_md5\",\"dst\"\n
      \   \"a58c3771533a6479cf23bf871167f7d9\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\winrm-upload\\tmpzip-a58c3771533a6479cf23bf871167f7d9.zip\",\"True\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\b64-a58c3771533a6479cf23bf871167f7d9.txt\",\"a58c3771533a6479cf23bf871167f7d9\",\"C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\verifier\\suites\"\n\n
      \   D      Cleaned up src_zip /tmp/cheftest/tmpzip-20160617-21980-emg48g.zip\n
      \   D      Uploaded 1 items dirty_check: (0m0.97s) stream_files: (0m0.32s) decode:
      (0m1.24s)\n    D      Transfer complete\n    D      [WinRM] negotiate::http://10.194.10.193:5985/wsman<{:user=>\"administrator\",
      :pass=>\"rW4?hqTd(w\", :elevated_username=>\"administrator\", :elevated_password=>\"rW4?hqTd(w\",
      :no_ssl_peer_verification=>true, :disable_sspi=>false, :basic_auth_only=>false}>
      ($env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat test\n    )\n    -----> Running serverspec
      test suite\n    -----> Bundle Installing..\n             run  C:/opscode/chef/embedded/bin/ruby
      C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle install --gemfile
      C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile --local
      || C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      from \".\"\n    -----> Running serverspec test suite\n    -----> Bundle Installing..\n
      \            run  C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      --local || C:/opscode/chef/embedded/bin/ruby C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/bin/bundle
      install --gemfile C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/Gemfile
      from \".\"\n           Could not find gem 'mixlib-shellout x64-mingw32' in any
      of the gem sources\n           listed in your Gemfile or available on this machine.\n
      \          Could not find gem 'mixlib-shellout x64-mingw32' in any of the gem
      sources\n           listed in your Gemfile or available on this machine.\n           Fetching
      gem metadata from https://rubygems.org/\n           Fetching version metadata
      from https://rubygems.org/\n           Resolving dependencies...\n           Fetching
      gem metadata from https://rubygems.org/\n           Fetching version metadata
      from https://rubygems.org/\n           Resolving dependencies...\n           Installing
      ffi 1.9.10\n           Installing ffi 1.9.10\n           Installing wmi-lite
      1.0.0\n           Using bundler 1.12.5\n           Installing win32-process
      0.8.3\n           Installing mixlib-shellout 2.2.6\n           Bundle complete!
      1 Gemfile dependency, 5 gems now installed.\n           Use `bundle show [gemname]`
      to see where a bundled gem is installed.\n    -----> Installing Serverspec..\n
      \          Installing wmi-lite 1.0.0\n           Using bundler 1.12.5\n           Installing
      win32-process 0.8.3\n           Installing mixlib-shellout 2.2.6\n           Bundle
      complete! 1 Gemfile dependency, 5 gems now installed.\n           Use `bundle
      show [gemname]` to see where a bundled gem is installed.\n    -----> Installing
      Serverspec..\n    -----> serverspec installed (version 2.36.0)\n    -----> serverspec
      installed (version 2.36.0)\n\n           Chef Fips Integration Specs\n             passes
      the integration specs (PENDING: No reason given)\n\n           Pending: (Failures
      listed here are expected and do not affect your suite's status)\n\n             1)
      Chef Fips Integration Specs passes the integration specs\n                #
      No reason given\n                # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/fips-integration_spec.rb:48\n\n
      \          Finished in 0 seconds (files took 1.38 seconds to load)\n           1
      example, 0 failures, 1 pending\n\n           C:/opscode/chef/embedded/bin/ruby.exe
      -IC:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec -I'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-support-3.4.1/lib';'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/lib'
      'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/exe/rspec'
      --pattern 'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/**/*_spec.rb'
      --color --format documentation --default-path C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec\n
      \   D      Cleaning up local sandbox in /tmp/cheftest/fips-integration-windows-2012r2-sandbox-20160617-21980-y6mv2n\n
      \          Finished verifying <fips-integration-windows-2012r2> (0m28.73s).\n\n
      \          Chef Fips Unit/Functional Specs\n    D      [WinRM] retrying receive
      request after timeout\n           \\33[32m  passes the unit specs\\33[0m\n    D
      \     [WinRM] retrying receive request after timeout\n    D      [WinRM] retrying
      receive request after timeout\n             passes the unit specs\n    D      [WinRM]
      retrying receive request after timeout\n    D      [WinRM] retrying receive
      request after timeout\n    D      [WinRM] retrying receive request after timeout\n
      \   D      [WinRM] retrying receive request after timeout\n    D      [WinRM]
      retrying receive request after timeout\n    D      [WinRM] retrying receive
      request after timeout\n    D      [WinRM] retrying receive request after timeout\n
      \   D      [WinRM] retrying receive request after timeout\n    D      [WinRM]
      retrying receive request after timeout\n    D      [WinRM] retrying receive
      request after timeout\n    D      [WinRM] retrying receive request after timeout\n
      \   D      [WinRM] retrying receive request after timeout\n           \\33[32m
      \ passes the functional specs\\33[0m\n\n           Finished in 17 minutes 3
      seconds (files took 0.2283 seconds to load)\n           \\33[32m2 examples,
      0 failures\\33[0m\n\n    D      Cleaning up local sandbox in /tmp/cheftest/fips-unit-functional-centos-6-sandbox-20160617-21980-2vl32j\n
      \          Finished verifying <fips-unit-functional-centos-6> (17m13.94s).\n
      \   D      [SSH] shutting previous connection root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\",
      :paranoid=>false, :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true,
      :keepalive_interval=>60, :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}>\n    D      [SSH] closing
      connection to root@10.194.8.65<{:user_known_hosts_file=>\"/dev/null\", :paranoid=>false,
      :port=>22, :compression=>false, :compression_level=>0, :keepalive=>true, :keepalive_interval=>60,
      :timeout=>15, :keys_only=>true, :keys=>[\"/home/jenkins/.ssh/jenkins.pem\"],
      :auth_methods=>[\"publickey\"], :user=>\"root\"}>\n    D      [WinRM] retrying
      receive request after timeout\n    D      [WinRM] retrying receive request after
      timeout\n             passes the functional specs (FAILED - 1)\n\n           Failures:\n\n
      \            1) Chef Fips Unit/Functional Specs passes the functional specs\n
      \               Failure/Error: cmd.run_command.error!\n\n                Mixlib::ShellOut::ShellCommandFailed:\n
      \          Expected process to exit with [0], but received '1'\n           ----
      Begin output of bundle exec rspec -f documentation -t ~requires_git spec/functional
      ----\n           STDOUT: Run options:\n             include {:focus=>true}\n
      \            exclude {:provider=>#<Proc:./spec/spec_helper.rb:180>, :arch=>#<Proc:./spec/spec_helper.rb:174>,
      :ruby=>\"2.1.8\", :chef=>\"12.12.2\", :not_supported_under_fips=>true, :not_wpar=>true,
      :broken=>true, :openssl_lt_101=>true, :requires_root=>true, :selinux_only=>true,
      :supports_cloexec=>true, :debian_family_only=>true, :aix_only=>true, :unix_only=>true,
      :solaris_only=>true, :windows_domain_joined_only=>true, :windows_powershell_no_dsc_only=>true,
      :ruby32_only=>true, :windows_nano_only=>true, :windows32_only=>true, :win2k3_only=>true,
      :mac_osx_only=>true, :appveyor_only=>true, :volatile_from_verify=>false, :volatile=>true,
      :external=>true, :requires_git=>true}\n\n           All examples were filtered
      out; ignoring {:focus=>true}\n\n           Chef::Application\n             when
      proxy options are set in config\n               saves built proxy to ENV which
      shell_out can use\n\n           Chef::Audit::RspecFormatter\n             should
      not close the output using our formatter (PENDING: This spec requires forking
      to work properly, and your platform does not support forking)\n\n           Chef::Audit::Runner\n
      \            #run\n               log location is stdout\n                 Correctly
      runs an empty controls block (PENDING: This spec requires forking to work properly,
      and your platform does not support forking)\n                 there is a single
      successful control\n                   correctly runs (PENDING: This spec requires
      forking to work properly, and your platform does not support forking)\n                 there
      is a single failing control\n                   correctly runs (PENDING: This
      spec requires forking to work properly, and your platform does not support forking)\n\n
      \          Chef::DSL::RebootPending\n             reboot_pending?\n               HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session
      Manager\\PendingFileRenameOperations\n                 returns true if the registry
      value exists\n               HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Component
      Based Servicing\\RebootRequired\n                 returns true if the registry
      key exists (PENDING: Permissions are limited to 'TrustedInstaller' by default)\n
      \              HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Auto
      Update\\RebootRequired\n                 returns true if the registry key exists\n
      \              when there is nothing to indicate a reboot is pending\n                 should
      return false\n\n           Chef::Resource::RegistryKey\n             tests registry
      dsl\n               returns true if registry_key_exists\n               returns
      true if registry has specified value\n               returns true if specified
      registry_has_subkey\n               returns true if specified key has specified
      subkey\n               returns true if registry_value_exists\n               returns
      true if data_value_exists\n\n           Chef::EventLoggers::WindowsEventLogger\n
      \            is available\n             writes run_start event with event_id
      10000 and contains version\n             writes run_started event with event_id
      10001 and contains the run_id\n             writes run_completed event with
      event_id 10002 and contains the run_id and elapsed time\n             writes
      run_failed event with event_id 10003 and contains the run_id, elapsed time,
      and exception info\n             writes run_failed event with event_id 10003
      even when run_status is not set\n\n           Chef::FileContentManagement::Deploy::Cp\n
      \            it should behave like a content deploy strategy\n               creating
      the file\n                 touches the file to create it (Windows)\n               updating
      the file\n                 maintains invariant properties on Windows\n                 updates
      the target with content from staged\n\n           Chef::FileContentManagement::Deploy::MvWindows\n
      \            when a file has no sacl\n               it should behave like a
      content deploy strategy\n                 creating the file\n                   touches
      the file to create it (Windows)\n                 updating the file\n                   maintains
      invariant properties on Windows\n                   updates the target with
      content from staged\n\n           Chef::HTTP::Simple\n             behaves like
      downloading all the things\n               when downloading a simple uncompressed
      file\n                 behaves like downloads requests correctly\n                   successfully
      downloads a streaming request\n                   successfully does a non-streaming
      GET request\n               when downloading a compressed file that should be
      left compressed\n                 behaves like downloads requests correctly\n
      \                  successfully downloads a streaming request\n                   successfully
      does a non-streaming GET request\n               when downloading a file that
      has been compressed by the webserver\n                 behaves like downloads
      requests correctly\n                   successfully downloads a streaming request\n
      \                  successfully does a non-streaming GET request\n               when
      downloading an uncompressed file with a correct content_length\n                 behaves
      like downloads requests correctly\n                   successfully downloads
      a streaming request\n                   successfully does a non-streaming GET
      request\n               when downloading a file that has been compressed by
      the webserver with a correct content_length\n                 behaves like downloads
      requests correctly\n                   successfully downloads a streaming request\n
      \                  successfully does a non-streaming GET request\n               when
      downloading an uncompressed file that is truncated\n                 behaves
      like validates content length and throws an exception\n                   successfully
      downloads a streaming request\n                   successfully does a non-streaming
      GET request\n               when downloading a file that has been compressed
      by the webserver that is truncated\n                 behaves like validates
      content length and throws an exception\n                   successfully downloads
      a streaming request\n                   successfully does a non-streaming GET
      request\n               when downloading a file that has transfer encoding set
      with a bad content length that should be ignored\n                 behaves like
      downloads requests correctly\n                   successfully downloads a streaming
      request\n                   successfully does a non-streaming GET request\n
      \              when downloading an endpoint that 403s\n                 behaves
      like an endpoint that 403s\n                   fails with a Net::HTTPServerException
      for a streaming request\n                   fails with a Net::HTTPServerException
      for a GET request\n               when downloading an endpoint that 403s\n                 behaves
      like a 403 after a successful request when reusing the request object\n                   fails
      with a Net::HTTPServerException for a streaming request\n                   fails
      with a Net::HTTPServerException for a GET request\n             when Chef::Log.level
      = :debug\n               Logs the request and response for 200's but not the
      body\n               Logs the request and response for 200 POST, but not the
      body\n               Logs the request and response and bodies for 400 response\n
      \              Logs the request and response and bodies for 400 POST response\n\n
      \          knife configure\n             loads the fqdn from Ohai\n\n           Chef::Knife::CookbookDelete\n
      \            when the cookbook doesn't exist\n               logs an error and
      exits\n             when there is only one version of a cookbook\n               asks
      for confirmation, then deletes the cookbook\n               asks for confirmation
      before purging\n             when there are several versions of a cookbook\n
      \              deletes all versions of a cookbook when given the '-a' flag\n
      \              asks which version to delete and deletes that when not given
      the -a flag\n               deletes all versions of the cookbook when not given
      the -a flag and the user chooses to delete all\n\n           Chef::Knife::Exec\n
      \            executes a script in the context of the chef-shell main context\n\n
      \          knife rehash\n           Using knife-rehash will speed up knife's
      load time by caching the location of subcommands on disk.\n           However,
      you will need to update the cache by running `knife rehash` anytime you install
      a new knife plugin.\n           Knife subcommands are cached in C:/Users/Administrator/.chef/plugin_manifest.json.
      Delete this file to disable the caching.\n             writes the loaded plugins
      to disc\n\n           Chef::Knife::Ssh\n             identity file\n               when
      knife[:ssh_identity_file] is set\n                 uses the ssh_identity_file\n
      \              when knife[:ssh_identity_file] is set and frozen\n                 uses
      the ssh_identity_file\n               when -i is provided\n                 should
      use the value on the command line\n                 should override what is
      set in knife.rb\n               when knife[:ssh_identity_file] is not provided]\n
      \                uses the default\n             port\n               when -p
      31337 is provided\n                 uses the ssh_port\n             user\n               when
      knife[:ssh_user] is set\n                 uses the ssh_user\n               when
      knife[:ssh_user] is set and frozen\n                 uses the ssh_user\n               when
      -x is provided\n                 should use the value on the command line\n
      \                should override what is set in knife.rb\n               when
      knife[:ssh_user] is not provided]\n                 uses the default (current
      user)\n             attribute\n               when knife[:ssh_attribute] is
      set\n                 uses the ssh_attribute\n               when knife[:ssh_attribute]
      is not provided]\n                 uses the default\n               when -a
      ec2.public_ipv4 is provided\n                 should use the value on the command
      line\n                 should override what is set in knife.rb\n             gateway\n
      \              when knife[:ssh_gateway] is set\n                 uses the ssh_gateway\n
      \              when -G user@ec2.public_hostname is provided\n                 uses
      the ssh_gateway\n               when the gateway requires a password\n                 should
      prompt the user for a password\n\n           Chef::Mixin::PowershellOut\n             #powershell_out\n
      \              runs a powershell command and collects stdout\n               does
      not raise exceptions when the command is invalid\n             #powershell_out!\n
      \              runs a powershell command and collects stdout\n               raises
      exceptions when the command is invalid\n\n           Chef::Mixin::ShellOut\n
      \            shell_out_with_systems_locale\n               when environment['LC_ALL']
      is not set\n                 should use the default shell_out setting\n               when
      environment['LC_ALL'] is set\n                 should use the option's setting\n\n
      \          Notifications\n             should subscribe from one resource to
      another\n             should notify from one resource to another immediately\n
      \            should notify from one resource to another before\n             should
      not notify from one resource to another before if the resource is not updated\n
      \            should notify from one resource to another delayed\n             when
      one resource is defined lazily\n               subscribes to a resource defined
      in a ruby block\n               notifies from inside a ruby_block to a resource
      defined outside\n\n           Chef::Provider::RemoteFile::CacheControlData\n
      \            when the cache control data save method is invoked\n               writes
      data to the cache\n               writes the data to the cache and the same
      data can be read back\n               when the length of the uri exceeds the
      path length limits for the local file system\n                 writes data to
      the cache\n                 writes the data to the cache and the same data can
      be read back\n\n           Chef::Resource::WhyrunSafeRubyBlock\n             when
      testing the resource\n               updates the evil laugh, even in why-run
      mode\n\n           Chef::Platform::Rebooter\n             #reboot_if_needed!\n
      \              should not call #shell_out! when reboot has not been requested\n
      \              calling #shell_out! to reboot\n                 when using #reboot_if_needed!\n
      \                  should produce the correct string on Windows\n                   should
      produce the correct (Linux-specific) string on non-Windows\n                 when
      using #reboot!\n                   should produce the correct string on Windows\n
      \                  should produce the correct (Linux-specific) string on non-Windows\n\n
      \          Chef::Resource::Batch\n             behaves like a Windows script
      running on Windows\n               when the run action is invoked on Windows\n
      \                executes the script code\n               when $env:TMP has
      a space\n                 executes the script code\n               when evaluating
      guards\n                 has a guard_interpreter attribute set to the short
      name of the resource\n               when the architecture attribute is not
      set\n                 behaves like a script resource with architecture attribute\n
      \                  with the given architecture attribute value\n                     creates
      a process with the expected architecture\n                     executes guards
      with the same architecture as the resource\n                     when the guard's
      architecture is specified as 64-bit\n                       executes a 64-bit
      guard\n                     when the guard's architecture is specified as 32-bit\n
      \                      executes a 32-bit guard\n               when the architecture
      attribute is :i386\n                 behaves like a script resource with architecture
      attribute\n                   with the given architecture attribute value\n
      \                    creates a process with the expected architecture\n                     executes
      guards with the same architecture as the resource\n                     when
      the guard's architecture is specified as 64-bit\n                       executes
      a 64-bit guard\n                     when the guard's architecture is specified
      as 32-bit\n                       executes a 32-bit guard\n               when
      the architecture attribute is :x86_64\n                 behaves like a script
      resource with architecture attribute\n                   with the given architecture
      attribute value\n                     creates a process with the expected architecture\n
      \                    executes guards with the same architecture as the resource\n
      \                    when the guard's architecture is specified as 64-bit\n
      \                      executes a 64-bit guard\n                     when the
      guard's architecture is specified as 32-bit\n                       executes
      a 32-bit guard\n\n           Chef::Resource::ChocolateyPackage\n             installing
      a package\n               installs the latest version\n               does not
      install if already installed\n               installs version given\n               installs
      new version if one is already installed\n               raises if package is
      not found\n               installing multiple packages\n                 installs
      both packages\n             upgrading a package\n               upgrades to
      a specific version\n               upgrades to the latest version if no version
      given\n             removing a package\n               removes an installed
      package\n\n           Chef::Resource::CookbookFile\n             behaves like
      a securable resource with reporting\n               reading file security metadata
      for reporting on windows\n                 when the target file doesn't exist\n
      \                  has empty values for file metadata in 'current_resource'
      (PENDING: windows reporting not yet fully supported)\n                   and
      no security metadata is specified in new_resource\n                     sets
      the metadata values on the new_resource as strings after creating (PENDING:
      windows reporting not yet fully supported)\n                   and owner is
      specified with a string (username) in new_resource\n                     sets
      the owner on new_resource to the username (string) of the desired owner\n                   and
      owner is specified with a fully qualified domain user\n                     sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                 when the target
      file exists\n                   and no security metadata is specified in new_resource\n
      \                    sets the current values on current resource as strings
      (PENDING: windows reporting not yet fully supported)\n                   and
      owner is specified with a string (username) in new_resource\n                     sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                   and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                     sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                   and
      access rights are specified on the new_resource\n                     sets the
      expanded_rights on the current resource (PENDING: windows reporting not yet
      fully supported)\n                   and no access rights are specified on the
      current resource\n                     sets the expanded rights on the current
      resource (PENDING: windows reporting not yet fully supported)\n             behaves
      like a file resource\n               when deploying with :move\n                 when
      deploying via tmpdir\n                   behaves like a configured file resource\n
      \                    when the target file is a symlink\n                       when
      configured not to manage symlink's target\n                         when symlink
      target has correct content\n                           behaves like file resource
      not pointing to a real file\n                             when force_unlink
      is set to true\n                               :create unlinks the target\n
      \                            when force_unlink is set to false\n                               :create
      raises an error\n                             when force_unlink is not set (default)\n
      \                              :create raises an error\n                         when
      symlink target has the wrong content\n                           behaves like
      file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n                 when deploying via destdir\n                   behaves
      like a configured file resource\n                     when the target file is
      a symlink\n                       when configured not to manage symlink's target\n
      \                        when symlink target has correct content\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when symlink target has the wrong content\n
      \                          behaves like file resource not pointing to a real
      file\n                             when force_unlink is set to true\n                               :create
      unlinks the target\n                             when force_unlink is set to
      false\n                               :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n               when deploying with :copy\n                 when
      deploying via tmpdir\n                   behaves like a configured file resource\n
      \                    when the target file is a symlink\n                       when
      configured not to manage symlink's target\n                         when symlink
      target has correct content\n                           behaves like file resource
      not pointing to a real file\n                             when force_unlink
      is set to true\n                               :create unlinks the target\n
      \                            when force_unlink is set to false\n                               :create
      raises an error\n                             when force_unlink is not set (default)\n
      \                              :create raises an error\n                         when
      symlink target has the wrong content\n                           behaves like
      file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n                 when deploying via destdir\n                   behaves
      like a configured file resource\n                     when the target file is
      a symlink\n                       when configured not to manage symlink's target\n
      \                        when symlink target has correct content\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when symlink target has the wrong content\n
      \                          behaves like file resource not pointing to a real
      file\n                             when force_unlink is set to true\n                               :create
      unlinks the target\n                             when force_unlink is set to
      false\n                               :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n               when running under why run\n                 and
      the resource has a path with a missing intermediate directory\n                   successfully
      doesn't create the file\n               when setting atomic_update\n                 booleans
      should work\n                 anything else should raise an error\n\n           Chef::Resource::Directory\n
      \            behaves like a directory resource\n               when the target
      directory does not exist\n                 when running action :create\n                   and
      the recursive option is not set\n                     creates the directory
      when the :create action is run\n                     is marked updated by last
      action\n                   and the recursive option is set\n                     recursively
      creates required directories\n                     is marked updated by last
      action\n                 behaves like a securable resource without existing
      target\n                   on Windows\n                     leaves owner as
      system default on create if owner is not specified\n                     sets
      owner when owner is specified\n                     fails to set owner when
      owner has invalid characters\n                     sets owner when owner is
      specified with a \\\n                     leaves owner alone if owner is not
      specified and resource already exists\n                     leaves group as
      system default on create if group is not specified\n                     sets
      group when group is specified\n                     fails to set group when
      group has invalid characters\n                     leaves group alone if group
      is not specified and resource already exists\n                     does not
      inherit aces if inherits is set to false\n                     has the inheritable
      acls of parent directory if no acl is specified\n                     with rights
      and deny_rights attributes\n                       correctly sets :read rights\n
      \                      correctly sets :read_execute rights\n                       correctly
      sets :write rights\n                       correctly sets :modify rights\n                       correctly
      sets :full_control rights\n                       correctly sets deny_rights\n
      \                      Sets multiple rights\n                       Sets deny_rights
      ahead of rights\n                       Sets deny_rights ahead of rights when
      specified in reverse order\n                     with a mode attribute\n                       respects
      mode in string form as an octal number\n                       respects mode
      in numeric form as a ruby-interpreted octal\n                       respects
      the owner, group and everyone bits of mode\n                       respects
      the individual read, write and execute bits of mode\n                       warns
      when mode tries to set owner bits but owner is not specified\n                       warns
      when mode tries to set group bits but group is not specified\n               when
      the target directory exists\n                 when running action :create\n
      \                  does not re-create the directory\n                   is not
      marked updated by last action\n                 when running action :delete\n
      \                  without the recursive option\n                     deletes
      the directory\n                     is marked as updated by last action\n                   with
      the recursive option\n                     recursively deletes directories\n
      \            behaves like a securable resource with reporting\n               reading
      file security metadata for reporting on windows\n                 when the target
      file doesn't exist\n                   has empty values for file metadata in
      'current_resource' (PENDING: windows reporting not yet fully supported)\n                   and
      no security metadata is specified in new_resource\n                     sets
      the metadata values on the new_resource as strings after creating (PENDING:
      windows reporting not yet fully supported)\n                   and owner is
      specified with a string (username) in new_resource\n                     sets
      the owner on new_resource to the username (string) of the desired owner\n                   and
      owner is specified with a fully qualified domain user\n                     sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                 when the target
      file exists\n                   and no security metadata is specified in new_resource\n
      \                    sets the current values on current resource as strings
      (PENDING: windows reporting not yet fully supported)\n                   and
      owner is specified with a string (username) in new_resource\n                     sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                   and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                     sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                   and
      access rights are specified on the new_resource\n                     sets the
      expanded_rights on the current resource (PENDING: windows reporting not yet
      fully supported)\n                   and no access rights are specified on the
      current resource\n                     sets the expanded rights on the current
      resource (PENDING: windows reporting not yet fully supported)\n\n           Chef::Resource::DscResource\n
      \            when Powershell supports Invoke-DscResource\n               with
      an invalid dsc resource\n                 raises an exception if the resource
      is not found (PENDING: Requires Powershell >= 5.0.10018.0)\n               with
      a valid dsc resource\n                 converges the resource if it is not converged
      (PENDING: Requires Powershell >= 5.0.10018.0)\n                 does not converge
      the resource if it is already converged (PENDING: Requires Powershell >= 5.0.10018.0)\n\n
      \          Chef::Resource::DscScript\n             when supplying configuration
      through the configuration attribute\n               behaves like a dsc_script
      resource with specified PowerShell configuration code\n                 should
      create a registry key with a specific registry value and data\n                 it
      should behave like a dsc_script resource with configuration affected by cwd\n
      \                  when the DSC configuration contains code that raises an exception
      if cwd has a specific value\n                     should not raise an exception
      if the cwd is not etc\n                     should raise an exception if the
      cwd is etc\n             when supplying configuration using the path attribute\n
      \              behaves like a dsc_script resource with specified PowerShell
      configuration code\n                 should create a registry key with a specific
      registry value and data\n                 it should behave like a dsc_script
      resource with configuration affected by cwd\n                   when the DSC
      configuration contains code that raises an exception if cwd has a specific value\n
      \                    should not raise an exception if the cwd is not etc\n                     should
      raise an exception if the cwd is etc\n             when running a configuration
      that manages users\n               behaves like a dsc_script with configuration
      data\n                 behaves like a dsc_script with configuration data set
      via an attribute\n                   should run a configuration script that
      creates a user\n                 behaves like a dsc_script with configuration
      data set via an attribute\n                   should run a configuration script
      that creates a user\n               behaves like a dsc_script with configuration
      data that uses environment variables\n                 does not directly contain
      the user name\n                 behaves like a dsc_script with configuration
      data\n                   behaves like a dsc_script with configuration data set
      via an attribute\n                     should run a configuration script that
      creates a user\n                   behaves like a dsc_script with configuration
      data set via an attribute\n                     should run a configuration script
      that creates a user\n               behaves like a dsc_script with configuration
      data that takes parameters\n                 does not directly contain the user
      name\n                 behaves like a dsc_script with configuration data\n                   behaves
      like a dsc_script with configuration data set via an attribute\n                     should
      run a configuration script that creates a user\n                   behaves like
      a dsc_script with configuration data set via an attribute\n                     should
      run a configuration script that creates a user\n               behaves like
      a dsc_script without configuration data that takes parameters\n                 when
      configuration data is not specified\n                   should have a default
      value of nil for the configuration_data attribute\n                   should
      have a default value of nil for the configuration_data_path attribute\n                   should
      set a registry key according to parameters passed to the configuration\n             when
      using ps_credential\n               allows the use of ps_credential (FAILED
      - 1)\n\n           Chef::Resource::Env\n             when running on Windows\n
      \              when the create action is invoked\n                 should create
      an environment variable for action create\n                 should modify an
      existing variable's value to a new value\n                 should modify an
      existing variable's value to a new value if the variable name case differs from
      the existing variable\n                 should not expand environment variables
      if the variable is not PATH\n               when the modify action is invoked\n
      \                should raise an exception for modify if the variable doesn't
      exist\n                 should modify an existing variable's value to a new
      value\n                 should modify an existing variable's value to a new
      value if the variable name case differs from the existing variable\n                 should
      not expand environment variables if the variable is not PATH\n                 when
      using PATH\n                   should expand PATH\n               when the delete
      action is invoked\n                 should delete an environment variable\n
      \                should not raise an exception when a non-existent environment
      variable is deleted\n                 should delete an existing variable's value
      to a new value if the specified variable name case differs from the existing
      variable\n                 should delete a value from the current process even
      if it is not in the registry\n\n           Chef::Resource::Execute\n             times
      out when a timeout is set on the resource\n             when guard is ruby block\n
      \              guard can still run\n             when why_run is enabled\n               executes
      the guard and not the regular resource\n             when parent resource sets
      :cwd\n               guard inherits :cwd from resource and runs\n               guard
      inherits :cwd from resource and does not run\n             when parent resource
      sets :environment\n               guard inherits :environment value from resource
      and runs\n               guard inherits :environment value from resource and
      does not run\n               guard adds additional values in its :environment
      and runs\n               guard adds additional values in its :environment and
      does not run\n               guard overwrites value with its :environment and
      runs\n               guard overwrites value with its :environment and does not
      runs\n\n           Chef::Resource::File\n             behaves like a file resource\n
      \              when deploying with :move\n                 when deploying via
      tmpdir\n                   behaves like a configured file resource\n                     when
      the target file is a symlink\n                       when configured not to
      manage symlink's target\n                         when symlink target has correct
      content\n                           behaves like file resource not pointing
      to a real file\n                             when force_unlink is set to true\n
      \                              :create unlinks the target\n                             when
      force_unlink is set to false\n                               :create raises
      an error\n                             when force_unlink is not set (default)\n
      \                              :create raises an error\n                         when
      symlink target has the wrong content\n                           behaves like
      file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n                 when deploying via destdir\n                   behaves
      like a configured file resource\n                     when the target file is
      a symlink\n                       when configured not to manage symlink's target\n
      \                        when symlink target has correct content\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when symlink target has the wrong content\n
      \                          behaves like file resource not pointing to a real
      file\n                             when force_unlink is set to true\n                               :create
      unlinks the target\n                             when force_unlink is set to
      false\n                               :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n               when deploying with :copy\n                 when
      deploying via tmpdir\n                   behaves like a configured file resource\n
      \                    when the target file is a symlink\n                       when
      configured not to manage symlink's target\n                         when symlink
      target has correct content\n                           behaves like file resource
      not pointing to a real file\n                             when force_unlink
      is set to true\n                               :create unlinks the target\n
      \                            when force_unlink is set to false\n                               :create
      raises an error\n                             when force_unlink is not set (default)\n
      \                              :create raises an error\n                         when
      symlink target has the wrong content\n                           behaves like
      file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n                 when deploying via destdir\n                   behaves
      like a configured file resource\n                     when the target file is
      a symlink\n                       when configured not to manage symlink's target\n
      \                        when symlink target has correct content\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when symlink target has the wrong content\n
      \                          behaves like file resource not pointing to a real
      file\n                             when force_unlink is set to true\n                               :create
      unlinks the target\n                             when force_unlink is set to
      false\n                               :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n               when running under why run\n                 and
      the resource has a path with a missing intermediate directory\n                   successfully
      doesn't create the file\n               when setting atomic_update\n                 booleans
      should work\n                 anything else should raise an error\n             behaves
      like a securable resource with reporting\n               reading file security
      metadata for reporting on windows\n                 when the target file doesn't
      exist\n                   has empty values for file metadata in 'current_resource'
      (PENDING: windows reporting not yet fully supported)\n                   and
      no security metadata is specified in new_resource\n                     sets
      the metadata values on the new_resource as strings after creating (PENDING:
      windows reporting not yet fully supported)\n                   and owner is
      specified with a string (username) in new_resource\n                     sets
      the owner on new_resource to the username (string) of the desired owner\n                   and
      owner is specified with a fully qualified domain user\n                     sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                 when the target
      file exists\n                   and no security metadata is specified in new_resource\n
      \                    sets the current values on current resource as strings
      (PENDING: windows reporting not yet fully supported)\n                   and
      owner is specified with a string (username) in new_resource\n                     sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                   and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                     sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                   and
      access rights are specified on the new_resource\n                     sets the
      expanded_rights on the current resource (PENDING: windows reporting not yet
      fully supported)\n                   and no access rights are specified on the
      current resource\n                     sets the expanded rights on the current
      resource (PENDING: windows reporting not yet fully supported)\n             when
      running action :create without content\n               and the target file does
      not exist\n                 creates the file\n                 is marked updated
      by last action\n             when using backup\n               only stores the
      number of requested backups\n             when running action :create on a relative
      path\n               and the file exists\n                 should run without
      an exception\n             when running action :touch\n               and the
      target file does not exist\n                 it creates the file\n                 is
      marked updated by last action\n               and the target file exists and
      has the correct content\n                 updates the mtime of the file\n                 does
      not change the content\n                 is marked as updated by last action\n\n
      \          Chef::Resource::Group\n             append should be false by default\n
      \            group create action\n               should create a group\n               when
      group name is length 256\n                 should create a group\n               when
      group name length is more than 256\n                 should not create a group\n
      \              should raise an error when same member is included in the members
      and excluded_members\n                 should raise an error\n             group
      remove action\n               when there is a group\n                 should
      remove a group\n               when there is no group\n                 should
      be no-op\n             group modify action\n               when there is no
      group\n                 should raise an error\n               when there is
      a group\n                 behaves like correct group management\n                   when
      no users exist\n                     when append is not set\n                       should
      raise an error\n                     when append is set\n                       should
      raise an error\n                   when the users exist\n                     when
      append is not set\n                       should set the group to to contain
      given members\n                       when group already contains some users\n
      \                        should remove all existing users and only add the new
      users to the group\n                     when append is set\n                       should
      add included members to the group\n                       when group already
      contains some users\n                         should add the included users
      and remove excluded users\n               when running on Windows\n                 behaves
      like an expected invalid domain error case\n                   when updating
      membership\n                     raises an error for a non well-formed domain
      name\n                     raises an error for a nonexistent domain\n                   when
      removing members\n                     does not raise an error for a non well-formed
      domain name\n                     does not raise an error for a nonexistent
      domain\n             group manage action\n               when there is no group\n
      \                raises an error on modify\n                 does not raise
      an error on manage\n               when there is a group\n                 behaves
      like correct group management\n                   when no users exist\n                     when
      append is not set\n                       should raise an error\n                     when
      append is set\n                       should raise an error\n                   when
      the users exist\n                     when append is not set\n                       should
      set the group to to contain given members\n                       when group
      already contains some users\n                         should remove all existing
      users and only add the new users to the group\n                     when append
      is set\n                       should add included members to the group\n                       when
      group already contains some users\n                         should add the included
      users and remove excluded users\n               running on windows\n                 behaves
      like an expected invalid domain error case\n                   when updating
      membership\n                     raises an error for a non well-formed domain
      name\n                     raises an error for a nonexistent domain\n                   when
      removing members\n                     does not raise an error for a non well-formed
      domain name\n                     does not raise an error for a nonexistent
      domain\n\n           Chef::Resource::Link\n             when supported on platform\n
      \              is symbolic\n                 when the link destination is a
      file\n                   and the link does not yet exist\n                     the
      :create action\n                       links to the target file\n                       marks
      the resource updated\n                       logs that it created\n                     the
      :delete action\n                       leaves the file deleted\n                       does
      not mark the resource updated\n                       does not log that it deleted\n
      \                  and the link already exists and is a symbolic link\n                     pointing
      at the target\n                       the :delete action does not delete the
      target file\n                       the :create action\n                         leaves
      the file linked\n                         does not mark the resource updated\n
      \                        does not log that it created\n                       the
      :delete action\n                         deletes the file\n                         marks
      the resource updated\n                         logs that it deleted\n                     pointing
      somewhere else\n                       the :delete action does not delete the
      target file\n                       the :create action\n                         links
      to the target file\n                         marks the resource updated\n                         logs
      that it created\n                       the :delete action\n                         deletes
      the file\n                         marks the resource updated\n                         logs
      that it deleted\n                     pointing nowhere\n                       the
      :create action\n                         links to the target file\n                         marks
      the resource updated\n                         logs that it created\n                       the
      :delete action\n                         deletes the file\n                         marks
      the resource updated\n                         logs that it deleted\n                   and
      the link already exists and is a hard link to the file\n                     the
      :create action\n                       links to the target file\n                       marks
      the resource updated\n                       logs that it created\n                     behaves
      like delete errors out\n                       delete errors out\n                   and
      the link already exists and is a file\n                     the :create action\n
      \                      links to the target file\n                       marks
      the resource updated\n                       logs that it created\n                     behaves
      like delete errors out\n                       delete errors out\n                   and
      the link already exists and is a directory\n                     create errors
      out\n                     behaves like delete errors out\n                       delete
      errors out\n                   behaves like a securable resource without existing
      target\n                     on Windows\n                       leaves owner
      as system default on create if owner is not specified\n                       sets
      owner when owner is specified\n                       fails to set owner when
      owner has invalid characters\n                       sets owner when owner is
      specified with a \\\n                       leaves owner alone if owner is not
      specified and resource already exists\n                       leaves group as
      system default on create if group is not specified\n                       sets
      group when group is specified\n                       fails to set group when
      group has invalid characters\n                       leaves group alone if group
      is not specified and resource already exists\n                       does not
      inherit aces if inherits is set to false\n                       has the inheritable
      acls of parent directory if no acl is specified\n                       with
      rights and deny_rights attributes\n                         correctly sets :read
      rights\n                         correctly sets :read_execute rights\n                         correctly
      sets :write rights\n                         correctly sets :modify rights\n
      \                        correctly sets :full_control rights\n                         correctly
      sets deny_rights\n                         Sets multiple rights\n                         Sets
      deny_rights ahead of rights\n                         Sets deny_rights ahead
      of rights when specified in reverse order\n                       with a mode
      attribute\n                         respects mode in string form as an octal
      number\n                         respects mode in numeric form as a ruby-interpreted
      octal\n                         respects the owner, group and everyone bits
      of mode\n                         respects the individual read, write and execute
      bits of mode\n                         warns when mode tries to set owner bits
      but owner is not specified\n                         warns when mode tries to
      set group bits but group is not specified\n                 when the link destination
      is a directory\n                   and the link does not yet exist\n                     the
      :create action\n                       links to the target file\n                       marks
      the resource updated\n                       logs that it created\n                     the
      :delete action\n                       leaves the file deleted\n                       does
      not mark the resource updated\n                       does not log that it deleted\n
      \                  and the link already exists and points to a different directory\n
      \                    the :create action\n                       links to the
      target file\n                       marks the resource updated\n                       logs
      that it created\n                 when the link destination is a symbolic link\n
      \                  to a file that exists\n                     and the link
      does not yet exist\n                       the :create action\n                         links
      to the target file\n                         marks the resource updated\n                         logs
      that it created\n                       the :delete action\n                         leaves
      the file deleted\n                         does not mark the resource updated\n
      \                        does not log that it deleted\n                   to
      a file that does not exist\n                     and the link does not yet exist\n
      \                      the :create action\n                         links to
      the target file\n                         marks the resource updated\n                         logs
      that it created\n                       the :delete action\n                         leaves
      the file deleted\n                         does not mark the resource updated\n
      \                        does not log that it deleted\n                 when
      the link destination does not exist\n                   the :create action\n
      \                    links to the target file\n                     marks the
      resource updated\n                     logs that it created\n                   the
      :delete action\n                     leaves the file deleted\n                     does
      not mark the resource updated\n                     does not log that it deleted\n
      \                with a relative link destination\n                   when the
      link does not yet exist\n                     the :create action\n                       links
      to the target file\n                       marks the resource updated\n                       logs
      that it created\n                     the :delete action\n                       leaves
      the file deleted\n                       does not mark the resource updated\n
      \                      does not log that it deleted\n                   when
      the link already exists and points at the target\n                     the :create
      action\n                       leaves the file linked\n                       does
      not mark the resource updated\n                       does not log that it created\n
      \                    the :delete action\n                       deletes the
      file\n                       marks the resource updated\n                       logs
      that it deleted\n                   when the link already exists and points
      at the target with an absolute path\n                     the :create action\n
      \                      links to the target file\n                       marks
      the resource updated\n                       logs that it created\n                     the
      :delete action\n                       deletes the file\n                       marks
      the resource updated\n                       logs that it deleted\n                 with
      a bare filename for the link destination\n                   when the link does
      not yet exist\n                     the :create action\n                       links
      to the target file\n                       marks the resource updated\n                       logs
      that it created\n                     the :delete action\n                       leaves
      the file deleted\n                       does not mark the resource updated\n
      \                      does not log that it deleted\n                   when
      the link already exists and points at the target\n                     the :create
      action\n                       leaves the file linked\n                       does
      not mark the resource updated\n                       does not log that it created\n
      \                    the :delete action\n                       deletes the
      file\n                       marks the resource updated\n                       logs
      that it deleted\n                   when the link already exists and points
      at the target with an absolute path\n                     the :create action\n
      \                      links to the target file\n                       marks
      the resource updated\n                       logs that it created\n                     the
      :delete action\n                       deletes the file\n                       marks
      the resource updated\n                       logs that it deleted\n               is
      a hard link\n                 when the link destination is a file\n                   and
      the link does not yet exist\n                     the :create action\n                       preserves
      the hard link\n                       marks the resource updated\n                       logs
      that it created\n                     the :delete action\n                       leaves
      the file deleted\n                       does not mark the resource updated\n
      \                      does not log that it deleted\n                   and
      the link already exists and is a symbolic link pointing at the same file\n                     the
      :create action\n                       preserves the hard link\n                       marks
      the resource updated\n                       logs that it created\n                     behaves
      like delete errors out\n                       delete errors out\n                   and
      the link already exists and is a hard link to the file\n                     the
      :delete action does not delete the target file\n                     the :create
      action\n                       links to the target file\n                       does
      not mark the resource updated\n                       does not log that it created\n
      \                    the :delete action\n                       deletes the
      file\n                       marks the resource updated\n                       logs
      that it deleted\n                   and the link already exists and is a file\n
      \                    the :create action\n                       preserves the
      hard link\n                       marks the resource updated\n                       logs
      that it created\n                     behaves like delete errors out\n                       delete
      errors out\n                   and the link already exists and is a directory\n
      \                    errors out\n                     behaves like delete errors
      out\n                       delete errors out\n                   and specifies
      security attributes\n                     ignores them\n                 when
      the link destination is a directory\n                   and the link does not
      yet exist\n                     create errors out\n                     the
      :delete action\n                       leaves the file deleted\n                       does
      not mark the resource updated\n                       does not log that it deleted\n
      \                when the link destination is a symbolic link\n                   to
      a real file\n                     and the link does not yet exist\n                       links
      to the target file\n                       the :delete action\n                         leaves
      the file deleted\n                         does not mark the resource updated\n
      \                        does not log that it deleted\n                   to
      a nonexistent file\n                     and the link does not yet exist\n                       links
      to the target file\n                       the :delete action\n                         leaves
      the file deleted\n                         does not mark the resource updated\n
      \                        does not log that it deleted\n                 when
      the link destination does not exist\n                   and the link does not
      yet exist\n                     create errors out\n                     the
      :delete action\n                       leaves the file deleted\n                       does
      not mark the resource updated\n                       does not log that it deleted\n\n
      \          Chef::Resource::Ohai\n             when reloading all plugins\n               behaves
      like reloaded :uptime\n                 should reload :uptime\n             when
      reloading only uptime\n               behaves like reloaded :uptime\n                 should
      reload :uptime\n\n           Chef::Resource::PowershellScript\n             behaves
      like a Windows script running on Windows\n               when the run action
      is invoked on Windows\n                 executes the script code\n               when
      $env:TMP has a space\n                 executes the script code\n               when
      evaluating guards\n                 has a guard_interpreter attribute set to
      the short name of the resource\n               when the architecture attribute
      is not set\n                 behaves like a script resource with architecture
      attribute\n                   with the given architecture attribute value\n
      \                    creates a process with the expected architecture\n                     executes
      guards with the same architecture as the resource\n                     when
      the guard's architecture is specified as 64-bit\n                       executes
      a 64-bit guard\n                     when the guard's architecture is specified
      as 32-bit\n                       executes a 32-bit guard\n               when
      the architecture attribute is :i386\n                 behaves like a script
      resource with architecture attribute\n                   with the given architecture
      attribute value\n                     creates a process with the expected architecture\n
      \                    executes guards with the same architecture as the resource\n
      \                    when the guard's architecture is specified as 64-bit\n
      \                      executes a 64-bit guard\n                     when the
      guard's architecture is specified as 32-bit\n                       executes
      a 32-bit guard\n               when the architecture attribute is :x86_64\n
      \                behaves like a script resource with architecture attribute\n
      \                  with the given architecture attribute value\n                     creates
      a process with the expected architecture\n                     executes guards
      with the same architecture as the resource\n                     when the guard's
      architecture is specified as 64-bit\n                       executes a 64-bit
      guard\n                     when the guard's architecture is specified as 32-bit\n
      \                      executes a 32-bit guard\n             when the run action
      is invoked on Windows\n               successfully executes a non-cmdlet Windows
      binary as the last command of the script\n               returns the exit status
      27 for a powershell script that exits with 27\n               returns the exit
      status -27 as a signed integer or an unsigned 16-bit 2's complement value of
      65509 for a powershell script that exits with -27\n               returns the
      process exit code\n               returns 0 if the last command was a cmdlet
      that succeeded\n               returns 0 if the last command was a cmdlet that
      succeeded and was preceded by a non-cmdlet Windows binary that failed\n               returns
      1 if the last command was a cmdlet that failed\n               returns 1 if
      the last command was a cmdlet that failed and was preceded by a successfully
      executed non-cmdlet Windows binary\n               raises a Mixlib::ShellOut::ShellCommandFailed
      error if the script is not syntactically correct\n               raises an error
      if the script is not syntactically correct even if returns is set to 1 which
      is what powershell.exe returns for syntactically invalid scripts\n               returns
      1 if the last command was a cmdlet that failed and was preceded by an unsuccessfully
      executed non-cmdlet Windows binary\n               returns 0 if the last command
      was a non-cmdlet Windows binary that succeeded and was preceded by a failed
      cmdlet\n               returns a specific error code if the last command was
      a non-cmdlet Windows binary that failed and was preceded by cmdlet that succeeded\n
      \              returns a specific error code if the last command was a non-cmdlet
      Windows binary that failed and was preceded by cmdlet that failed\n               returns
      0 for $false as the last line of the script when convert_boolean_return is false\n
      \              returns 0 for $true as the last line of the script when convert_boolean_return
      is false\n               returns 1 for $false as the last line of the script
      when convert_boolean_return is true\n               returns 0 for $true as the
      last line of the script when convert_boolean_return is true\n               executes
      a script with a 64-bit process on a 64-bit OS, otherwise a 32-bit process\n
      \              returns 1 if an invalid flag is passed to the interpreter\n               returns
      0 if a valid flag is passed to the interpreter\n               raises an error
      when given a block and a guard_interpreter\n               when dsc is supported\n
      \                can execute LCM configuration code\n             when running
      on a 64-bit version of Ruby\n               executes a script with a 64-bit
      process if :x86_64 arch is specified\n               executes a script with
      a 32-bit process if :i386 arch is specified\n             when executing guards\n
      \              when the guard_interpreter's default value of :powershell_script
      is overridden to :default\n                 evaluates a succeeding not_if block
      using cmd.exe as false by default\n                 evaluates a failing not_if
      block using cmd.exe as true by default\n                 evaluates an succeeding
      only_if block using cmd.exe as true by default\n                 evaluates a
      failing only_if block using cmd.exe as false by default\n               the
      only_if is specified before the guard\n                 evaluates a powershell
      $true for a only_if block as true\n               with powershell_script as
      the guard_interpreter\n                 has a guard_interpreter attribute set
      to :powershell_script\n                 evaluates a powershell $false for a
      not_if block as true\n                 evaluates a powershell $true for a not_if
      block as false\n                 evaluates a powershell $false for an only_if
      block as false\n                 evaluates a powershell $true for a only_if
      block as true\n                 evaluates a not_if block using powershell.exe\n
      \                evaluates an only_if block using powershell.exe\n                 evaluates
      a non-zero powershell exit status for not_if as true\n                 evaluates
      a zero powershell exit status for not_if as false\n                 evaluates
      a failed executable exit status for not_if as false\n                 evaluates
      a successful executable exit status for not_if as true\n                 evaluates
      a failed executable exit status for only_if as false\n                 evaluates
      a successful executable exit status for only_if as true\n                 evaluates
      a failed cmdlet exit status for not_if as true\n                 evaluates a
      successful cmdlet exit status for not_if as true\n                 evaluates
      a failed cmdlet exit status for only_if as false\n                 evaluates
      a successful cmdlet exit status for only_if as true\n                 evaluates
      a not_if block using the cwd guard parameter\n                 evaluates an
      only_if block using the cwd guard parameter\n                 inherits cwd from
      the parent resource for only_if\n                 inherits cwd from the parent
      resource for not_if\n                 evaluates a 64-bit resource with a 64-bit
      guard and interprets boolean false as zero status code\n                 evaluates
      a 64-bit resource with a 64-bit guard and interprets boolean true as nonzero
      status code\n                 evaluates a 32-bit resource with a 32-bit guard
      and interprets boolean false as zero status code\n                 evaluates
      a 32-bit resource with a 32-bit guard and interprets boolean true as nonzero
      status code\n                 evaluates a simple boolean false as nonzero status
      code when convert_boolean_return is true for only_if\n                 evaluates
      a simple boolean false as nonzero status code when convert_boolean_return is
      true for not_if\n                 evaluates a simple boolean true as 0 status
      code when convert_boolean_return is true for only_if\n                 evaluates
      a simple boolean true as 0 status code when convert_boolean_return is true for
      not_if\n                 evaluates a 32-bit resource with a 32-bit guard and
      interprets boolean false as zero status code using convert_boolean_return for
      only_if\n                 evaluates a 32-bit resource with a 32-bit guard and
      interprets boolean false as zero status code using convert_boolean_return for
      not_if\n                 evaluates a 32-bit resource with a 32-bit guard and
      interprets boolean true as nonzero status code using convert_boolean_return
      for only_if\n                 evaluates a 32-bit resource with a 32-bit guard
      and interprets boolean true as nonzero status code using convert_boolean_return
      for not_if\n\n           Chef::Resource::Reboot\n             the request_reboot_on_successful_run
      action\n               should have modified the run context correctly\n             the
      reboot_interrupt_run action\n               should have modified the run context
      correctly\n             the cancel action\n               should have cleared
      the reboot request\n\n           Chef::Resource::RemoteDirectory\n             behaves
      like a directory resource\n               when the target directory does not
      exist\n                 when running action :create\n                   and
      the recursive option is not set\n                     creates the directory
      when the :create action is run\n                     is marked updated by last
      action\n                   and the recursive option is set\n                     recursively
      creates required directories\n                     is marked updated by last
      action\n                 behaves like a securable resource without existing
      target\n                   on Windows\n                     leaves owner as
      system default on create if owner is not specified\n                     sets
      owner when owner is specified\n                     fails to set owner when
      owner has invalid characters\n                     sets owner when owner is
      specified with a \\\n                     leaves owner alone if owner is not
      specified and resource already exists\n                     leaves group as
      system default on create if group is not specified\n                     sets
      group when group is specified\n                     fails to set group when
      group has invalid characters\n                     leaves group alone if group
      is not specified and resource already exists\n                     does not
      inherit aces if inherits is set to false\n                     has the inheritable
      acls of parent directory if no acl is specified\n                     with rights
      and deny_rights attributes\n                       correctly sets :read rights\n
      \                      correctly sets :read_execute rights\n                       correctly
      sets :write rights\n                       correctly sets :modify rights\n                       correctly
      sets :full_control rights\n                       correctly sets deny_rights\n
      \                      Sets multiple rights\n                       Sets deny_rights
      ahead of rights\n                       Sets deny_rights ahead of rights when
      specified in reverse order\n                     with a mode attribute\n                       respects
      mode in string form as an octal number\n                       respects mode
      in numeric form as a ruby-interpreted octal\n                       respects
      the owner, group and everyone bits of mode\n                       respects
      the individual read, write and execute bits of mode\n                       warns
      when mode tries to set owner bits but owner is not specified\n                       warns
      when mode tries to set group bits but group is not specified\n               when
      the target directory exists\n                 when running action :create\n
      \                  does not re-create the directory\n                   is not
      marked updated by last action\n                 when running action :delete\n
      \                  without the recursive option\n                     deletes
      the directory\n                     is marked as updated by last action\n                   with
      the recursive option\n                     recursively deletes directories\n
      \            behaves like a securable resource with reporting\n               reading
      file security metadata for reporting on windows\n                 when the target
      file doesn't exist\n                   has empty values for file metadata in
      'current_resource' (PENDING: windows reporting not yet fully supported)\n                   and
      no security metadata is specified in new_resource\n                     sets
      the metadata values on the new_resource as strings after creating (PENDING:
      windows reporting not yet fully supported)\n                   and owner is
      specified with a string (username) in new_resource\n                     sets
      the owner on new_resource to the username (string) of the desired owner\n                   and
      owner is specified with a fully qualified domain user\n                     sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                 when the target
      file exists\n                   and no security metadata is specified in new_resource\n
      \                    sets the current values on current resource as strings
      (PENDING: windows reporting not yet fully supported)\n                   and
      owner is specified with a string (username) in new_resource\n                     sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                   and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                     sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                   and
      access rights are specified on the new_resource\n                     sets the
      expanded_rights on the current resource (PENDING: windows reporting not yet
      fully supported)\n                   and no access rights are specified on the
      current resource\n                     sets the expanded rights on the current
      resource (PENDING: windows reporting not yet fully supported)\n             when
      creating the remote directory with purging disabled\n               and the
      directory does not yet exist\n                 transfers the directory with
      all contents\n                 is marked as updated by last action\n               and
      there are extraneous files in the directory\n                 does not modify
      the expected state of the directory\n                 does not remove unmanaged
      files\n               and the directory is in the desired state\n                 does
      not modify the expected state of the directory\n                 is not marked
      as updated by last action\n               with overwrite disabled\n                 leaves
      modifications alone\n             when creating the directory with purging enabled\n
      \              and there are no extraneous files in the directory\n                 creates
      the directory contents as normal\n               and there are extraneous files
      in the directory\n                 removes unmanaged files\n                 does
      not modify managed files\n                 is marked as updated by last action\n
      \              and there are deeply nested extraneous files in the directory\n
      \                removes files in subdirectories before files above\n                 is
      marked as updated by last action\n\n           Chef::Resource::RemoteFile\n
      \            when fetching files over HTTP\n               when redownload isn't
      necessary\n                 does not fetch the file\n               when using
      normal encoding\n                 behaves like a file resource\n                   when
      deploying with :move\n                     when deploying via tmpdir\n                       behaves
      like a configured file resource\n                         when the target file
      is a symlink\n                           when configured not to manage symlink's
      target\n                             when symlink target has correct content\n
      \                              behaves like file resource not pointing to a
      real file\n                                 when force_unlink is set to true\n
      \                                  :create unlinks the target\n                                 when
      force_unlink is set to false\n                                   :create raises
      an error\n                                 when force_unlink is not set (default)\n
      \                                  :create raises an error\n                             when
      symlink target has the wrong content\n                               behaves
      like file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                         when the target file does not exist\n
      \                          when force_unlink is set to true\n                             :create
      updates the target\n                           when force_unlink is set to false\n
      \                            :create updates the target\n                           when
      force_unlink is not set (default)\n                             :create updates
      the target\n                         when the target file is a directory\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when notification is configured\n                           when
      path is specified with normal separator\n                             should
      notify the other resources correctly\n                           when path is
      specified with windows separator\n                             should notify
      the other resources correctly\n                         when the target file
      does not exist\n                           when running action :create\n                             creates
      the file when the :create action is run\n                             creates
      the file with the correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                     when deploying via
      destdir\n                       behaves like a configured file resource\n                         when
      the target file is a symlink\n                           when configured not
      to manage symlink's target\n                             when symlink target
      has correct content\n                               behaves like file resource
      not pointing to a real file\n                                 when force_unlink
      is set to true\n                                   :create unlinks the target\n
      \                                when force_unlink is set to false\n                                   :create
      raises an error\n                                 when force_unlink is not set
      (default)\n                                   :create raises an error\n                             when
      symlink target has the wrong content\n                               behaves
      like file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                         when the target file does not exist\n
      \                          when force_unlink is set to true\n                             :create
      updates the target\n                           when force_unlink is set to false\n
      \                            :create updates the target\n                           when
      force_unlink is not set (default)\n                             :create updates
      the target\n                         when the target file is a directory\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when notification is configured\n                           when
      path is specified with normal separator\n                             should
      notify the other resources correctly\n                           when path is
      specified with windows separator\n                             should notify
      the other resources correctly\n                         when the target file
      does not exist\n                           when running action :create\n                             creates
      the file when the :create action is run\n                             creates
      the file with the correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                   when deploying with
      :copy\n                     when deploying via tmpdir\n                       behaves
      like a configured file resource\n                         when the target file
      is a symlink\n                           when configured not to manage symlink's
      target\n                             when symlink target has correct content\n
      \                              behaves like file resource not pointing to a
      real file\n                                 when force_unlink is set to true\n
      \                                  :create unlinks the target\n                                 when
      force_unlink is set to false\n                                   :create raises
      an error\n                                 when force_unlink is not set (default)\n
      \                                  :create raises an error\n                             when
      symlink target has the wrong content\n                               behaves
      like file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                         when the target file does not exist\n
      \                          when force_unlink is set to true\n                             :create
      updates the target\n                           when force_unlink is set to false\n
      \                            :create updates the target\n                           when
      force_unlink is not set (default)\n                             :create updates
      the target\n                         when the target file is a directory\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when notification is configured\n                           when
      path is specified with normal separator\n                             should
      notify the other resources correctly\n                           when path is
      specified with windows separator\n                             should notify
      the other resources correctly\n                         when the target file
      does not exist\n                           when running action :create\n                             creates
      the file when the :create action is run\n                             creates
      the file with the correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                     when deploying via
      destdir\n                       behaves like a configured file resource\n                         when
      the target file is a symlink\n                           when configured not
      to manage symlink's target\n                             when symlink target
      has correct content\n                               behaves like file resource
      not pointing to a real file\n                                 when force_unlink
      is set to true\n                                   :create unlinks the target\n
      \                                when force_unlink is set to false\n                                   :create
      raises an error\n                                 when force_unlink is not set
      (default)\n                                   :create raises an error\n                             when
      symlink target has the wrong content\n                               behaves
      like file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                         when the target file does not exist\n
      \                          when force_unlink is set to true\n                             :create
      updates the target\n                           when force_unlink is set to false\n
      \                            :create updates the target\n                           when
      force_unlink is not set (default)\n                             :create updates
      the target\n                         when the target file is a directory\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when notification is configured\n                           when
      path is specified with normal separator\n                             should
      notify the other resources correctly\n                           when path is
      specified with windows separator\n                             should notify
      the other resources correctly\n                         when the target file
      does not exist\n                           when running action :create\n                             creates
      the file when the :create action is run\n                             creates
      the file with the correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                   when running under
      why run\n                     and the resource has a path with a missing intermediate
      directory\n                       successfully doesn't create the file\n                   when
      setting atomic_update\n                     booleans should work\n                     anything
      else should raise an error\n                 behaves like a securable resource
      with reporting\n                   reading file security metadata for reporting
      on windows\n                     when the target file doesn't exist\n                       has
      empty values for file metadata in 'current_resource' (PENDING: windows reporting
      not yet fully supported)\n                       and no security metadata is
      specified in new_resource\n                         sets the metadata values
      on the new_resource as strings after creating (PENDING: windows reporting not
      yet fully supported)\n                       and owner is specified with a string
      (username) in new_resource\n                         sets the owner on new_resource
      to the username (string) of the desired owner\n                       and owner
      is specified with a fully qualified domain user\n                         sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                     when the target
      file exists\n                       and no security metadata is specified in
      new_resource\n                         sets the current values on current resource
      as strings (PENDING: windows reporting not yet fully supported)\n                       and
      owner is specified with a string (username) in new_resource\n                         sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                       and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                         sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                       and
      access rights are specified on the new_resource\n                         sets
      the expanded_rights on the current resource (PENDING: windows reporting not
      yet fully supported)\n                       and no access rights are specified
      on the current resource\n                         sets the expanded rights on
      the current resource (PENDING: windows reporting not yet fully supported)\n
      \              when using gzip encoding\n                 behaves like a file
      resource\n                   when deploying with :move\n                     when
      deploying via tmpdir\n                       behaves like a configured file
      resource\n                         when the target file is a symlink\n                           when
      configured not to manage symlink's target\n                             when
      symlink target has correct content\n                               behaves like
      file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                             when symlink target has the wrong
      content\n                               behaves like file resource not pointing
      to a real file\n                                 when force_unlink is set to
      true\n                                   :create unlinks the target\n                                 when
      force_unlink is set to false\n                                   :create raises
      an error\n                                 when force_unlink is not set (default)\n
      \                                  :create raises an error\n                         when
      the target file does not exist\n                           when force_unlink
      is set to true\n                             :create updates the target\n                           when
      force_unlink is set to false\n                             :create updates the
      target\n                           when force_unlink is not set (default)\n
      \                            :create updates the target\n                         when
      the target file is a directory\n                           behaves like file
      resource not pointing to a real file\n                             when force_unlink
      is set to true\n                               :create unlinks the target\n
      \                            when force_unlink is set to false\n                               :create
      raises an error\n                             when force_unlink is not set (default)\n
      \                              :create raises an error\n                         when
      notification is configured\n                           when path is specified
      with normal separator\n                             should notify the other
      resources correctly\n                           when path is specified with
      windows separator\n                             should notify the other resources
      correctly\n                         when the target file does not exist\n                           when
      running action :create\n                             creates the file when the
      :create action is run\n                             creates the file with the
      correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                     when deploying via
      destdir\n                       behaves like a configured file resource\n                         when
      the target file is a symlink\n                           when configured not
      to manage symlink's target\n                             when symlink target
      has correct content\n                               behaves like file resource
      not pointing to a real file\n                                 when force_unlink
      is set to true\n                                   :create unlinks the target\n
      \                                when force_unlink is set to false\n                                   :create
      raises an error\n                                 when force_unlink is not set
      (default)\n                                   :create raises an error\n                             when
      symlink target has the wrong content\n                               behaves
      like file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                         when the target file does not exist\n
      \                          when force_unlink is set to true\n                             :create
      updates the target\n                           when force_unlink is set to false\n
      \                            :create updates the target\n                           when
      force_unlink is not set (default)\n                             :create updates
      the target\n                         when the target file is a directory\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when notification is configured\n                           when
      path is specified with normal separator\n                             should
      notify the other resources correctly\n                           when path is
      specified with windows separator\n                             should notify
      the other resources correctly\n                         when the target file
      does not exist\n                           when running action :create\n                             creates
      the file when the :create action is run\n                             creates
      the file with the correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                   when deploying with
      :copy\n                     when deploying via tmpdir\n                       behaves
      like a configured file resource\n                         when the target file
      is a symlink\n                           when configured not to manage symlink's
      target\n                             when symlink target has correct content\n
      \                              behaves like file resource not pointing to a
      real file\n                                 when force_unlink is set to true\n
      \                                  :create unlinks the target\n                                 when
      force_unlink is set to false\n                                   :create raises
      an error\n                                 when force_unlink is not set (default)\n
      \                                  :create raises an error\n                             when
      symlink target has the wrong content\n                               behaves
      like file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                         when the target file does not exist\n
      \                          when force_unlink is set to true\n                             :create
      updates the target\n                           when force_unlink is set to false\n
      \                            :create updates the target\n                           when
      force_unlink is not set (default)\n                             :create updates
      the target\n                         when the target file is a directory\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when notification is configured\n                           when
      path is specified with normal separator\n                             should
      notify the other resources correctly\n                           when path is
      specified with windows separator\n                             should notify
      the other resources correctly\n                         when the target file
      does not exist\n                           when running action :create\n                             creates
      the file when the :create action is run\n                             creates
      the file with the correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                     when deploying via
      destdir\n                       behaves like a configured file resource\n                         when
      the target file is a symlink\n                           when configured not
      to manage symlink's target\n                             when symlink target
      has correct content\n                               behaves like file resource
      not pointing to a real file\n                                 when force_unlink
      is set to true\n                                   :create unlinks the target\n
      \                                when force_unlink is set to false\n                                   :create
      raises an error\n                                 when force_unlink is not set
      (default)\n                                   :create raises an error\n                             when
      symlink target has the wrong content\n                               behaves
      like file resource not pointing to a real file\n                                 when
      force_unlink is set to true\n                                   :create unlinks
      the target\n                                 when force_unlink is set to false\n
      \                                  :create raises an error\n                                 when
      force_unlink is not set (default)\n                                   :create
      raises an error\n                         when the target file does not exist\n
      \                          when force_unlink is set to true\n                             :create
      updates the target\n                           when force_unlink is set to false\n
      \                            :create updates the target\n                           when
      force_unlink is not set (default)\n                             :create updates
      the target\n                         when the target file is a directory\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when notification is configured\n                           when
      path is specified with normal separator\n                             should
      notify the other resources correctly\n                           when path is
      specified with windows separator\n                             should notify
      the other resources correctly\n                         when the target file
      does not exist\n                           when running action :create\n                             creates
      the file when the :create action is run\n                             creates
      the file with the correct content when the :create action is run\n                             is
      marked as updated by last action\n                           when running action
      :create_if_missing\n                             creates the file with the correct
      content\n                             is marked as updated by last action\n
      \                          when running action :delete\n                             deletes
      the file when the :delete action is run\n                             is not
      marked updated by last action\n                         behaves like a securable
      resource without existing target\n                           on Windows\n                             leaves
      owner as system default on create if owner is not specified\n                             sets
      owner when owner is specified\n                             fails to set owner
      when owner has invalid characters\n                             sets owner when
      owner is specified with a \\\n                             leaves owner alone
      if owner is not specified and resource already exists\n                             leaves
      group as system default on create if group is not specified\n                             sets
      group when group is specified\n                             fails to set group
      when group has invalid characters\n                             leaves group
      alone if group is not specified and resource already exists\n                             does
      not inherit aces if inherits is set to false\n                             has
      the inheritable acls of parent directory if no acl is specified\n                             with
      rights and deny_rights attributes\n                               correctly
      sets :read rights\n                               correctly sets :read_execute
      rights\n                               correctly sets :write rights\n                               correctly
      sets :modify rights\n                               correctly sets :full_control
      rights\n                               correctly sets deny_rights\n                               Sets
      multiple rights\n                               Sets deny_rights ahead of rights\n
      \                              Sets deny_rights ahead of rights when specified
      in reverse order\n                             with a mode attribute\n                               respects
      mode in string form as an octal number\n                               respects
      mode in numeric form as a ruby-interpreted octal\n                               respects
      the owner, group and everyone bits of mode\n                               respects
      the individual read, write and execute bits of mode\n                               warns
      when mode tries to set owner bits but owner is not specified\n                               warns
      when mode tries to set group bits but group is not specified\n                         when
      the target file has the wrong content\n                           and the target
      file has the correct permissions\n                             behaves like
      a file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the wrong content\n                               when diff is disabled\n
      \                                when running action :create\n                                   with
      backups enabled\n                                     overwrites the file with
      the updated content when the :create action is run\n                                     backs
      up the existing file\n                                     is marked as updated
      by last action\n                                   with backups disabled\n                                     should
      not attempt to backup the existing file if :backup == 0\n                                   with
      a checksum that does not match the content to deploy\n                                     raises
      an exception\n                                 when running action :create_if_missing\n
      \                                  doesn't overwrite the file when the :create_if_missing
      action is run\n                                   is not marked as updated\n
      \                                when running action :delete\n                                   deletes
      the file\n                                   is marked as updated by last action\n
      \                              when diff is enabled\n                                 sensitive
      attribute\n                                   should be insensitive by default\n
      \                                    should be falsey\n                                   when
      set\n                                     should be set on the resource\n                                     when
      running :create action\n                                       should suppress
      the diff\n                                       should still include the updated
      checksums\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the target file
      has the correct content\n                           and the target file has
      the correct permissions\n                             behaves like a file with
      the correct content\n                               when running action :create\n
      \                                does not overwrite the original when the :create
      action is run\n                                 does not update the mtime of
      the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                           and the target
      file has incorrect permissions\n                             behaves like a
      file with the correct content\n                               when running action
      :create\n                                 does not overwrite the original when
      the :create action is run\n                                 does not update
      the mtime of the file when the :create action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :create_if_missing\n                                 doesn't overwrite
      the file when the :create_if_missing action is run\n                                 is
      not marked as updated by last action\n                               when running
      action :delete\n                                 deletes the file when the :delete
      action is run\n                                 is marked as updated by last
      action\n                             behaves like a securable resource with
      existing target\n                               on Windows\n                                 when
      setting owner\n                                   should set the owner\n                                   is
      marked as updated only if changes are made\n                                 when
      setting group\n                                   should set the group\n                                   is
      marked as updated only if changes are made\n                                 when
      setting rights and deny_rights\n                                   should set
      the rights and deny_rights\n                                   is marked as
      updated only if changes are made\n                         when the path starts
      with '/' and target file exists\n                           :create action should
      run without any updates\n                             does not overwrite the
      original when the :create action is run\n                             does not
      update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                   when running under
      why run\n                     and the resource has a path with a missing intermediate
      directory\n                       successfully doesn't create the file\n                   when
      setting atomic_update\n                     booleans should work\n                     anything
      else should raise an error\n                 behaves like a securable resource
      with reporting\n                   reading file security metadata for reporting
      on windows\n                     when the target file doesn't exist\n                       has
      empty values for file metadata in 'current_resource' (PENDING: windows reporting
      not yet fully supported)\n                       and no security metadata is
      specified in new_resource\n                         sets the metadata values
      on the new_resource as strings after creating (PENDING: windows reporting not
      yet fully supported)\n                       and owner is specified with a string
      (username) in new_resource\n                         sets the owner on new_resource
      to the username (string) of the desired owner\n                       and owner
      is specified with a fully qualified domain user\n                         sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                     when the target
      file exists\n                       and no security metadata is specified in
      new_resource\n                         sets the current values on current resource
      as strings (PENDING: windows reporting not yet fully supported)\n                       and
      owner is specified with a string (username) in new_resource\n                         sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                       and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                         sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                       and
      access rights are specified on the new_resource\n                         sets
      the expanded_rights on the current resource (PENDING: windows reporting not
      yet fully supported)\n                       and no access rights are specified
      on the current resource\n                         sets the expanded rights on
      the current resource (PENDING: windows reporting not yet fully supported)\n
      \            when fetching files over HTTPS\n           [2016-06-17 21:17:12]
      ERROR OpenSSL::SSL::SSLError: SSL_accept returned=1 errno=0 state=SSLv2/v3 read
      client hello A: http request\n             c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in
      `accept'\n           [2016-06-17 21:17:12] ERROR OpenSSL::SSL::SSLError: SSL_accept
      returned=1 errno=0 state=SSLv2/v3 read client hello A: http request\n             c:/opscode/chef/embedded/lib/ruby/2.1.0/openssl/ssl.rb:306:in
      `accept'\n               behaves like a file resource\n                 when
      deploying with :move\n                   when deploying via tmpdir\n                     behaves
      like a configured file resource\n                       when the target file
      is a symlink\n                         when configured not to manage symlink's
      target\n                           when symlink target has correct content\n
      \                            behaves like file resource not pointing to a real
      file\n                               when force_unlink is set to true\n                                 :create
      unlinks the target\n                               when force_unlink is set
      to false\n                                 :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when symlink target has the wrong
      content\n                             behaves like file resource not pointing
      to a real file\n                               when force_unlink is set to true\n
      \                                :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                       when
      the target file does not exist\n                         when force_unlink is
      set to true\n                           :create updates the target\n                         when
      force_unlink is set to false\n                           :create updates the
      target\n                         when force_unlink is not set (default)\n                           :create
      updates the target\n                       when the target file is a directory\n
      \                        behaves like file resource not pointing to a real file\n
      \                          when force_unlink is set to true\n                             :create
      unlinks the target\n                           when force_unlink is set to false\n
      \                            :create raises an error\n                           when
      force_unlink is not set (default)\n                             :create raises
      an error\n                       when notification is configured\n                         when
      path is specified with normal separator\n                           should notify
      the other resources correctly\n                         when path is specified
      with windows separator\n                           should notify the other resources
      correctly\n                       when the target file does not exist\n                         when
      running action :create\n                           creates the file when the
      :create action is run\n                           creates the file with the
      correct content when the :create action is run\n                           is
      marked as updated by last action\n                         when running action
      :create_if_missing\n                           creates the file with the correct
      content\n                           is marked as updated by last action\n                         when
      running action :delete\n                           deletes the file when the
      :delete action is run\n                           is not marked updated by last
      action\n                       behaves like a securable resource without existing
      target\n                         on Windows\n                           leaves
      owner as system default on create if owner is not specified\n                           sets
      owner when owner is specified\n                           fails to set owner
      when owner has invalid characters\n                           sets owner when
      owner is specified with a \\\n                           leaves owner alone
      if owner is not specified and resource already exists\n                           leaves
      group as system default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                   when deploying via destdir\n
      \                    behaves like a configured file resource\n                       when
      the target file is a symlink\n                         when configured not to
      manage symlink's target\n                           when symlink target has
      correct content\n                             behaves like file resource not
      pointing to a real file\n                               when force_unlink is
      set to true\n                                 :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                           when
      symlink target has the wrong content\n                             behaves like
      file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                       when the target file does not exist\n
      \                        when force_unlink is set to true\n                           :create
      updates the target\n                         when force_unlink is set to false\n
      \                          :create updates the target\n                         when
      force_unlink is not set (default)\n                           :create updates
      the target\n                       when the target file is a directory\n                         behaves
      like file resource not pointing to a real file\n                           when
      force_unlink is set to true\n                             :create unlinks the
      target\n                           when force_unlink is set to false\n                             :create
      raises an error\n                           when force_unlink is not set (default)\n
      \                            :create raises an error\n                       when
      notification is configured\n                         when path is specified
      with normal separator\n                           should notify the other resources
      correctly\n                         when path is specified with windows separator\n
      \                          should notify the other resources correctly\n                       when
      the target file does not exist\n                         when running action
      :create\n                           creates the file when the :create action
      is run\n                           creates the file with the correct content
      when the :create action is run\n                           is marked as updated
      by last action\n                         when running action :create_if_missing\n
      \                          creates the file with the correct content\n                           is
      marked as updated by last action\n                         when running action
      :delete\n                           deletes the file when the :delete action
      is run\n                           is not marked updated by last action\n                       behaves
      like a securable resource without existing target\n                         on
      Windows\n                           leaves owner as system default on create
      if owner is not specified\n                           sets owner when owner
      is specified\n                           fails to set owner when owner has invalid
      characters\n                           sets owner when owner is specified with
      a \\\n                           leaves owner alone if owner is not specified
      and resource already exists\n                           leaves group as system
      default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                 when deploying with :copy\n
      \                  when deploying via tmpdir\n                     behaves like
      a configured file resource\n                       when the target file is a
      symlink\n                         when configured not to manage symlink's target\n
      \                          when symlink target has correct content\n                             behaves
      like file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                           when symlink target has the wrong
      content\n                             behaves like file resource not pointing
      to a real file\n                               when force_unlink is set to true\n
      \                                :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                       when
      the target file does not exist\n                         when force_unlink is
      set to true\n                           :create updates the target\n                         when
      force_unlink is set to false\n                           :create updates the
      target\n                         when force_unlink is not set (default)\n                           :create
      updates the target\n                       when the target file is a directory\n
      \                        behaves like file resource not pointing to a real file\n
      \                          when force_unlink is set to true\n                             :create
      unlinks the target\n                           when force_unlink is set to false\n
      \                            :create raises an error\n                           when
      force_unlink is not set (default)\n                             :create raises
      an error\n                       when notification is configured\n                         when
      path is specified with normal separator\n                           should notify
      the other resources correctly\n                         when path is specified
      with windows separator\n                           should notify the other resources
      correctly\n                       when the target file does not exist\n                         when
      running action :create\n                           creates the file when the
      :create action is run\n                           creates the file with the
      correct content when the :create action is run\n                           is
      marked as updated by last action\n                         when running action
      :create_if_missing\n                           creates the file with the correct
      content\n                           is marked as updated by last action\n                         when
      running action :delete\n                           deletes the file when the
      :delete action is run\n                           is not marked updated by last
      action\n                       behaves like a securable resource without existing
      target\n                         on Windows\n                           leaves
      owner as system default on create if owner is not specified\n                           sets
      owner when owner is specified\n                           fails to set owner
      when owner has invalid characters\n                           sets owner when
      owner is specified with a \\\n                           leaves owner alone
      if owner is not specified and resource already exists\n                           leaves
      group as system default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                   when deploying via destdir\n
      \                    behaves like a configured file resource\n                       when
      the target file is a symlink\n                         when configured not to
      manage symlink's target\n                           when symlink target has
      correct content\n                             behaves like file resource not
      pointing to a real file\n                               when force_unlink is
      set to true\n                                 :create unlinks the target\n                               when
      force_unlink is set to false\n                                 :create raises
      an error\n                               when force_unlink is not set (default)\n
      \                                :create raises an error\n                           when
      symlink target has the wrong content\n                             behaves like
      file resource not pointing to a real file\n                               when
      force_unlink is set to true\n                                 :create unlinks
      the target\n                               when force_unlink is set to false\n
      \                                :create raises an error\n                               when
      force_unlink is not set (default)\n                                 :create
      raises an error\n                       when the target file does not exist\n
      \                        when force_unlink is set to true\n                           :create
      updates the target\n                         when force_unlink is set to false\n
      \                          :create updates the target\n                         when
      force_unlink is not set (default)\n                           :create updates
      the target\n                       when the target file is a directory\n                         behaves
      like file resource not pointing to a real file\n                           when
      force_unlink is set to true\n                             :create unlinks the
      target\n                           when force_unlink is set to false\n                             :create
      raises an error\n                           when force_unlink is not set (default)\n
      \                            :create raises an error\n                       when
      notification is configured\n                         when path is specified
      with normal separator\n                           should notify the other resources
      correctly\n                         when path is specified with windows separator\n
      \                          should notify the other resources correctly\n                       when
      the target file does not exist\n                         when running action
      :create\n                           creates the file when the :create action
      is run\n                           creates the file with the correct content
      when the :create action is run\n                           is marked as updated
      by last action\n                         when running action :create_if_missing\n
      \                          creates the file with the correct content\n                           is
      marked as updated by last action\n                         when running action
      :delete\n                           deletes the file when the :delete action
      is run\n                           is not marked updated by last action\n                       behaves
      like a securable resource without existing target\n                         on
      Windows\n                           leaves owner as system default on create
      if owner is not specified\n                           sets owner when owner
      is specified\n                           fails to set owner when owner has invalid
      characters\n                           sets owner when owner is specified with
      a \\\n                           leaves owner alone if owner is not specified
      and resource already exists\n                           leaves group as system
      default on create if group is not specified\n                           sets
      group when group is specified\n                           fails to set group
      when group has invalid characters\n                           leaves group alone
      if group is not specified and resource already exists\n                           does
      not inherit aces if inherits is set to false\n                           has
      the inheritable acls of parent directory if no acl is specified\n                           with
      rights and deny_rights attributes\n                             correctly sets
      :read rights\n                             correctly sets :read_execute rights\n
      \                            correctly sets :write rights\n                             correctly
      sets :modify rights\n                             correctly sets :full_control
      rights\n                             correctly sets deny_rights\n                             Sets
      multiple rights\n                             Sets deny_rights ahead of rights\n
      \                            Sets deny_rights ahead of rights when specified
      in reverse order\n                           with a mode attribute\n                             respects
      mode in string form as an octal number\n                             respects
      mode in numeric form as a ruby-interpreted octal\n                             respects
      the owner, group and everyone bits of mode\n                             respects
      the individual read, write and execute bits of mode\n                             warns
      when mode tries to set owner bits but owner is not specified\n                             warns
      when mode tries to set group bits but group is not specified\n                       when
      the target file has the wrong content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                         and the
      target file has incorrect permissions\n                           behaves like
      a file with the wrong content\n                             when diff is disabled\n
      \                              when running action :create\n                                 with
      backups enabled\n                                   overwrites the file with
      the updated content when the :create action is run\n                                   backs
      up the existing file\n                                   is marked as updated
      by last action\n                                 with backups disabled\n                                   should
      not attempt to backup the existing file if :backup == 0\n                                 with
      a checksum that does not match the content to deploy\n                                   raises
      an exception\n                               when running action :create_if_missing\n
      \                                doesn't overwrite the file when the :create_if_missing
      action is run\n                                 is not marked as updated\n                               when
      running action :delete\n                                 deletes the file\n
      \                                is marked as updated by last action\n                             when
      diff is enabled\n                               sensitive attribute\n                                 should
      be insensitive by default\n                                   should be falsey\n
      \                                when set\n                                   should
      be set on the resource\n                                   when running :create
      action\n                                     should suppress the diff\n                                     should
      still include the updated checksums\n                           behaves like
      a securable resource with existing target\n                             on Windows\n
      \                              when setting owner\n                                 should
      set the owner\n                                 is marked as updated only if
      changes are made\n                               when setting group\n                                 should
      set the group\n                                 is marked as updated only if
      changes are made\n                               when setting rights and deny_rights\n
      \                                should set the rights and deny_rights\n                                 is
      marked as updated only if changes are made\n                       when the
      target file has the correct content\n                         and the target
      file has the correct permissions\n                           behaves like a
      file with the correct content\n                             when running action
      :create\n                               does not overwrite the original when
      the :create action is run\n                               does not update the
      mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                         and the target file has incorrect
      permissions\n                           behaves like a file with the correct
      content\n                             when running action :create\n                               does
      not overwrite the original when the :create action is run\n                               does
      not update the mtime of the file when the :create action is run\n                               is
      not marked as updated by last action\n                             when running
      action :create_if_missing\n                               doesn't overwrite
      the file when the :create_if_missing action is run\n                               is
      not marked as updated by last action\n                             when running
      action :delete\n                               deletes the file when the :delete
      action is run\n                               is marked as updated by last action\n
      \                          behaves like a securable resource with existing target\n
      \                            on Windows\n                               when
      setting owner\n                                 should set the owner\n                                 is
      marked as updated only if changes are made\n                               when
      setting group\n                                 should set the group\n                                 is
      marked as updated only if changes are made\n                               when
      setting rights and deny_rights\n                                 should set
      the rights and deny_rights\n                                 is marked as updated
      only if changes are made\n                       when the path starts with '/'
      and target file exists\n                         :create action should run without
      any updates\n                           does not overwrite the original when
      the :create action is run\n                           does not update the mtime
      of the file when the :create action is run\n                           is not
      marked as updated by last action\n                 when running under why run\n
      \                  and the resource has a path with a missing intermediate directory\n
      \                    successfully doesn't create the file\n                 when
      setting atomic_update\n                   booleans should work\n                   anything
      else should raise an error\n             when dealing with content length checking\n
      \              when downloading compressed data\n                 should create
      the file\n                 should mark the resource as updated\n                 has
      the correct content\n               when downloding uncompressed data\n                 should
      create the file\n                 should mark the resource as updated\n                 has
      the correct content\n               when downloading truncated compressed data\n
      \                should raise ContentLengthMismatch\n               when downloding
      truncated uncompressed data\n                 should raise ContentLengthMismatch\n
      \              when downloding data with transfer-encoding set\n                 should
      create the file\n                 should mark the resource as updated\n                 has
      the correct content\n               when the download of the source raises an
      exception\n                 should not create the file\n\n           Chef::Resource::Template\n
      \            behaves like a file resource\n               when deploying with
      :move\n                 when deploying via tmpdir\n                   behaves
      like a configured file resource\n                     when the target file is
      a symlink\n                       when configured not to manage symlink's target\n
      \                        when symlink target has correct content\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when symlink target has the wrong content\n
      \                          behaves like file resource not pointing to a real
      file\n                             when force_unlink is set to true\n                               :create
      unlinks the target\n                             when force_unlink is set to
      false\n                               :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n                 when deploying via destdir\n                   behaves
      like a configured file resource\n                     when the target file is
      a symlink\n                       when configured not to manage symlink's target\n
      \                        when symlink target has correct content\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when symlink target has the wrong content\n
      \                          behaves like file resource not pointing to a real
      file\n                             when force_unlink is set to true\n                               :create
      unlinks the target\n                             when force_unlink is set to
      false\n                               :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n               when deploying with :copy\n                 when
      deploying via tmpdir\n                   behaves like a configured file resource\n
      \                    when the target file is a symlink\n                       when
      configured not to manage symlink's target\n                         when symlink
      target has correct content\n                           behaves like file resource
      not pointing to a real file\n                             when force_unlink
      is set to true\n                               :create unlinks the target\n
      \                            when force_unlink is set to false\n                               :create
      raises an error\n                             when force_unlink is not set (default)\n
      \                              :create raises an error\n                         when
      symlink target has the wrong content\n                           behaves like
      file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n                 when deploying via destdir\n                   behaves
      like a configured file resource\n                     when the target file is
      a symlink\n                       when configured not to manage symlink's target\n
      \                        when symlink target has correct content\n                           behaves
      like file resource not pointing to a real file\n                             when
      force_unlink is set to true\n                               :create unlinks
      the target\n                             when force_unlink is set to false\n
      \                              :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                         when symlink target has the wrong content\n
      \                          behaves like file resource not pointing to a real
      file\n                             when force_unlink is set to true\n                               :create
      unlinks the target\n                             when force_unlink is set to
      false\n                               :create raises an error\n                             when
      force_unlink is not set (default)\n                               :create raises
      an error\n                     when the target file does not exist\n                       when
      force_unlink is set to true\n                         :create updates the target\n
      \                      when force_unlink is set to false\n                         :create
      updates the target\n                       when force_unlink is not set (default)\n
      \                        :create updates the target\n                     when
      the target file is a directory\n                       behaves like file resource
      not pointing to a real file\n                         when force_unlink is set
      to true\n                           :create unlinks the target\n                         when
      force_unlink is set to false\n                           :create raises an error\n
      \                        when force_unlink is not set (default)\n                           :create
      raises an error\n                     when notification is configured\n                       when
      path is specified with normal separator\n                         should notify
      the other resources correctly\n                       when path is specified
      with windows separator\n                         should notify the other resources
      correctly\n                     when the target file does not exist\n                       when
      running action :create\n                         creates the file when the :create
      action is run\n                         creates the file with the correct content
      when the :create action is run\n                         is marked as updated
      by last action\n                       when running action :create_if_missing\n
      \                        creates the file with the correct content\n                         is
      marked as updated by last action\n                       when running action
      :delete\n                         deletes the file when the :delete action is
      run\n                         is not marked updated by last action\n                     behaves
      like a securable resource without existing target\n                       on
      Windows\n                         leaves owner as system default on create if
      owner is not specified\n                         sets owner when owner is specified\n
      \                        fails to set owner when owner has invalid characters\n
      \                        sets owner when owner is specified with a \\\n                         leaves
      owner alone if owner is not specified and resource already exists\n                         leaves
      group as system default on create if group is not specified\n                         sets
      group when group is specified\n                         fails to set group when
      group has invalid characters\n                         leaves group alone if
      group is not specified and resource already exists\n                         does
      not inherit aces if inherits is set to false\n                         has the
      inheritable acls of parent directory if no acl is specified\n                         with
      rights and deny_rights attributes\n                           correctly sets
      :read rights\n                           correctly sets :read_execute rights\n
      \                          correctly sets :write rights\n                           correctly
      sets :modify rights\n                           correctly sets :full_control
      rights\n                           correctly sets deny_rights\n                           Sets
      multiple rights\n                           Sets deny_rights ahead of rights\n
      \                          Sets deny_rights ahead of rights when specified in
      reverse order\n                         with a mode attribute\n                           respects
      mode in string form as an octal number\n                           respects
      mode in numeric form as a ruby-interpreted octal\n                           respects
      the owner, group and everyone bits of mode\n                           respects
      the individual read, write and execute bits of mode\n                           warns
      when mode tries to set owner bits but owner is not specified\n                           warns
      when mode tries to set group bits but group is not specified\n                     when
      the target file has the wrong content\n                       and the target
      file has the correct permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                       and the target
      file has incorrect permissions\n                         behaves like a file
      with the wrong content\n                           when diff is disabled\n                             when
      running action :create\n                               with backups enabled\n
      \                                overwrites the file with the updated content
      when the :create action is run\n                                 backs up the
      existing file\n                                 is marked as updated by last
      action\n                               with backups disabled\n                                 should
      not attempt to backup the existing file if :backup == 0\n                               with
      a checksum that does not match the content to deploy\n                                 raises
      an exception\n                             when running action :create_if_missing\n
      \                              doesn't overwrite the file when the :create_if_missing
      action is run\n                               is not marked as updated\n                             when
      running action :delete\n                               deletes the file\n                               is
      marked as updated by last action\n                           when diff is enabled\n
      \                            sensitive attribute\n                               should
      be insensitive by default\n                                 should be falsey\n
      \                              when set\n                                 should
      be set on the resource\n                                 when running :create
      action\n                                   should suppress the diff\n                                   should
      still include the updated checksums\n                         behaves like a
      securable resource with existing target\n                           on Windows\n
      \                            when setting owner\n                               should
      set the owner\n                               is marked as updated only if changes
      are made\n                             when setting group\n                               should
      set the group\n                               is marked as updated only if changes
      are made\n                             when setting rights and deny_rights\n
      \                              should set the rights and deny_rights\n                               is
      marked as updated only if changes are made\n                     when the target
      file has the correct content\n                       and the target file has
      the correct permissions\n                         behaves like a file with the
      correct content\n                           when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                       and the target file has incorrect
      permissions\n                         behaves like a file with the correct content\n
      \                          when running action :create\n                             does
      not overwrite the original when the :create action is run\n                             does
      not update the mtime of the file when the :create action is run\n                             is
      not marked as updated by last action\n                           when running
      action :create_if_missing\n                             doesn't overwrite the
      file when the :create_if_missing action is run\n                             is
      not marked as updated by last action\n                           when running
      action :delete\n                             deletes the file when the :delete
      action is run\n                             is marked as updated by last action\n
      \                        behaves like a securable resource with existing target\n
      \                          on Windows\n                             when setting
      owner\n                               should set the owner\n                               is
      marked as updated only if changes are made\n                             when
      setting group\n                               should set the group\n                               is
      marked as updated only if changes are made\n                             when
      setting rights and deny_rights\n                               should set the
      rights and deny_rights\n                               is marked as updated
      only if changes are made\n                     when the path starts with '/'
      and target file exists\n                       :create action should run without
      any updates\n                         does not overwrite the original when the
      :create action is run\n                         does not update the mtime of
      the file when the :create action is run\n                         is not marked
      as updated by last action\n               when running under why run\n                 and
      the resource has a path with a missing intermediate directory\n                   successfully
      doesn't create the file\n               when setting atomic_update\n                 booleans
      should work\n                 anything else should raise an error\n             behaves
      like a securable resource with reporting\n               reading file security
      metadata for reporting on windows\n                 when the target file doesn't
      exist\n                   has empty values for file metadata in 'current_resource'
      (PENDING: windows reporting not yet fully supported)\n                   and
      no security metadata is specified in new_resource\n                     sets
      the metadata values on the new_resource as strings after creating (PENDING:
      windows reporting not yet fully supported)\n                   and owner is
      specified with a string (username) in new_resource\n                     sets
      the owner on new_resource to the username (string) of the desired owner\n                   and
      owner is specified with a fully qualified domain user\n                     sets
      the owner on new_resource to the fully qualified name of the desired owner (PENDING:
      windows reporting not yet fully supported)\n                 when the target
      file exists\n                   and no security metadata is specified in new_resource\n
      \                    sets the current values on current resource as strings
      (PENDING: windows reporting not yet fully supported)\n                   and
      owner is specified with a string (username) in new_resource\n                     sets
      the owner on current_resource to the username (string) of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                   and
      owner is specified as a fully qualified 'domain\\user' in new_resource\n                     sets
      the owner on current_resource to the fully qualified name of the desired owner
      (PENDING: windows reporting not yet fully supported)\n                   and
      access rights are specified on the new_resource\n                     sets the
      expanded_rights on the current resource (PENDING: windows reporting not yet
      fully supported)\n                   and no access rights are specified on the
      current resource\n                     sets the expanded rights on the current
      resource (PENDING: windows reporting not yet fully supported)\n             when
      the target file does not exist\n               creates the template with the
      rendered content using the variable attribute when the :create action is run\n
      \              creates the template with the rendered content using a local
      erb file when the :create action is run\n             when the template resource
      defines helper methods\n               using single helper syntax\n                 behaves
      like a template with helpers\n                   generates expected content
      by calling helper methods\n               using single helper syntax referencing
      @node\n                 behaves like a template with helpers\n                   generates
      expected content by calling helper methods\n               using an inline block
      to define helpers\n                 behaves like a template with helpers\n                   generates
      expected content by calling helper methods\n               using an inline block
      referencing @node\n                 behaves like a template with helpers\n                   generates
      expected content by calling helper methods\n               using a module from
      a library\n                 behaves like a template with helpers\n                   generates
      expected content by calling helper methods\n               using a module from
      a library referencing @node\n                 behaves like a template with helpers\n
      \                  generates expected content by calling helper methods\n               using
      helpers with partial templates\n                 behaves like a template with
      helpers\n                   generates expected content by calling helper methods\n
      \            when template source contains windows style line endings\n               for
      all lines\n                 output should contain platform's line endings\n
      \              for some lines\n                 output should contain platform's
      line endings\n               for no lines\n                 output should contain
      platform's line endings\n\n           Chef::Provider::User::Windows\n             action
      :create\n               creates a user when a username and password are given\n
      \              reports no changes if there are no changes needed\n               allows
      chaning the password\n               with a gid specified\n                 warns
      unsupported\n             action :remove\n               deletes the user\n
      \              is idempotent\n             action :lock\n               locks
      the user account\n               is idempotent\n             action :unlock\n
      \              unlocks the user account\n               is idempotent\n\n           Chef::REST\n
      \            behaves like downloading all the things\n               when downloading
      a simple uncompressed file\n                 behaves like downloads requests
      correctly\n                   successfully downloads a streaming request\n                   successfully
      downloads a GET request\n               when downloading a compressed file that
      should be left compressed\n                 behaves like downloads requests
      correctly\n                   successfully downloads a streaming request\n                   successfully
      downloads a GET request\n               when downloading a file that has been
      compressed by the webserver\n                 behaves like downloads requests
      correctly\n                   successfully downloads a streaming request\n                   successfully
      downloads a GET request\n               when downloading an uncompressed file
      with a correct content_length\n                 behaves like downloads requests
      correctly\n                   successfully downloads a streaming request\n                   successfully
      downloads a GET request\n               when downloading a file that has been
      compressed by the webserver with a correct content_length\n                 behaves
      like downloads requests correctly\n                   successfully downloads
      a streaming request\n                   successfully downloads a GET request\n
      \              when downloading an uncompressed file that is truncated\n                 behaves
      like validates content length and throws an exception\n                   fails
      validation on a streaming download\n                   fails validation on a
      GET request\n               when downloading a file that has been compressed
      by the webserver that is truncated\n                 behaves like validates
      content length and throws an exception\n                   fails validation
      on a streaming download\n                   fails validation on a GET request\n
      \              when downloading a file that has transfer encoding set with a
      bad content length that should be ignored\n                 behaves like downloads
      requests correctly\n                   successfully downloads a streaming request\n
      \                  successfully downloads a GET request\n               when
      downloading an endpoint that 403s\n                 behaves like an endpoint
      that 403s\n                   fails with a Net::HTTPServerException on a streaming
      download\n                   fails with a Net::HTTPServerException on a GET
      request\n               when downloading an endpoint that 403s\n                 behaves
      like a 403 after a successful request when reusing the request object\n                   fails
      with a Net::HTTPServerException on a streaming download\n                   fails
      with a Net::HTTPServerException on a GET request\n\n           TinyServer::API\n
      \            is a Singleton\n             clears the router\n             creates
      a route for a GET request\n             creates a route for a request with a
      block\n             returns debugging info for 404s\n\n           TinyServer::Manager\n
      \            runs the server\n\n           ChefConfig::PathHelper escape_glob\n
      \            escapes the glob metacharacters so globbing succeeds\n\n           Chef::Util::Powershell::Cmdlet\n
      \            executes a simple process\n             #run does not raise a PowershellCmdletException
      exception if the command cannot be executed\n             #run! raises a PowershellCmdletException
      exception if the command cannot be executed\n             executes a 64-bit
      command on a 64-bit OS, 32-bit otherwise\n             passes command line switches
      to the command\n             passes command line arguments to the command\n
      \            passes command line arguments and switches to the command\n             passes
      execution options to the command\n             when returning json\n               returns
      json format data\n             when returning Ruby objects\n               returns
      object format data\n             when constructor is given invalid arguments\n
      \              throws an exception if an invalid format is passed to the constructor\n\n
      \          Chef Versions\n             chef-client version should be sane\n
      \            chef-shell version should be sane\n             chef-apply version
      should be sane\n             knife version should be sane\n             chef-solo
      version should be sane\n\n           Chef::ReservedNames::Win32::Crypto\n             #encrypt\n
      \              can be decrypted by powershell\n\n           Chef::Win32::Registry\n
      \            hive_exists?\n               returns true if the hive exists\n
      \              returns false if the hive does not exist\n             key_exists?\n
      \              returns true if the key path exists\n               returns false
      if the key path does not exist\n               throws an exception if the hive
      does not exist\n             key_exists!\n               returns true if the
      key path exists\n               throws an exception if the key path does not
      exist\n               throws an exception if the hive does not exist\n             value_exists?\n
      \              throws an exception if the hive does not exist\n               throws
      an exception if the key does not exist\n               returns true if the value
      exists\n               returns true if the value exists with a case mismatch
      on the value name\n               returns false if the value does not exist\n
      \            value_exists!\n               throws an exception if the hive does
      not exist\n               throws an exception if the key does not exist\n               returns
      true if the value exists\n               returns true if the value exists with
      a case mismatch on the value name\n               throws an exception if the
      value does not exist\n             data_exists?\n               throws an exception
      if the hive does not exist\n               throws an exception if the key does
      not exist\n               returns true if all the data matches\n               returns
      true if all the data matches with a case mismatch on the data name\n               returns
      false if the name does not exist\n               returns false if the types
      do not match\n               returns false if the data does not match\n             data_exists!\n
      \              throws an exception if the hive does not exist\n               throws
      an exception if the key does not exist\n               returns true if all the
      data matches\n               returns true if all the data matches with a case
      mismatch on the data name\n               throws an exception if the name does
      not exist\n               throws an exception if the types do not match\n               throws
      an exception if the data does not match\n             get_values\n               returns
      all values for a key if it exists\n               throws an exception if the
      key does not exist\n               throws an exception if the hive does not
      exist\n             set_value\n               updates a value if the key, value
      exist and type matches and value different\n               updates a value if
      the type does match and the values are different\n               creates a value
      if key exists and value does not\n               does nothing if data,type and
      name parameters for the value are same\n               throws an exception if
      the key does not exist\n               throws an exception if the hive does
      not exist\n               casts an integer string given as a dword into an integer\n
      \              casts a nonsense string given as a dword into zero\n               throws
      an exception when trying to cast an array to an int for a dword\n               stores
      the string representation of an array into a string if you pass it an array\n
      \              stores the string representation of a number into a string if
      you pass it an number\n               throws an exception when a multi-string
      is passed a number\n               throws an exception when a multi-string is
      passed a string\n             create_key\n               throws an exception
      if the path has missing keys but recursive set to false\n               creates
      the key_path if the keys were missing but recursive was set to true\n               does
      nothing if the key already exists\n               throws an exception of the
      hive does not exist\n             delete_value\n               deletes values
      if the value exists\n               does nothing if value does not exist\n               throws
      an exception if the key does not exist?\n               throws an exception
      if the hive does not exist\n             delete_key\n               deletes
      a key if it has no subkeys\n               throws an exception if key to delete
      has subkeys and recursive is false\n               deletes a key if it has subkeys
      and recursive true\n               does nothing if the key does not exist\n
      \              throws an exception if the hive does not exist\n             has_subkeys?\n
      \              throws an exception if the hive was missing\n               throws
      an exception if the key is missing\n               returns true if the key has
      subkeys\n               returns false if the key has no subkeys\n             get_subkeys\n
      \              throws an exception if the key is missing\n               throws
      an exception if the hive does not exist\n               returns the array of
      subkeys for a given key\n             architecture\n               on 32-bit\n
      \                registry constructor\n                   throws an exception
      if requested architecture is 64bit but running on 32bit\n                   can
      correctly set the requested architecture to 32-bit\n                   can correctly
      set the requested architecture to :machine\n                 architecture setter\n
      \                  throws an exception if requested architecture is 64bit but
      running on 32bit\n                   sets the requested architecture to :machine
      if passed :machine\n                   sets the requested architecture to 32-bit
      if passed i386 as a string\n               on 64-bit\n                 registry
      constructor\n                   can correctly set the requested architecture
      to 32-bit\n                   can correctly set the requested architecture to
      64-bit\n                   can correctly set the requested architecture to :machine\n
      \                architecture setter\n                   sets the requested
      architecture to 64-bit if passed 64-bit\n                   sets the requested
      architecture to :machine if passed :machine\n                   sets the requested
      architecture to 32-bit if passed 32-bit\n               when running on an actual
      64-bit server\n                 key_exists?\n                   does not find
      64-bit keys in the 32-bit registry\n                   finds 32-bit keys in
      the 32-bit registry\n                   does not find 32-bit keys in the 64-bit
      registry\n                   finds 64-bit keys in the 64-bit registry\n                 value_exists?\n
      \                  does not find 64-bit values in the 32-bit registry\n                   finds
      32-bit values in the 32-bit registry\n                   does not find 32-bit
      values in the 64-bit registry\n                   finds 64-bit values in the
      64-bit registry\n                 data_exists?\n                   does not
      find 64-bit keys in the 32-bit registry\n                   finds 32-bit keys
      in the 32-bit registry\n                   does not find 32-bit keys in the
      64-bit registry\n                   finds 64-bit keys in the 64-bit registry\n
      \                create_key\n                   can create a 32-bit only registry
      key\n                   can create a 64-bit only registry key\n\n           Chef::Win32::Security\n
      \            has_admin_privileges? returns true when running as admin\n             has_admin_privileges?
      returns false when running as non-admin (PENDING: requires user support in mixlib-shellout)\n
      \            get_file_security\n               should return a security descriptor
      when called with a path that exists\n             access_check\n               should
      check if the provided token has the desired access\n             Chef::Win32::Security::Token\n
      \              with all rights\n                 can duplicate a token\n               with
      read only rights\n                 raises an exception when trying to duplicate\n\n
      \          Chef::ReservedNames::Win32::SID\n             should resolve default_security_object_group
      as a sane user group\n             running as an elevated administrator user\n
      \              should resolve default_security_object_owner as the Administrators
      group\n             running as a non-elevated administrator user\n               should
      resolve default_security_object_owner as the current user (PENDING: requires
      user support in mixlib-shellout, see security_spec.rb)\n             running
      as a non-elevated, non-administrator user\n               should resolve default_security_object_owner
      as the current user (PENDING: requires user support in mixlib-shellout, see
      security_spec.rb)\n\n           Chef::ReservedNames::Win32::File::VersionInfo\n
      \            file version has the same version as windows\n             product
      version has the same version as windows\n             company is microsoft\n
      \            file description is command processor\n\n           Chef::ReservedNames::Win32::Version\n
      \            Win32 version object\n               should have have one method
      for each marketing version\n               should only contain version methods
      with legal method names\n               should have exactly one method that
      returns true\n               should successfully execute all version methods\n
      \            Windows Operating System version\n               should match the
      version from WMI\n\n           Pending: (Failures listed here are expected and
      do not affect your suite's status)\n\n             1) Chef::Audit::RspecFormatter
      should not close the output using our formatter\n                # This spec
      requires forking to work properly, and your platform does not support forking\n
      \               # ./spec/functional/audit/rspec_formatter_spec.rb:44\n\n             2)
      Chef::Audit::Runner#run log location is stdout Correctly runs an empty controls
      block\n                # This spec requires forking to work properly, and your
      platform does not support forking\n                # ./spec/functional/audit/runner_spec.rb:88\n\n
      \            3) Chef::Audit::Runner#run log location is stdout there is a single
      successful control correctly runs\n                # This spec requires forking
      to work properly, and your platform does not support forking\n                #
      ./spec/functional/audit/runner_spec.rb:96\n\n             4) Chef::Audit::Runner#run
      log location is stdout there is a single failing control correctly runs\n                #
      This spec requires forking to work properly, and your platform does not support
      forking\n                # ./spec/functional/audit/runner_spec.rb:107\n\n             5)
      Chef::DSL::RebootPending reboot_pending? HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Component
      Based Servicing\\RebootRequired returns true if the registry key exists\n                #
      Permissions are limited to 'TrustedInstaller' by default\n                Failure/Error:
      registry.create_key(reg_key, false)\n\n                Win32::Registry::Error:\n
      \                 Access is denied.\n                # ./lib/chef/win32/registry.rb:120:in
      `create_key'\n                # ./spec/functional/dsl/reboot_pending_spec.rb:69:in
      `block (4 levels) in <top (required)>'\n\n             6) Chef::Resource::CookbookFile
      behaves like a securable resource with reporting reading file security metadata
      for reporting on windows when the target file doesn't exist has empty values
      for file metadata in 'current_resource'\n                # windows reporting
      not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \            7) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and no security metadata is specified in new_resource
      sets the metadata values on the new_resource as strings after creating\n                #
      windows reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \            8) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and owner is specified with a fully qualified
      domain user sets the owner on new_resource to the fully qualified name of the
      desired owner\n                # windows reporting not yet fully supported\n
      \               # ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \            9) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no security metadata is specified in new_resource
      sets the current values on current resource as strings\n                # windows
      reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \            10) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified with a string (username) in new_resource
      sets the owner on current_resource to the username (string) of the desired owner\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \            11) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified as a fully qualified 'domain\\user'
      in new_resource sets the owner on current_resource to the fully qualified name
      of the desired owner\n                # windows reporting not yet fully supported\n
      \               # ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \            12) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and access rights are specified on the new_resource sets
      the expanded_rights on the current resource\n                # windows reporting
      not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \            13) Chef::Resource::CookbookFile behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no access rights are specified on the current resource
      sets the expanded rights on the current resource\n                # windows
      reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \            14) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist has empty values for file metadata in 'current_resource'\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \            15) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and no security metadata is specified in new_resource
      sets the metadata values on the new_resource as strings after creating\n                #
      windows reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \            16) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and owner is specified with a fully qualified
      domain user sets the owner on new_resource to the fully qualified name of the
      desired owner\n                # windows reporting not yet fully supported\n
      \               # ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \            17) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no security metadata is specified in new_resource
      sets the current values on current resource as strings\n                # windows
      reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \            18) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified with a string (username) in new_resource
      sets the owner on current_resource to the username (string) of the desired owner\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \            19) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified as a fully qualified 'domain\\user'
      in new_resource sets the owner on current_resource to the fully qualified name
      of the desired owner\n                # windows reporting not yet fully supported\n
      \               # ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \            20) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and access rights are specified on the new_resource sets
      the expanded_rights on the current resource\n                # windows reporting
      not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \            21) Chef::Resource::Directory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no access rights are specified on the current resource
      sets the expanded rights on the current resource\n                # windows
      reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \            22) Chef::Resource::DscResource when Powershell supports Invoke-DscResource
      with an invalid dsc resource raises an exception if the resource is not found\n
      \               # Requires Powershell >= 5.0.10018.0\n                # ./spec/functional/resource/dsc_resource_spec.rb:46\n\n
      \            23) Chef::Resource::DscResource when Powershell supports Invoke-DscResource
      with a valid dsc resource converges the resource if it is not converged\n                #
      Requires Powershell >= 5.0.10018.0\n                # ./spec/functional/resource/dsc_resource_spec.rb:67\n\n
      \            24) Chef::Resource::DscResource when Powershell supports Invoke-DscResource
      with a valid dsc resource does not converge the resource if it is already converged\n
      \               # Requires Powershell >= 5.0.10018.0\n                # ./spec/functional/resource/dsc_resource_spec.rb:76\n\n
      \            25) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file doesn't exist has empty values for file metadata in 'current_resource'\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \            26) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file doesn't exist and no security metadata is specified in new_resource sets
      the metadata values on the new_resource as strings after creating\n                #
      windows reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \            27) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file doesn't exist and owner is specified with a fully qualified domain user
      sets the owner on new_resource to the fully qualified name of the desired owner\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \            28) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file exists and no security metadata is specified in new_resource sets the current
      values on current resource as strings\n                # windows reporting not
      yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \            29) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file exists and owner is specified with a string (username) in new_resource
      sets the owner on current_resource to the username (string) of the desired owner\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \            30) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file exists and owner is specified as a fully qualified 'domain\\user' in new_resource
      sets the owner on current_resource to the fully qualified name of the desired
      owner\n                # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \            31) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file exists and access rights are specified on the new_resource sets the expanded_rights
      on the current resource\n                # windows reporting not yet fully supported\n
      \               # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \            32) Chef::Resource::File behaves like a securable resource with
      reporting reading file security metadata for reporting on windows when the target
      file exists and no access rights are specified on the current resource sets
      the expanded rights on the current resource\n                # windows reporting
      not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \            33) Chef::Resource::RemoteDirectory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist has empty values for file metadata in 'current_resource'\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \            34) Chef::Resource::RemoteDirectory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and no security metadata is specified in new_resource
      sets the metadata values on the new_resource as strings after creating\n                #
      windows reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \            35) Chef::Resource::RemoteDirectory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and owner is specified with a fully qualified
      domain user sets the owner on new_resource to the fully qualified name of the
      desired owner\n                # windows reporting not yet fully supported\n
      \               # ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \            36) Chef::Resource::RemoteDirectory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no security metadata is specified in new_resource
      sets the current values on current resource as strings\n                # windows
      reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \            37) Chef::Resource::RemoteDirectory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified with a string (username) in new_resource
      sets the owner on current_resource to the username (string) of the desired owner\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \            38) Chef::Resource::RemoteDirectory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified as a fully qualified 'domain\\user'
      in new_resource sets the owner on current_resource to the fully qualified name
      of the desired owner\n                # windows reporting not yet fully supported\n
      \               # ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \            39) Chef::Resource::RemoteDirectory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and access rights are specified on the new_resource sets
      the expanded_rights on the current resource\n                # windows reporting
      not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \            40) Chef::Resource::RemoteDirectory behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no access rights are specified on the current resource
      sets the expanded rights on the current resource\n                # windows
      reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \            41) Chef::Resource::RemoteFile when fetching files over HTTP when
      using normal encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file doesn't
      exist has empty values for file metadata in 'current_resource'\n                #
      windows reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \            42) Chef::Resource::RemoteFile when fetching files over HTTP when
      using normal encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file doesn't
      exist and no security metadata is specified in new_resource sets the metadata
      values on the new_resource as strings after creating\n                # windows
      reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \            43) Chef::Resource::RemoteFile when fetching files over HTTP when
      using normal encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file doesn't
      exist and owner is specified with a fully qualified domain user sets the owner
      on new_resource to the fully qualified name of the desired owner\n                #
      windows reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \            44) Chef::Resource::RemoteFile when fetching files over HTTP when
      using normal encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and no security metadata is specified in new_resource sets the current values
      on current resource as strings\n                # windows reporting not yet
      fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \            45) Chef::Resource::RemoteFile when fetching files over HTTP when
      using normal encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and owner is specified with a string (username) in new_resource sets the owner
      on current_resource to the username (string) of the desired owner\n                #
      windows reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \            46) Chef::Resource::RemoteFile when fetching files over HTTP when
      using normal encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and owner is specified as a fully qualified 'domain\\user' in new_resource sets
      the owner on current_resource to the fully qualified name of the desired owner\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \            47) Chef::Resource::RemoteFile when fetching files over HTTP when
      using normal encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and access rights are specified on the new_resource sets the expanded_rights
      on the current resource\n                # windows reporting not yet fully supported\n
      \               # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \            48) Chef::Resource::RemoteFile when fetching files over HTTP when
      using normal encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and no access rights are specified on the current resource sets the expanded
      rights on the current resource\n                # windows reporting not yet
      fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \            49) Chef::Resource::RemoteFile when fetching files over HTTP when
      using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file doesn't
      exist has empty values for file metadata in 'current_resource'\n                #
      windows reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \            50) Chef::Resource::RemoteFile when fetching files over HTTP when
      using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file doesn't
      exist and no security metadata is specified in new_resource sets the metadata
      values on the new_resource as strings after creating\n                # windows
      reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \            51) Chef::Resource::RemoteFile when fetching files over HTTP when
      using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file doesn't
      exist and owner is specified with a fully qualified domain user sets the owner
      on new_resource to the fully qualified name of the desired owner\n                #
      windows reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \            52) Chef::Resource::RemoteFile when fetching files over HTTP when
      using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and no security metadata is specified in new_resource sets the current values
      on current resource as strings\n                # windows reporting not yet
      fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \            53) Chef::Resource::RemoteFile when fetching files over HTTP when
      using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and owner is specified with a string (username) in new_resource sets the owner
      on current_resource to the username (string) of the desired owner\n                #
      windows reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \            54) Chef::Resource::RemoteFile when fetching files over HTTP when
      using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and owner is specified as a fully qualified 'domain\\user' in new_resource sets
      the owner on current_resource to the fully qualified name of the desired owner\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \            55) Chef::Resource::RemoteFile when fetching files over HTTP when
      using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and access rights are specified on the new_resource sets the expanded_rights
      on the current resource\n                # windows reporting not yet fully supported\n
      \               # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \            56) Chef::Resource::RemoteFile when fetching files over HTTP when
      using gzip encoding behaves like a securable resource with reporting reading
      file security metadata for reporting on windows when the target file exists
      and no access rights are specified on the current resource sets the expanded
      rights on the current resource\n                # windows reporting not yet
      fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \            57) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist has empty values for file metadata in 'current_resource'\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:279\n\n
      \            58) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and no security metadata is specified in new_resource
      sets the metadata values on the new_resource as strings after creating\n                #
      windows reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:290\n\n
      \            59) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file doesn't exist and owner is specified with a fully qualified
      domain user sets the owner on new_resource to the fully qualified name of the
      desired owner\n                # windows reporting not yet fully supported\n
      \               # ./spec/support/shared/functional/securable_resource_with_reporting.rb:327\n\n
      \            60) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no security metadata is specified in new_resource
      sets the current values on current resource as strings\n                # windows
      reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:342\n\n
      \            61) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified with a string (username) in new_resource
      sets the owner on current_resource to the username (string) of the desired owner\n
      \               # windows reporting not yet fully supported\n                #
      ./spec/support/shared/functional/securable_resource_with_reporting.rb:357\n\n
      \            62) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and owner is specified as a fully qualified 'domain\\user'
      in new_resource sets the owner on current_resource to the fully qualified name
      of the desired owner\n                # windows reporting not yet fully supported\n
      \               # ./spec/support/shared/functional/securable_resource_with_reporting.rb:371\n\n
      \            63) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and access rights are specified on the new_resource sets
      the expanded_rights on the current resource\n                # windows reporting
      not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:379\n\n
      \            64) Chef::Resource::Template behaves like a securable resource
      with reporting reading file security metadata for reporting on windows when
      the target file exists and no access rights are specified on the current resource
      sets the expanded rights on the current resource\n                # windows
      reporting not yet fully supported\n                # ./spec/support/shared/functional/securable_resource_with_reporting.rb:387\n\n
      \            65) Chef::Win32::Security has_admin_privileges? returns false when
      running as non-admin\n                # requires user support in mixlib-shellout\n
      \               # ./spec/functional/win32/security_spec.rb:34\n\n             66)
      Chef::ReservedNames::Win32::SID running as a non-elevated administrator user
      should resolve default_security_object_owner as the current user\n                #
      requires user support in mixlib-shellout, see security_spec.rb\n                #
      ./spec/functional/win32/sid_spec.rb:43\n\n             67) Chef::ReservedNames::Win32::SID
      running as a non-elevated, non-administrator user should resolve default_security_object_owner
      as the current user\n                # requires user support in mixlib-shellout,
      see security_spec.rb\n                # ./spec/functional/win32/sid_spec.rb:50\n\n
      \          Failures:\n\n             1) Chef::Resource::DscScript when using
      ps_credential allows the use of ps_credential FIXED\n                Expected
      pending 'Pended until we can adjust the test cert to meet the WMF 5 cert requirements.'
      to fail. No Error was raised.\n                # ./spec/functional/resource/dsc_script_spec.rb:471\n\n
      \          Finished in 13 minutes 38 seconds (files took 31.19 seconds to load)\n
      \          3549 examples, 1 failure, 67 pending\n\n           Failed examples:\n\n
      \          rspec ./spec/functional/resource/dsc_script_spec.rb:471 # Chef::Resource::DscScript
      when using ps_credential allows the use of ps_credential\n           STDERR:
      WARNING: Shared example group 'with a chef repo' has been previously defined
      at:\n             c:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/cheffish-2.0.4/lib/cheffish/rspec/repository_support.rb:12\n
      \          ...and you are now defining it at:\n             C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/support/shared/integration/integration_helper.rb:111\n
      \          The new definition will overwrite the original one.\n           Deleted
      cookbook[obsolete-cookbook][1.0.0]\n           Deleted cookbook[obsolete-cookbook][1.1.0]\n
      \          Deleted cookbook[obsolete-cookbook][1.2.0]\n           Deleted cookbook[obsolete-cookbook][1.0.0]\n
      \          Deleted cookbook[obsolete-cookbook][1.0.0]\n           Deleted cookbook[obsolete-cookbook][1.1.0]\n
      \          Deleted cookbook[obsolete-cookbook][1.2.0]\n           WARNING: Using
      the `raise_error` matcher without providing a specific error or message risks
      false positives, since `raise_error` will match when Ruby raises a `NoMethodError`,
      `NameError` or `ArgumentError`, potentially allowing the expectation to pass
      without even executing the method you are intending to call. Actual error raised
      was #<ArgumentError: group[group3267] (dynamically defined) had an error: ArgumentError:
      A member could not be added to or removed from the local group because the member
      does not exist.\n           ---- Begin Win32 API output ----\n           System
      Error Code: 1387\n           System Error Message: A member could not be added
      to or removed from the local group because the member does not exist.\n           ----
      End Win32 API output ----\n           >. Instead consider providing a specific
      error class or message. This message can be supressed by setting: `RSpec::Expectations.configuration.warn_about_potential_false_positives
      = false`. Called from C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/functional/resource/group_spec.rb:145:in
      `block (5 levels) in <top (required)>'.\n           WARNING: Using the `raise_error`
      matcher without providing a specific error or message risks false positives,
      since `raise_error` will match when Ruby raises a `NoMethodError`, `NameError`
      or `ArgumentError`, potentially allowing the expectation to pass without even
      executing the method you are intending to call. Actual error raised was #<Chef::Exceptions::Win32APIError:
      group[group7380] (dynamically defined) had an error: Chef::Exceptions::Win32APIError:
      No mapping between account names and security IDs was done.\n           ----
      Begin Win32 API output ----\n           System Error Code: 1332\n           System
      Error Message: No mapping between account names and security IDs was done.\n
      \          ---- End Win32 API output ----\n           >. Instead consider providing
      a specific error class or message. This message can be supressed by setting:
      `RSpec::Expectations.configuration.warn_about_potential_false_positives = false`.
      Called from C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/functional/resource/group_spec.rb:155:in
      `block (5 levels) in <top (required)>'.\n           WARNING: Using the `raise_error`
      matcher without providing a specific error or message risks false positives,
      since `raise_error` will match when Ruby raises a `NoMethodError`, `NameError`
      or `ArgumentError`, potentially allowing the expectation to pass without even
      executing the method you are intending to call. Actual error raised was #<ArgumentError:
      group[group6414] (dynamically defined) had an error: ArgumentError: A member
      could not be added to or removed from the local group because the member does
      not exist.\n           ---- Begin Win32 API output ----\n           System Error
      Code: 1387\n           System Error Message: A member could not be added to
      or removed from the local group because the member does not exist.\n           ----
      End Win32 API output ----\n           >. Instead consider providing a specific
      error class or message. This message can be supressed by setting: `RSpec::Expectations.configuration.warn_about_potential_false_positives
      = false`. Called from C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/functional/resource/group_spec.rb:145:in
      `block (5 levels) in <top (required)>'.\n           WARNING: Using the `raise_error`
      matcher without providing a specific error or message risks false positives,
      since `raise_error` will match when Ruby raises a `NoMethodError`, `NameError`
      or `ArgumentError`, potentially allowing the expectation to pass without even
      executing the method you are intending to call. Actual error raised was #<Chef::Exceptions::Win32APIError:
      group[group1320] (dynamically defined) had an error: Chef::Exceptions::Win32APIError:
      No mapping between account names and security IDs was done.\n           ----
      Begin Win32 API output ----\n           System Error Code: 1332\n           System
      Error Message: No mapping between account names and security IDs was done.\n
      \          ---- End Win32 API output ----\n           >. Instead consider providing
      a specific error class or message. This message can be supressed by setting:
      `RSpec::Expectations.configuration.warn_about_potential_false_positives = false`.
      Called from C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/functional/resource/group_spec.rb:155:in
      `block (5 levels) in <top (required)>'.\n           Invalid switch - \"test-dir\".\n
      \          Invalid switch - \"test-dir\".\n           Invalid switch - \"test-dir\".\n
      \          Invalid switch - \"test-dir\".\n           Invalid switch - \"test-dir\".\n
      \          Invalid switch - \"test-dir\".\n           Invalid switch - \"test-dir\".\n
      \          Invalid switch - \"test-dir\".\n           Invalid switch - \"test-dir\".\n
      \          Invalid switch - \"test-dir\".\n           Invalid switch - \"test-dir\".\n
      \          Invalid switch - \"test-dir\".\n           Invalid switch - \"test-dir\".\n
      \          Invalid switch - \"test-dir\".\n           Invalid switch - \"test-dir\".\n
      \          Invalid switch - \"test-dir\".\n           Invalid switch - \"test-dir\".\n
      \          Invalid switch - \"test-dir\".\n           Invalid switch - \"test-dir\".\n
      \          Invalid switch - \"test-dir\".\n           Invalid switch - \"test-dir\".\n
      \          Invalid switch - \"test-dir\".\n           Invalid switch - \"test-dir\".\n
      \          WARNING: Using the `raise_error` matcher without providing a specific
      error or message risks false positives, since `raise_error` will match when
      Ruby raises a `NoMethodError`, `NameError` or `ArgumentError`, potentially allowing
      the expectation to pass without even executing the method you are intending
      to call. Actual error raised was #<Errno::EADDRNOTAVAIL: remote_file[C:/test-dir/remote_file_spec20160617-2036-xelqz5]
      (dynamically defined) had an error: Errno::EADDRNOTAVAIL: The requested address
      is not valid in its context. - connect(2) for \"localhost\" port 0>. Instead
      consider providing a specific error class or message. This message can be supressed
      by setting: `RSpec::Expectations.configuration.warn_about_potential_false_positives
      = false`. Called from C:/opscode/chef/embedded/lib/ruby/gems/2.1.0/gems/chef-12.12.2-universal-mingw32/spec/functional/resource/remote_file_spec.rb:235:in
      `block (4 levels) in <top (required)>'.\n           ---- End output of bundle
      exec rspec -f documentation -t ~requires_git spec/functional ----\n           Ran
      bundle exec rspec -f documentation -t ~requires_git spec/functional returned
      1\n                # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/mixlib-shellout-2.2.6-universal-mingw32/lib/mixlib/shellout.rb:289:in
      `invalid!'\n                # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/mixlib-shellout-2.2.6-universal-mingw32/lib/mixlib/shellout.rb:276:in
      `error!'\n                # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/fips-unit-functional_spec.rb:44:in
      `block in run_rspec_test'\n                # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/bundler-1.12.5/lib/bundler.rb:237:in
      `block in with_clean_env'\n                # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/bundler-1.12.5/lib/bundler.rb:447:in
      `with_env'\n                # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/bundler-1.12.5/lib/bundler.rb:237:in
      `with_clean_env'\n                # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/fips-unit-functional_spec.rb:39:in
      `run_rspec_test'\n                # C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/fips-unit-functional_spec.rb:53:in
      `block (2 levels) in <top (required)>'\n\n           Finished in 18 minutes
      4 seconds (files took 1.41 seconds to load)\n           2 examples, 1 failure\n\n
      \          Failed examples:\n\n           rspec C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/fips-unit-functional_spec.rb:52
      # Chef Fips Unit/Functional Specs passes the functional specs\n\n           C:/opscode/chef/embedded/bin/ruby.exe
      -IC:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec -I'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-support-3.4.1/lib';'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/lib'
      'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/exe/rspec'
      --pattern 'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/**/*_spec.rb'
      --color --format documentation --default-path C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec\n
      \   $$$$$$ C:/opscode/chef/embedded/bin/ruby.exe -IC:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec
      -I'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-support-3.4.1/lib';'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/lib'
      'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/rspec-core-3.4.4/exe/rspec'
      --pattern 'C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec/**/*_spec.rb'
      --color --format documentation --default-path C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec
      failed\n    $$$$$$ !!!!!! Ruby Script [C:/Users/ADMINI~1/AppData/Local/Temp/verifier/gems/gems/busser-serverspec-0.5.9/lib/busser/runner_plugin/../serverspec/runner.rb
      C:/Users/ADMINI~1/AppData/Local/Temp/verifier/suites/serverspec] exit code was
      1\n    D      Cleaning up local sandbox in /tmp/cheftest/fips-unit-functional-windows-2012r2-sandbox-20160617-21980-78ficg\n
      \   D      Verify failed on instance <fips-unit-functional-windows-2012r2>.\n
      \   D      ------Exception-------\n    D      Class: Kitchen::InstanceFailure\n
      \   D      Message: Verify failed on instance <fips-unit-functional-windows-2012r2>.
      \ Please see .kitchen/logs/fips-unit-functional-windows-2012r2.log for more
      details\n    D      ----------------------\n    D      ------Backtrace-------\n
      \   D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/verifier/base.rb:86:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:415:in
      `verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:160:in
      `verify'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:194:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:194:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n    D      ----End Backtrace-----\n
      \   D      ---Nested Exception---\n    D      Class: Kitchen::ActionFailed\n
      \   D      Message: WinRM exited (1) for command: [$env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat test\n    ]\n    D      ----------------------\n
      \   D      ------Backtrace-------\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/verifier/base.rb:83:in
      `rescue in call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/verifier/base.rb:86:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:423:in
      `block in verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:513:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:513:in
      `synchronize_or_call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:478:in
      `block in action'\n    D      /opt/chefdk/embedded/lib/ruby/2.1.0/benchmark.rb:279:in
      `measure'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:477:in
      `action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:415:in
      `verify_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:348:in
      `block in transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:347:in
      `each'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:347:in
      `transition_to'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/instance.rb:160:in
      `verify'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:194:in
      `public_send'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:194:in
      `run_action_in_thread'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/test-kitchen-1.9.2/lib/kitchen/command.rb:173:in
      `block (2 levels) in run_action'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `call'\n    D      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/logging-2.1.0/lib/logging/diagnostic_context.rb:450:in
      `block in create_with_logging_context'\n    D      ----End Backtrace-----\n
      \   D      [WinRM] closing remote shell A66F1176-299F-413D-8871-E04ABACAC354
      on http://10.194.9.191:5985/wsman\n    D      [WinRM] remote shell A66F1176-299F-413D-8871-E04ABACAC354
      closed\n    D      [WinRM] closing remote shell 622F2AD8-B056-485C-ADC6-D9A1956F3430
      on http://10.194.10.193:5985/wsman\n    D      [WinRM] remote shell 622F2AD8-B056-485C-ADC6-D9A1956F3430
      closed\n    STDERR: >>>>>> Verify failed on instance <fips-unit-functional-windows-2012r2>.\n
      \   >>>>>> Please see .kitchen/logs/fips-unit-functional-windows-2012r2.log
      for more details\n    >>>>>> ------Exception-------\n    >>>>>> Class: Kitchen::ActionFailed\n
      \   >>>>>> Message: WinRM exited (1) for command: [$env:PATH = [System.Environment]::GetEnvironmentVariable(\"PATH\",\"Machine\")\n\n
      \   $env:BUSSER_ROOT = \"$env:TEMP\\verifier\"\n    $env:GEM_HOME = \"$env:TEMP\\verifier\\gems\"\n
      \   $env:GEM_PATH = \"$env:TEMP\\verifier\\gems\"\n    $env:GEM_CACHE = \"$env:TEMP\\verifier\\gems\\cache\"\n\n
      \   & $env:TEMP\\verifier\\bin\\busser.bat test\n    ]\n    >>>>>> ----------------------\n
      \   ---- End output of bundle exec kitchen verify  -c -l debug ----\n    Ran
      bundle exec kitchen verify  -c -l debug returned 10\n\n    Resource Declaration:\n
      \   ---------------------\n    # In /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/acceptance-cookbook/recipes/verify.rb\n\n
      \     1: kitchen \"verify\"\n\n    Compiled Resource:\n    ------------------\n
      \   # Declared in /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/cookbooks/acceptance-cookbook/recipes/verify.rb:1:in
      `from_file'\n\n    kitchen(\"verify\") do\n      action [:run]\n      retries
      0\n      retry_delay 2\n      default_guard_interpreter :default\n      declared_type
      :kitchen\n      cookbook_name \"acceptance-cookbook\"\n      recipe_name \"verify\"\n
      \     command \"verify\"\n      kitchen_options \"-c -l debug\"\n      kitchen_dir
      \"/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/fips\"\n
      \     chef_product \"chef\"\n    end\n\nStarting audit phase\n"
    64813: |2

      Running handlers:
      [2016-06-17T21:19:23+00:00] ERROR: Running exception handlers
      Running handlers complete
      [2016-06-17T21:19:23+00:00] ERROR: Exception handlers complete
      Chef Client failed. 0 resources updated in 18 minutes 44 seconds
      [2016-06-17T21:19:23+00:00] FATAL: Stacktrace dumped to /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/cache/chef-stacktrace.out
      [2016-06-17T21:19:23+00:00] FATAL: Please provide the contents of the stacktrace.out file if you file a bug report
      [2016-06-17T21:19:23+00:00] ERROR: Found 1 errors, they are stored in the backtrace
      [2016-06-17T21:19:24+00:00] FATAL: Chef::Exceptions::ChildConvergeError: Chef run process exited unsuccessfully (exit code 1)
      STDERR:
      ---- End output of chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/dna.json -o acceptance-cookbook::verify --no-color ----
      Ran chef-client -z -c /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/.chef/config.rb --force-formatter -j /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/chef/fips/verify/dna.json -o acceptance-cookbook::verify --no-color returned 1
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:289:in `invalid!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/gems/mixlib-shellout-2.2.6/lib/mixlib/shellout.rb:276:in `error!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/chef_runner.rb:53:in `block in run!'
      /home/jenkins/.chefdk/gem/ruby/2.1.0/gems/bundler-1.11.2/lib/bundler.rb:219:in `block in with_clean_env'
      /home/jenkins/.chefdk/gem/ruby/2.1.0/gems/bundler-1.11.2/lib/bundler.rb:199:in `with_original_env'
      /home/jenkins/.chefdk/gem/ruby/2.1.0/gems/bundler-1.11.2/lib/bundler.rb:205:in `with_clean_env'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/chef_runner.rb:42:in `run!'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:149:in `run_command'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:116:in `block in run_suite'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:114:in `each'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:114:in `run_suite'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:76:in `block (2 levels) in start_worker'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:74:in `loop'
      /home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/acceptance/vendor/bundle/ruby/2.1.0/bundler/gems/chef-acceptance-e92ddae46d21/lib/chef-acceptance/application.rb:74:in `block in start_worker'
      CHEF-ACCEPTANCE::[2016-06-17 21:19:24 +0000] --force-destroy specified so attempting to run the destroy recipe
      FIPS::DESTROY::[2016-06-17 21:19:24 +0000] Initialized [/home/jenkins/workspace/chef-test/architecture/x86_64/platform/acceptance/project/chef/role/tester/chef-acceptance-data/logs/fips/destroy.log] logger...
    68079: |
      CHEF-ACCEPTANCE::[2016-06-17 21:35:21 +0000] | top-cookbooks   | Total         | 00:45:28 | N     |
      CHEF-ACCEPTANCE::[2016-06-17 21:35:21 +0000] | Run             | Total         | 00:45:28 | Y     |
      Build step 'Invoke XShell command' marked build as failure
      Archiving artifacts
      Recording fingerprints
steps:
  total: 47m10s
  before (setup time): 1m40s
  CHEF-ACCEPTANCE:
    total: 45m29s
    OMNITRUCK::PROVISION: 21s
    TRIVIAL::PROVISION: 5m2s
    TOP-COOKBOOKS::PROVISION: 43m53s
    OMNITRUCK::VERIFY: 20s
    WINDOWS-SERVICE::PROVISION: 4m23s
    TRIVIAL::VERIFY: 18s
    WINDOWS-SERVICE::VERIFY: 56s
    TRIVIAL::DESTROY: 18s
    FIPS::PROVISION: 5m4s
    WINDOWS-SERVICE::DESTROY: 12s
    BASICS::PROVISION: 56s
    BASICS::VERIFY: 24s
    BASICS::DESTROY: 11s
    DATA-COLLECTOR::PROVISION: 1m5s
    DATA-COLLECTOR::VERIFY: 40s
    DATA-COLLECTOR::DESTROY: 14s
    FIPS::VERIFY: 18m48s
    FIPS::DESTROY: 18s
    TOP-COOKBOOKS::VERIFY: 47s
    TOP-COOKBOOKS::DESTROY: 49s
chef_acceptance_timing:
- omnitruck:
    provision: 12s
    verify: 13s
    destroy: 4s
    Total: 47s
  trivial:
    provision: 4m22s
    verify: 12s
    destroy: 11s
    Total: 5m39s
  windows-service:
    provision: 3m58s
    verify: 40s
    destroy: 9s
    Total: 5m32s
  basics:
    provision: 47s
    verify: 19s
    destroy: 7s
    Total: 1m31s
  data-collector:
    provision: 56s
    verify: 35s
    destroy: 9s
    Total: 1m59s
  fips:
    provision: 4m16s
    verify: 17m37s
    force-destroy: 7s
    Total: 24m3s
  top-cookbooks:
    provision: 40m5s
    verify: 34s
    destroy: 34s
    Total: 45m28s
  Run:
    Total: 45m28s
