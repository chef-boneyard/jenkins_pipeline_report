---
result: FAILURE
url: http://wilson.ci.chef.co/job/chef-backend-trigger-git_poll/178/
failure_category: code
failure_cause: 'chef-client: chef-backend-test/architecture=x86_64,platform=ubuntu-10.04,project=chef-backend,role=tester;
  chef-client: all: chef-backend-test'
timestamp: 2016-04-22 10:30:09 UTC
duration: 33m23s
active_duration: 58m54s
parameters: {}
change:
  git_remote: git@github.com:chef/chef-backend.git
  git_commit: 7fd4da53f0ee2d248bcbc22ac3f69ed8c0cc8336
  project: chef-backend
  version: 0.4.0+20160422103024.git.21.7fd4da5
stages:
  chef-backend-build/architecture=x86_64,platform=ubuntu-10.04,project=chef-backend,role=builder:
    result: SUCCESS
    url: http://wilson.ci.chef.co/job/chef-backend-build/architecture=x86_64,platform=ubuntu-10.04,project=chef-backend,role=builder/211/
    duration: 14m13s
  chef-backend-test/architecture=x86_64,platform=ubuntu-10.04,project=chef-backend,role=tester:
    result: FAILURE
    failure_category: code
    failure_cause: chef-client
    failed_in:
      step: chef-client
    url: http://wilson.ci.chef.co/job/chef-backend-test/architecture=x86_64,platform=ubuntu-10.04,project=chef-backend,role=tester/200/
    duration: 11m32s
    logs:
      consoleText:
        572: |
          [2016-04-22T10:59:35+00:00] INFO: GET /organizations/chef/nodes/ip-10-194-12-189.us-west-2.compute.internal
          [2016-04-22T10:59:35+00:00] INFO: #<ChefZero::RestErrorResponse: 404: Object not found: chefzero://localhost:8889/nodes/ip-10-194-12-189.us-west-2.compute.internal>
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:91:in `rescue in get_data'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:83:in `get_data'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/endpoints/rest_object_endpoint.rb:18:in `get'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:62:in `call'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_router.rb:24:in `call'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:664:in `block in app'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `call'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `handle_socketless_request'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:87:in `request'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:33:in `request'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http/socketless_chef_zero_client.rb:154:in `request'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:305:in `block in send_http_request'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:336:in `block in retrying_http_errors'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `loop'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `retrying_http_errors'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:299:in `send_http_request'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:144:in `request'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:111:in `get'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:604:in `load'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:588:in `find_or_create'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/policy_builder/dynamic.rb:72:in `load_node'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:465:in `load_node'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:267:in `run'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:267:in `run_with_graceful_exit_option'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:243:in `block in run_chef_client'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/local_mode.rb:44:in `with_server_connectivity'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:226:in `run_chef_client'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application/client.rb:419:in `run_application'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:58:in `run'
          /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/bin/chef-client:26:in `<top (required)>'
          /opt/opscode/embedded/bin/chef-client:23:in `load'
          /opt/opscode/embedded/bin/chef-client:23:in `<main>'
          [2016-04-22T10:59:35+00:00] INFO:
          --- RESPONSE (404) ---
        4070: |2

                    if attempt == 120
                        raise 'ERROR: Timeout waiting for DRBD mount to return'
                    end
                    print '.'
        4622: |
          if File.exists?("/etc/opscode/chef-server.json") &&
              !(File.exist?("/etc/opscode/private-chef.rb") || File.exist?("/etc/opscode/chef-server.rb"))
            Chef::Log.fatal("Configuration via /etc/opscode/chef-server.json is not supported. Please use /etc/opscode/chef-server.rb")
            exit!(1)
          else
        5720: |2

              if !connected
                Chef::Log.fatal("HAProxy status socket never appeared properly!")
                Chef::Log.fatal("See /var/log/opscode/haproxy/current for more information")
                Kernel.exit! 1
              end
        5771: |2

              if !stable
                Chef::Log.fatal("HAProxy still showing multiple active backends")
                Chef::Log.fatal("Please check /var/log/opscode/haproxy/current locally for problems.")
                Chef::Log.fatal("Please check your backend cluster's status for problems.")
                Kernel.exit! 1
              end
        6468: |2
              rescue Exception => e
                message = <<-EOF
          ERROR:
          The /var/opt/opscode/upgrades/migration-level file is missing or corrupt!  Please read http://docs.chef.io/install_server_pre.html and correct this file before proceeding
        7386: |2
                  `echo 'SELECT * FROM pg_database;' | su - #{node['private_chef']['postgresql']['username']} -c '/opt/opscode/embedded/bin/psql -p #{node['private_chef']['postgresql']['port']} -U #{node['private_chef']['postgresql']['db_superuser']} postgres -t -A'`
            if $?.exitstatus != 0
                    Chef::Log.fatal("Could not connect to database, retrying in 10 seconds.")
                    sleep 10
                  else
        7395: |2

                unless connectable
                  Chef::Log.fatal <<-ERR

          Could not connect to the postgresql database.
        7762: |2
                  elsif PrivateChef['backend_vips']['ipaddress'] =~ /\:/
                    # IPv6 addresses must have the mask
                    Chef::Log.fatal("backend_vip ipaddress field appears to be a IPv6 address without a netmask  (e.g /64, /48)")
                    exit 66
                  else
        7775: |2
              def generate_hex_if_bootstrap(chars, ha_guard)
                if ha_guard
                  Chef::Log.fatal("Attempt to create secrets on non-bootstrap node in an H/A topology, please copy /etc/opscode/* around instead.")
                  exit 44
                end
        8164: |2
              def assert_server_config(node_name)
                unless PrivateChef["servers"].key?(node_name)
                  Chef::Log.fatal <<-EOF
          No server configuration found for "#{node_name}" in /etc/opscode/chef-server.rb.
          Server configuration exists for the following hostnames:
        8191: |2
                    gen_api_fqdn
                  else
                    Chef::Log.fatal("I do not understand topology #{PrivateChef.topology} - try standalone, manual, ha, or tier.")
                    exit 55
                  end
        9266: |2
                # use of exit! prevents exit handlers from running, ensuring the last thing
                # the customer sees is the descriptive error we've provided.
                Chef::Log.fatal("\n\n#{LINE_SEP}\n#{e.message}#{LINE_SEP}")
                exit! 128
              end
        13548: |2

          #------------------------------------------------------------------------------
          # ERROR REPORTING AND LOGGING
          #------------------------------------------------------------------------------
        13619: |2
                    #   error
                    #   log
                    #   fatal
                    #   panic
        13633: |2
                    #   error
                    #   log
                    #   fatal
                    #   panic (effectively off)
        13822: |2

          #------------------------------------------------------------------------------
          # ERROR HANDLING
          #------------------------------------------------------------------------------
        17266: |2

            if [ ! -d "$OCF_ROOT" ]; then
              ha_log "ERROR: OCF_ROOT points to non-directory $OCF_ROOT."
              exit $OCF_ERR_GENERIC
            fi
        17287: |2

            if [ -z "$OCF_RESOURCE_INSTANCE" ]; then
              ha_log "ERROR: Need to tell us our resource instance name."
              exit $OCF_ERR_ARGS
            fi
        17324: |2
                    loglevel=notice
                    case "${*}" in
                      *ERROR*)    loglevel=err;;
                      *WARN*)   loglevel=warning;;
                      *INFO*|info)  loglevel=info;;
        17423: |2
                  case "${__OCF_PRIO}" in
                    crit) __OCF_PRIO="CRIT";;
                    err)  __OCF_PRIO="ERROR";;
                    warn) __OCF_PRIO="WARNING";;
                    info) __OCF_PRIO="INFO";;
        29095: |2

            if node['fqdn'].nil?
              Chef::Log.fatal("This node's fqdn is set to nil, so a read token cannot be issued!" \
                              "Please change your fqdn settings.")
            end
        31098: |
          [2016-04-22T11:00:17+00:00] INFO: runit_service[haproxy] configured
          [2016-04-22T11:00:17+00:00] INFO: Processing ruby_block[wait for haproxy status socket] action run (private-chef::haproxy line 91)
          [2016-04-22T11:00:27+00:00] FATAL: HAProxy status socket never appeared properly!
          [2016-04-22T11:00:27+00:00] FATAL: See /var/log/opscode/haproxy/current for more information
          Build step 'Invoke XShell command' marked build as failure
          Performing Post build task...
          Match found for : : True
    steps:
      total: 11m32s
      before (setup time): 10m37s
      after (cleanup time): 52s
  chef-backend-test:
    result: FAILURE
    failure_category: code
    failure_cause: 'chef-client: all'
    url: http://wilson.ci.chef.co/job/chef-backend-test/200/
    duration: 14m38s
    runs:
      el-5:
        result: FAILURE
        failure_category: code
        failure_cause: chef-client
        failed_in:
          step: chef-client
        url: http://wilson.ci.chef.co/job/chef-backend-test/architecture=x86_64,platform=el-5,project=chef-backend,role=tester/200/
        duration: 14m37s
        logs:
          consoleText:
            531: |
              [2016-04-22T07:02:38-04:00] INFO: GET /organizations/chef/nodes/ip-10-194-10-213.us-west-2.compute.internal
              [2016-04-22T07:02:38-04:00] INFO: #<ChefZero::RestErrorResponse: 404: Object not found: chefzero://localhost:8889/nodes/ip-10-194-10-213.us-west-2.compute.internal>
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:91:in `rescue in get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:83:in `get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/endpoints/rest_object_endpoint.rb:18:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:62:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_router.rb:24:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:664:in `block in app'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `handle_socketless_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:87:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:33:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http/socketless_chef_zero_client.rb:154:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:305:in `block in send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:336:in `block in retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `loop'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:299:in `send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:144:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:111:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:604:in `load'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:588:in `find_or_create'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/policy_builder/dynamic.rb:72:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:465:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:267:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:267:in `run_with_graceful_exit_option'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:243:in `block in run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/local_mode.rb:44:in `with_server_connectivity'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:226:in `run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application/client.rb:419:in `run_application'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:58:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/bin/chef-client:26:in `<top (required)>'
              /opt/opscode/embedded/bin/chef-client:23:in `load'
              /opt/opscode/embedded/bin/chef-client:23:in `<main>'
              [2016-04-22T07:02:38-04:00] INFO:
              --- RESPONSE (404) ---
            4403: |2

                        if attempt == 120
                            raise 'ERROR: Timeout waiting for DRBD mount to return'
                        end
                        print '.'
            4875: |2
                  rescue Exception => e
                    message = <<-EOF
              ERROR:
              The /var/opt/opscode/upgrades/migration-level file is missing or corrupt!  Please read http://docs.chef.io/install_server_pre.html and correct this file before proceeding
            4971: |
              if File.exists?("/etc/opscode/chef-server.json") &&
                  !(File.exist?("/etc/opscode/private-chef.rb") || File.exist?("/etc/opscode/chef-server.rb"))
                Chef::Log.fatal("Configuration via /etc/opscode/chef-server.json is not supported. Please use /etc/opscode/chef-server.rb")
                exit!(1)
              else
            7298: |2
                      `echo 'SELECT * FROM pg_database;' | su - #{node['private_chef']['postgresql']['username']} -c '/opt/opscode/embedded/bin/psql -p #{node['private_chef']['postgresql']['port']} -U #{node['private_chef']['postgresql']['db_superuser']} postgres -t -A'`
                if $?.exitstatus != 0
                        Chef::Log.fatal("Could not connect to database, retrying in 10 seconds.")
                        sleep 10
                      else
            7307: |2

                    unless connectable
                      Chef::Log.fatal <<-ERR

              Could not connect to the postgresql database.
            7679: |2

                  if !connected
                    Chef::Log.fatal("HAProxy status socket never appeared properly!")
                    Chef::Log.fatal("See /var/log/opscode/haproxy/current for more information")
                    Kernel.exit! 1
                  end
            7730: |2

                  if !stable
                    Chef::Log.fatal("HAProxy still showing multiple active backends")
                    Chef::Log.fatal("Please check /var/log/opscode/haproxy/current locally for problems.")
                    Chef::Log.fatal("Please check your backend cluster's status for problems.")
                    Kernel.exit! 1
                  end
            8699: |2
                    # use of exit! prevents exit handlers from running, ensuring the last thing
                    # the customer sees is the descriptive error we've provided.
                    Chef::Log.fatal("\n\n#{LINE_SEP}\n#{e.message}#{LINE_SEP}")
                    exit! 128
                  end
            8882: |2
                      elsif PrivateChef['backend_vips']['ipaddress'] =~ /\:/
                        # IPv6 addresses must have the mask
                        Chef::Log.fatal("backend_vip ipaddress field appears to be a IPv6 address without a netmask  (e.g /64, /48)")
                        exit 66
                      else
            8895: |2
                  def generate_hex_if_bootstrap(chars, ha_guard)
                    if ha_guard
                      Chef::Log.fatal("Attempt to create secrets on non-bootstrap node in an H/A topology, please copy /etc/opscode/* around instead.")
                      exit 44
                    end
            9286: |2
                  def assert_server_config(node_name)
                    unless PrivateChef["servers"].key?(node_name)
                      Chef::Log.fatal <<-EOF
              No server configuration found for "#{node_name}" in /etc/opscode/chef-server.rb.
              Server configuration exists for the following hostnames:
            9313: |2
                        gen_api_fqdn
                      else
                        Chef::Log.fatal("I do not understand topology #{PrivateChef.topology} - try standalone, manual, ha, or tier.")
                        exit 55
                      end
            19538: |2

              #------------------------------------------------------------------------------
              # ERROR REPORTING AND LOGGING
              #------------------------------------------------------------------------------
            19609: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic
            19623: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic (effectively off)
            19812: |2

              #------------------------------------------------------------------------------
              # ERROR HANDLING
              #------------------------------------------------------------------------------
            20648: |2

                if [ ! -d "$OCF_ROOT" ]; then
                  ha_log "ERROR: OCF_ROOT points to non-directory $OCF_ROOT."
                  exit $OCF_ERR_GENERIC
                fi
            20668: |2

                if [ -z "$OCF_RESOURCE_INSTANCE" ]; then
                  ha_log "ERROR: Need to tell us our resource instance name."
                  exit $OCF_ERR_ARGS
                fi
            20705: |2
                        loglevel=notice
                        case "${*}" in
                          *ERROR*)    loglevel=err;;
                          *WARN*)   loglevel=warning;;
                          *INFO*|info)  loglevel=info;;
            20804: |2
                      case "${__OCF_PRIO}" in
                        crit) __OCF_PRIO="CRIT";;
                        err)  __OCF_PRIO="ERROR";;
                        warn) __OCF_PRIO="WARNING";;
                        info) __OCF_PRIO="INFO";;
            30008: |2

                if node['fqdn'].nil?
                  Chef::Log.fatal("This node's fqdn is set to nil, so a read token cannot be issued!" \
                                  "Please change your fqdn settings.")
                end
            31056: |
              [2016-04-22T07:03:21-04:00] INFO: runit_service[haproxy] configured
              [2016-04-22T07:03:21-04:00] INFO: Processing ruby_block[wait for haproxy status socket] action run (private-chef::haproxy line 91)
              [2016-04-22T07:03:31-04:00] FATAL: HAProxy status socket never appeared properly!
              [2016-04-22T07:03:31-04:00] FATAL: See /var/log/opscode/haproxy/current for more information
              Build step 'Invoke XShell command' marked build as failure
              Performing Post build task...
              Match found for : : True
        steps:
          total: 14m37s
          before (setup time): 13m39s
          after (cleanup time): 54s
      el-6:
        result: FAILURE
        failure_category: code
        failure_cause: chef-client
        failed_in:
          step: chef-client
        url: http://wilson.ci.chef.co/job/chef-backend-test/architecture=x86_64,platform=el-6,project=chef-backend,role=tester/200/
        duration: 12m36s
        logs:
          consoleText:
            521: |
              [2016-04-22T07:03:18-04:00] INFO: GET /organizations/chef/nodes/ip-10-194-15-97.us-west-2.compute.internal
              [2016-04-22T07:03:18-04:00] INFO: #<ChefZero::RestErrorResponse: 404: Object not found: chefzero://localhost:8889/nodes/ip-10-194-15-97.us-west-2.compute.internal>
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:91:in `rescue in get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:83:in `get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/endpoints/rest_object_endpoint.rb:18:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:62:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_router.rb:24:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:664:in `block in app'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `handle_socketless_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:87:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:33:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http/socketless_chef_zero_client.rb:154:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:305:in `block in send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:336:in `block in retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `loop'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:299:in `send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:144:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:111:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:604:in `load'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:588:in `find_or_create'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/policy_builder/dynamic.rb:72:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:465:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:267:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:267:in `run_with_graceful_exit_option'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:243:in `block in run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/local_mode.rb:44:in `with_server_connectivity'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:226:in `run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application/client.rb:419:in `run_application'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:58:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/bin/chef-client:26:in `<top (required)>'
              /opt/opscode/embedded/bin/chef-client:23:in `load'
              /opt/opscode/embedded/bin/chef-client:23:in `<main>'
              [2016-04-22T07:03:18-04:00] INFO:
              --- RESPONSE (404) ---
            4554: |2

                        if attempt == 120
                            raise 'ERROR: Timeout waiting for DRBD mount to return'
                        end
                        print '.'
            5469: |2
                  rescue Exception => e
                    message = <<-EOF
              ERROR:
              The /var/opt/opscode/upgrades/migration-level file is missing or corrupt!  Please read http://docs.chef.io/install_server_pre.html and correct this file before proceeding
            5785: |
              if File.exists?("/etc/opscode/chef-server.json") &&
                  !(File.exist?("/etc/opscode/private-chef.rb") || File.exist?("/etc/opscode/chef-server.rb"))
                Chef::Log.fatal("Configuration via /etc/opscode/chef-server.json is not supported. Please use /etc/opscode/chef-server.rb")
                exit!(1)
              else
            7233: |2

                  if !connected
                    Chef::Log.fatal("HAProxy status socket never appeared properly!")
                    Chef::Log.fatal("See /var/log/opscode/haproxy/current for more information")
                    Kernel.exit! 1
                  end
            7284: |2

                  if !stable
                    Chef::Log.fatal("HAProxy still showing multiple active backends")
                    Chef::Log.fatal("Please check /var/log/opscode/haproxy/current locally for problems.")
                    Chef::Log.fatal("Please check your backend cluster's status for problems.")
                    Kernel.exit! 1
                  end
            7757: |2
                      `echo 'SELECT * FROM pg_database;' | su - #{node['private_chef']['postgresql']['username']} -c '/opt/opscode/embedded/bin/psql -p #{node['private_chef']['postgresql']['port']} -U #{node['private_chef']['postgresql']['db_superuser']} postgres -t -A'`
                if $?.exitstatus != 0
                        Chef::Log.fatal("Could not connect to database, retrying in 10 seconds.")
                        sleep 10
                      else
            7766: |2

                    unless connectable
                      Chef::Log.fatal <<-ERR

              Could not connect to the postgresql database.
            8909: |2
                      elsif PrivateChef['backend_vips']['ipaddress'] =~ /\:/
                        # IPv6 addresses must have the mask
                        Chef::Log.fatal("backend_vip ipaddress field appears to be a IPv6 address without a netmask  (e.g /64, /48)")
                        exit 66
                      else
            8922: |2
                  def generate_hex_if_bootstrap(chars, ha_guard)
                    if ha_guard
                      Chef::Log.fatal("Attempt to create secrets on non-bootstrap node in an H/A topology, please copy /etc/opscode/* around instead.")
                      exit 44
                    end
            9311: |2
                  def assert_server_config(node_name)
                    unless PrivateChef["servers"].key?(node_name)
                      Chef::Log.fatal <<-EOF
              No server configuration found for "#{node_name}" in /etc/opscode/chef-server.rb.
              Server configuration exists for the following hostnames:
            9338: |2
                        gen_api_fqdn
                      else
                        Chef::Log.fatal("I do not understand topology #{PrivateChef.topology} - try standalone, manual, ha, or tier.")
                        exit 55
                      end
            10401: |2
                    # use of exit! prevents exit handlers from running, ensuring the last thing
                    # the customer sees is the descriptive error we've provided.
                    Chef::Log.fatal("\n\n#{LINE_SEP}\n#{e.message}#{LINE_SEP}")
                    exit! 128
                  end
            18031: |2

                if [ ! -d "$OCF_ROOT" ]; then
                  ha_log "ERROR: OCF_ROOT points to non-directory $OCF_ROOT."
                  exit $OCF_ERR_GENERIC
                fi
            18051: |2

                if [ -z "$OCF_RESOURCE_INSTANCE" ]; then
                  ha_log "ERROR: Need to tell us our resource instance name."
                  exit $OCF_ERR_ARGS
                fi
            18088: |2
                        loglevel=notice
                        case "${*}" in
                          *ERROR*)    loglevel=err;;
                          *WARN*)   loglevel=warning;;
                          *INFO*|info)  loglevel=info;;
            18187: |2
                      case "${__OCF_PRIO}" in
                        crit) __OCF_PRIO="CRIT";;
                        err)  __OCF_PRIO="ERROR";;
                        warn) __OCF_PRIO="WARNING";;
                        info) __OCF_PRIO="INFO";;
            20077: |2

              #------------------------------------------------------------------------------
              # ERROR REPORTING AND LOGGING
              #------------------------------------------------------------------------------
            20148: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic
            20162: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic (effectively off)
            20351: |2

              #------------------------------------------------------------------------------
              # ERROR HANDLING
              #------------------------------------------------------------------------------
            29803: |2

                if node['fqdn'].nil?
                  Chef::Log.fatal("This node's fqdn is set to nil, so a read token cannot be issued!" \
                                  "Please change your fqdn settings.")
                end
            31047: |
              [2016-04-22T07:04:02-04:00] INFO: runit_service[haproxy] configured
              [2016-04-22T07:04:02-04:00] INFO: Processing ruby_block[wait for haproxy status socket] action run (private-chef::haproxy line 91)
              [2016-04-22T07:04:12-04:00] FATAL: HAProxy status socket never appeared properly!
              [2016-04-22T07:04:12-04:00] FATAL: See /var/log/opscode/haproxy/current for more information
              Build step 'Invoke XShell command' marked build as failure
              Performing Post build task...
              Match found for : : True
        steps:
          total: 12m36s
          before (setup time): 14m18s
          after (cleanup time): "-1m47s"
      el-7:
        result: FAILURE
        failure_category: code
        failure_cause: chef-client
        failed_in:
          step: chef-client
        url: http://wilson.ci.chef.co/job/chef-backend-test/architecture=x86_64,platform=el-7,project=chef-backend,role=tester/200/
        duration: 10m46s
        logs:
          consoleText:
            55728: |
              warning: file /opt/opscode/embedded/lib/ruby/gems/2.1.0/doc/nokogiri-1.6.7.2/ri/Nokogiri/XML/SyntaxError/int1-i.ri: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/ruby/gems/2.1.0/doc/nokogiri-1.6.7.2/ri/Nokogiri/XML/SyntaxError/file-i.ri: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/ruby/gems/2.1.0/doc/nokogiri-1.6.7.2/ri/Nokogiri/XML/SyntaxError/fatal%3f-i.ri: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/ruby/gems/2.1.0/doc/nokogiri-1.6.7.2/ri/Nokogiri/XML/SyntaxError/error%3f-i.ri: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/ruby/gems/2.1.0/doc/nokogiri-1.6.7.2/ri/Nokogiri/XML/SyntaxError/domain-i.ri: remove failed: No such file or directory
            62894: |
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/auto/Test/File/.packlist: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/auto/Test/File: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/auto/Test/Fatal/.packlist: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/auto/Test/Fatal: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/auto/Test/Exception/.packlist: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/auto/Test/Exception: remove failed: No such file or directory
            63840: |
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/.meta/Test-File-1.44/MYMETA.json: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/.meta/Test-File-1.44: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/.meta/Test-Fatal-0.014/install.json: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/.meta/Test-Fatal-0.014/MYMETA.json: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/.meta/Test-Fatal-0.014: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/.meta/Test-Exception-0.43/install.json: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/x86_64-linux-thread-multi/.meta/Test-Exception-0.43/MYMETA.json: remove failed: No such file or directory
            64222: |
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/Test/File.pm: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/Test/File: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/Test/Fatal.pm: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/Test/Exception.pm: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/site_perl/5.18.1/Test/Dir/Base.pm: remove failed: No such file or directory
            68050: |
              warning: file /opt/opscode/embedded/lib/perl5/5.18.1/File/Basename.pm: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/5.18.1/File: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/5.18.1/Fatal.pm: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/5.18.1/ExtUtils/xsubpp: remove failed: No such file or directory
              warning: file /opt/opscode/embedded/lib/perl5/5.18.1/ExtUtils/typemap: remove failed: No such file or directory
            105145: |
              warning: file /opt/chef-backend/embedded/lib/ruby/gems/2.1.0/doc/nokogiri-1.6.7.2/ri/Nokogiri/XML/SyntaxError/int1-i.ri: remove failed: No such file or directory
              warning: file /opt/chef-backend/embedded/lib/ruby/gems/2.1.0/doc/nokogiri-1.6.7.2/ri/Nokogiri/XML/SyntaxError/file-i.ri: remove failed: No such file or directory
              warning: file /opt/chef-backend/embedded/lib/ruby/gems/2.1.0/doc/nokogiri-1.6.7.2/ri/Nokogiri/XML/SyntaxError/fatal%3f-i.ri: remove failed: No such file or directory
              warning: file /opt/chef-backend/embedded/lib/ruby/gems/2.1.0/doc/nokogiri-1.6.7.2/ri/Nokogiri/XML/SyntaxError/error%3f-i.ri: remove failed: No such file or directory
              warning: file /opt/chef-backend/embedded/lib/ruby/gems/2.1.0/doc/nokogiri-1.6.7.2/ri/Nokogiri/XML/SyntaxError/domain-i.ri: remove failed: No such file or directory
            114014: |
              [2016-04-22T06:58:52-04:00] INFO: GET /organizations/chef/nodes/ip-10-194-12-15.us-west-2.compute.internal
              [2016-04-22T06:58:52-04:00] INFO: #<ChefZero::RestErrorResponse: 404: Object not found: chefzero://localhost:8889/nodes/ip-10-194-12-15.us-west-2.compute.internal>
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:91:in `rescue in get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:83:in `get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/endpoints/rest_object_endpoint.rb:18:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:62:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_router.rb:24:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:664:in `block in app'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `handle_socketless_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:87:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:33:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http/socketless_chef_zero_client.rb:154:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:305:in `block in send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:336:in `block in retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `loop'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:299:in `send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:144:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:111:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:604:in `load'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:588:in `find_or_create'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/policy_builder/dynamic.rb:72:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:465:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:267:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:267:in `run_with_graceful_exit_option'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:243:in `block in run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/local_mode.rb:44:in `with_server_connectivity'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:226:in `run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application/client.rb:419:in `run_application'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:58:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/bin/chef-client:26:in `<top (required)>'
              /opt/opscode/embedded/bin/chef-client:23:in `load'
              /opt/opscode/embedded/bin/chef-client:23:in `<main>'
              [2016-04-22T06:58:52-04:00] INFO:
              --- RESPONSE (404) ---
            117541: |2

                        if attempt == 120
                            raise 'ERROR: Timeout waiting for DRBD mount to return'
                        end
                        print '.'
            118089: |
              if File.exists?("/etc/opscode/chef-server.json") &&
                  !(File.exist?("/etc/opscode/private-chef.rb") || File.exist?("/etc/opscode/chef-server.rb"))
                Chef::Log.fatal("Configuration via /etc/opscode/chef-server.json is not supported. Please use /etc/opscode/chef-server.rb")
                exit!(1)
              else
            119215: |2

                  if !connected
                    Chef::Log.fatal("HAProxy status socket never appeared properly!")
                    Chef::Log.fatal("See /var/log/opscode/haproxy/current for more information")
                    Kernel.exit! 1
                  end
            119266: |2

                  if !stable
                    Chef::Log.fatal("HAProxy still showing multiple active backends")
                    Chef::Log.fatal("Please check /var/log/opscode/haproxy/current locally for problems.")
                    Chef::Log.fatal("Please check your backend cluster's status for problems.")
                    Kernel.exit! 1
                  end
            120275: |2
                  rescue Exception => e
                    message = <<-EOF
              ERROR:
              The /var/opt/opscode/upgrades/migration-level file is missing or corrupt!  Please read http://docs.chef.io/install_server_pre.html and correct this file before proceeding
            121002: |2
                      `echo 'SELECT * FROM pg_database;' | su - #{node['private_chef']['postgresql']['username']} -c '/opt/opscode/embedded/bin/psql -p #{node['private_chef']['postgresql']['port']} -U #{node['private_chef']['postgresql']['db_superuser']} postgres -t -A'`
                if $?.exitstatus != 0
                        Chef::Log.fatal("Could not connect to database, retrying in 10 seconds.")
                        sleep 10
                      else
            121011: |2

                    unless connectable
                      Chef::Log.fatal <<-ERR

              Could not connect to the postgresql database.
            122621: |2
                    # use of exit! prevents exit handlers from running, ensuring the last thing
                    # the customer sees is the descriptive error we've provided.
                    Chef::Log.fatal("\n\n#{LINE_SEP}\n#{e.message}#{LINE_SEP}")
                    exit! 128
                  end
            124139: |2
                      elsif PrivateChef['backend_vips']['ipaddress'] =~ /\:/
                        # IPv6 addresses must have the mask
                        Chef::Log.fatal("backend_vip ipaddress field appears to be a IPv6 address without a netmask  (e.g /64, /48)")
                        exit 66
                      else
            124152: |2
                  def generate_hex_if_bootstrap(chars, ha_guard)
                    if ha_guard
                      Chef::Log.fatal("Attempt to create secrets on non-bootstrap node in an H/A topology, please copy /etc/opscode/* around instead.")
                      exit 44
                    end
            124542: |2
                  def assert_server_config(node_name)
                    unless PrivateChef["servers"].key?(node_name)
                      Chef::Log.fatal <<-EOF
              No server configuration found for "#{node_name}" in /etc/opscode/chef-server.rb.
              Server configuration exists for the following hostnames:
            124569: |2
                        gen_api_fqdn
                      else
                        Chef::Log.fatal("I do not understand topology #{PrivateChef.topology} - try standalone, manual, ha, or tier.")
                        exit 55
                      end
            129451: |2

                if [ ! -d "$OCF_ROOT" ]; then
                  ha_log "ERROR: OCF_ROOT points to non-directory $OCF_ROOT."
                  exit $OCF_ERR_GENERIC
                fi
            129471: |2

                if [ -z "$OCF_RESOURCE_INSTANCE" ]; then
                  ha_log "ERROR: Need to tell us our resource instance name."
                  exit $OCF_ERR_ARGS
                fi
            129508: |2
                        loglevel=notice
                        case "${*}" in
                          *ERROR*)    loglevel=err;;
                          *WARN*)   loglevel=warning;;
                          *INFO*|info)  loglevel=info;;
            129607: |2
                      case "${__OCF_PRIO}" in
                        crit) __OCF_PRIO="CRIT";;
                        err)  __OCF_PRIO="ERROR";;
                        warn) __OCF_PRIO="WARNING";;
                        info) __OCF_PRIO="INFO";;
            130337: |2

              #------------------------------------------------------------------------------
              # ERROR REPORTING AND LOGGING
              #------------------------------------------------------------------------------
            130408: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic
            130422: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic (effectively off)
            130611: |2

              #------------------------------------------------------------------------------
              # ERROR HANDLING
              #------------------------------------------------------------------------------
            143639: |2

                if node['fqdn'].nil?
                  Chef::Log.fatal("This node's fqdn is set to nil, so a read token cannot be issued!" \
                                  "Please change your fqdn settings.")
                end
            144534: |
              [2016-04-22T06:59:30-04:00] INFO: runit_service[haproxy] configured
              [2016-04-22T06:59:30-04:00] INFO: Processing ruby_block[wait for haproxy status socket] action run (private-chef::haproxy line 91)
              [2016-04-22T06:59:40-04:00] FATAL: HAProxy status socket never appeared properly!
              [2016-04-22T06:59:40-04:00] FATAL: See /var/log/opscode/haproxy/current for more information
              Build step 'Invoke XShell command' marked build as failure
              Performing Post build task...
              Match found for : : True
        steps:
          total: 10m46s
          before (setup time): 9m54s
          after (cleanup time): 49s
      ubuntu-10.04:
        result: FAILURE
        failure_category: code
        failure_cause: chef-client
        failed_in:
          step: chef-client
        url: http://wilson.ci.chef.co/job/chef-backend-test/architecture=x86_64,platform=ubuntu-10.04,project=chef-backend,role=tester/200/
        duration: 11m32s
        logs:
          consoleText:
            572: |
              [2016-04-22T10:59:35+00:00] INFO: GET /organizations/chef/nodes/ip-10-194-12-189.us-west-2.compute.internal
              [2016-04-22T10:59:35+00:00] INFO: #<ChefZero::RestErrorResponse: 404: Object not found: chefzero://localhost:8889/nodes/ip-10-194-12-189.us-west-2.compute.internal>
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:91:in `rescue in get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:83:in `get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/endpoints/rest_object_endpoint.rb:18:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:62:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_router.rb:24:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:664:in `block in app'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `handle_socketless_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:87:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:33:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http/socketless_chef_zero_client.rb:154:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:305:in `block in send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:336:in `block in retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `loop'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:299:in `send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:144:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:111:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:604:in `load'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:588:in `find_or_create'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/policy_builder/dynamic.rb:72:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:465:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:267:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:267:in `run_with_graceful_exit_option'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:243:in `block in run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/local_mode.rb:44:in `with_server_connectivity'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:226:in `run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application/client.rb:419:in `run_application'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:58:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/bin/chef-client:26:in `<top (required)>'
              /opt/opscode/embedded/bin/chef-client:23:in `load'
              /opt/opscode/embedded/bin/chef-client:23:in `<main>'
              [2016-04-22T10:59:35+00:00] INFO:
              --- RESPONSE (404) ---
            4070: |2

                        if attempt == 120
                            raise 'ERROR: Timeout waiting for DRBD mount to return'
                        end
                        print '.'
            4622: |
              if File.exists?("/etc/opscode/chef-server.json") &&
                  !(File.exist?("/etc/opscode/private-chef.rb") || File.exist?("/etc/opscode/chef-server.rb"))
                Chef::Log.fatal("Configuration via /etc/opscode/chef-server.json is not supported. Please use /etc/opscode/chef-server.rb")
                exit!(1)
              else
            5720: |2

                  if !connected
                    Chef::Log.fatal("HAProxy status socket never appeared properly!")
                    Chef::Log.fatal("See /var/log/opscode/haproxy/current for more information")
                    Kernel.exit! 1
                  end
            5771: |2

                  if !stable
                    Chef::Log.fatal("HAProxy still showing multiple active backends")
                    Chef::Log.fatal("Please check /var/log/opscode/haproxy/current locally for problems.")
                    Chef::Log.fatal("Please check your backend cluster's status for problems.")
                    Kernel.exit! 1
                  end
            6468: |2
                  rescue Exception => e
                    message = <<-EOF
              ERROR:
              The /var/opt/opscode/upgrades/migration-level file is missing or corrupt!  Please read http://docs.chef.io/install_server_pre.html and correct this file before proceeding
            7386: |2
                      `echo 'SELECT * FROM pg_database;' | su - #{node['private_chef']['postgresql']['username']} -c '/opt/opscode/embedded/bin/psql -p #{node['private_chef']['postgresql']['port']} -U #{node['private_chef']['postgresql']['db_superuser']} postgres -t -A'`
                if $?.exitstatus != 0
                        Chef::Log.fatal("Could not connect to database, retrying in 10 seconds.")
                        sleep 10
                      else
            7395: |2

                    unless connectable
                      Chef::Log.fatal <<-ERR

              Could not connect to the postgresql database.
            7762: |2
                      elsif PrivateChef['backend_vips']['ipaddress'] =~ /\:/
                        # IPv6 addresses must have the mask
                        Chef::Log.fatal("backend_vip ipaddress field appears to be a IPv6 address without a netmask  (e.g /64, /48)")
                        exit 66
                      else
            7775: |2
                  def generate_hex_if_bootstrap(chars, ha_guard)
                    if ha_guard
                      Chef::Log.fatal("Attempt to create secrets on non-bootstrap node in an H/A topology, please copy /etc/opscode/* around instead.")
                      exit 44
                    end
            8164: |2
                  def assert_server_config(node_name)
                    unless PrivateChef["servers"].key?(node_name)
                      Chef::Log.fatal <<-EOF
              No server configuration found for "#{node_name}" in /etc/opscode/chef-server.rb.
              Server configuration exists for the following hostnames:
            8191: |2
                        gen_api_fqdn
                      else
                        Chef::Log.fatal("I do not understand topology #{PrivateChef.topology} - try standalone, manual, ha, or tier.")
                        exit 55
                      end
            9266: |2
                    # use of exit! prevents exit handlers from running, ensuring the last thing
                    # the customer sees is the descriptive error we've provided.
                    Chef::Log.fatal("\n\n#{LINE_SEP}\n#{e.message}#{LINE_SEP}")
                    exit! 128
                  end
            13548: |2

              #------------------------------------------------------------------------------
              # ERROR REPORTING AND LOGGING
              #------------------------------------------------------------------------------
            13619: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic
            13633: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic (effectively off)
            13822: |2

              #------------------------------------------------------------------------------
              # ERROR HANDLING
              #------------------------------------------------------------------------------
            17266: |2

                if [ ! -d "$OCF_ROOT" ]; then
                  ha_log "ERROR: OCF_ROOT points to non-directory $OCF_ROOT."
                  exit $OCF_ERR_GENERIC
                fi
            17287: |2

                if [ -z "$OCF_RESOURCE_INSTANCE" ]; then
                  ha_log "ERROR: Need to tell us our resource instance name."
                  exit $OCF_ERR_ARGS
                fi
            17324: |2
                        loglevel=notice
                        case "${*}" in
                          *ERROR*)    loglevel=err;;
                          *WARN*)   loglevel=warning;;
                          *INFO*|info)  loglevel=info;;
            17423: |2
                      case "${__OCF_PRIO}" in
                        crit) __OCF_PRIO="CRIT";;
                        err)  __OCF_PRIO="ERROR";;
                        warn) __OCF_PRIO="WARNING";;
                        info) __OCF_PRIO="INFO";;
            29095: |2

                if node['fqdn'].nil?
                  Chef::Log.fatal("This node's fqdn is set to nil, so a read token cannot be issued!" \
                                  "Please change your fqdn settings.")
                end
            31098: |
              [2016-04-22T11:00:17+00:00] INFO: runit_service[haproxy] configured
              [2016-04-22T11:00:17+00:00] INFO: Processing ruby_block[wait for haproxy status socket] action run (private-chef::haproxy line 91)
              [2016-04-22T11:00:27+00:00] FATAL: HAProxy status socket never appeared properly!
              [2016-04-22T11:00:27+00:00] FATAL: See /var/log/opscode/haproxy/current for more information
              Build step 'Invoke XShell command' marked build as failure
              Performing Post build task...
              Match found for : : True
        steps:
          total: 11m32s
          before (setup time): 10m37s
          after (cleanup time): 52s
      ubuntu-12.04:
        result: FAILURE
        failure_category: code
        failure_cause: chef-client
        failed_in:
          step: chef-client
        url: http://wilson.ci.chef.co/job/chef-backend-test/architecture=x86_64,platform=ubuntu-12.04,project=chef-backend,role=tester/200/
        duration: 11m42s
        logs:
          consoleText:
            570: |
              [2016-04-22T10:59:45+00:00] INFO: GET /organizations/chef/nodes/ip-10-194-9-231.us-west-2.compute.internal
              [2016-04-22T10:59:45+00:00] INFO: #<ChefZero::RestErrorResponse: 404: Object not found: chefzero://localhost:8889/nodes/ip-10-194-9-231.us-west-2.compute.internal>
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:91:in `rescue in get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:83:in `get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/endpoints/rest_object_endpoint.rb:18:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:62:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_router.rb:24:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:664:in `block in app'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `handle_socketless_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:87:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:33:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http/socketless_chef_zero_client.rb:154:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:305:in `block in send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:336:in `block in retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `loop'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:299:in `send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:144:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:111:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:604:in `load'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:588:in `find_or_create'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/policy_builder/dynamic.rb:72:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:465:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:267:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:267:in `run_with_graceful_exit_option'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:243:in `block in run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/local_mode.rb:44:in `with_server_connectivity'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:226:in `run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application/client.rb:419:in `run_application'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:58:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/bin/chef-client:26:in `<top (required)>'
              /opt/opscode/embedded/bin/chef-client:23:in `load'
              /opt/opscode/embedded/bin/chef-client:23:in `<main>'
              [2016-04-22T10:59:45+00:00] INFO:
              --- RESPONSE (404) ---
            4325: |2

                        if attempt == 120
                            raise 'ERROR: Timeout waiting for DRBD mount to return'
                        end
                        print '.'
            5473: |2
                      `echo 'SELECT * FROM pg_database;' | su - #{node['private_chef']['postgresql']['username']} -c '/opt/opscode/embedded/bin/psql -p #{node['private_chef']['postgresql']['port']} -U #{node['private_chef']['postgresql']['db_superuser']} postgres -t -A'`
                if $?.exitstatus != 0
                        Chef::Log.fatal("Could not connect to database, retrying in 10 seconds.")
                        sleep 10
                      else
            5482: |2

                    unless connectable
                      Chef::Log.fatal <<-ERR

              Could not connect to the postgresql database.
            5629: |2
                  rescue Exception => e
                    message = <<-EOF
              ERROR:
              The /var/opt/opscode/upgrades/migration-level file is missing or corrupt!  Please read http://docs.chef.io/install_server_pre.html and correct this file before proceeding
            6830: |
              if File.exists?("/etc/opscode/chef-server.json") &&
                  !(File.exist?("/etc/opscode/private-chef.rb") || File.exist?("/etc/opscode/chef-server.rb"))
                Chef::Log.fatal("Configuration via /etc/opscode/chef-server.json is not supported. Please use /etc/opscode/chef-server.rb")
                exit!(1)
              else
            7613: |2

                  if !connected
                    Chef::Log.fatal("HAProxy status socket never appeared properly!")
                    Chef::Log.fatal("See /var/log/opscode/haproxy/current for more information")
                    Kernel.exit! 1
                  end
            7664: |2

                  if !stable
                    Chef::Log.fatal("HAProxy still showing multiple active backends")
                    Chef::Log.fatal("Please check /var/log/opscode/haproxy/current locally for problems.")
                    Chef::Log.fatal("Please check your backend cluster's status for problems.")
                    Kernel.exit! 1
                  end
            8242: |2
                    # use of exit! prevents exit handlers from running, ensuring the last thing
                    # the customer sees is the descriptive error we've provided.
                    Chef::Log.fatal("\n\n#{LINE_SEP}\n#{e.message}#{LINE_SEP}")
                    exit! 128
                  end
            8423: |2
                      elsif PrivateChef['backend_vips']['ipaddress'] =~ /\:/
                        # IPv6 addresses must have the mask
                        Chef::Log.fatal("backend_vip ipaddress field appears to be a IPv6 address without a netmask  (e.g /64, /48)")
                        exit 66
                      else
            8436: |2
                  def generate_hex_if_bootstrap(chars, ha_guard)
                    if ha_guard
                      Chef::Log.fatal("Attempt to create secrets on non-bootstrap node in an H/A topology, please copy /etc/opscode/* around instead.")
                      exit 44
                    end
            8825: |2
                  def assert_server_config(node_name)
                    unless PrivateChef["servers"].key?(node_name)
                      Chef::Log.fatal <<-EOF
              No server configuration found for "#{node_name}" in /etc/opscode/chef-server.rb.
              Server configuration exists for the following hostnames:
            8852: |2
                        gen_api_fqdn
                      else
                        Chef::Log.fatal("I do not understand topology #{PrivateChef.topology} - try standalone, manual, ha, or tier.")
                        exit 55
                      end
            18379: |2

              #------------------------------------------------------------------------------
              # ERROR REPORTING AND LOGGING
              #------------------------------------------------------------------------------
            18450: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic
            18464: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic (effectively off)
            18653: |2

              #------------------------------------------------------------------------------
              # ERROR HANDLING
              #------------------------------------------------------------------------------
            20552: |2

                if [ ! -d "$OCF_ROOT" ]; then
                  ha_log "ERROR: OCF_ROOT points to non-directory $OCF_ROOT."
                  exit $OCF_ERR_GENERIC
                fi
            20572: |2

                if [ -z "$OCF_RESOURCE_INSTANCE" ]; then
                  ha_log "ERROR: Need to tell us our resource instance name."
                  exit $OCF_ERR_ARGS
                fi
            20609: |2
                        loglevel=notice
                        case "${*}" in
                          *ERROR*)    loglevel=err;;
                          *WARN*)   loglevel=warning;;
                          *INFO*|info)  loglevel=info;;
            20708: |2
                      case "${__OCF_PRIO}" in
                        crit) __OCF_PRIO="CRIT";;
                        err)  __OCF_PRIO="ERROR";;
                        warn) __OCF_PRIO="WARNING";;
                        info) __OCF_PRIO="INFO";;
            30106: |2

                if node['fqdn'].nil?
                  Chef::Log.fatal("This node's fqdn is set to nil, so a read token cannot be issued!" \
                                  "Please change your fqdn settings.")
                end
            31097: |
              [2016-04-22T11:00:27+00:00] INFO: runit_service[haproxy] configured
              [2016-04-22T11:00:27+00:00] INFO: Processing ruby_block[wait for haproxy status socket] action run (private-chef::haproxy line 91)
              [2016-04-22T11:00:37+00:00] FATAL: HAProxy status socket never appeared properly!
              [2016-04-22T11:00:37+00:00] FATAL: See /var/log/opscode/haproxy/current for more information
              Build step 'Invoke XShell command' marked build as failure
              Performing Post build task...
              Match found for : : True
        steps:
          total: 11m42s
          before (setup time): 10m48s
          after (cleanup time): 52s
      ubuntu-14.04:
        result: FAILURE
        failure_category: code
        failure_cause: chef-client
        failed_in:
          step: chef-client
        url: http://wilson.ci.chef.co/job/chef-backend-test/architecture=x86_64,platform=ubuntu-14.04,project=chef-backend,role=tester/200/
        duration: 11m10s
        logs:
          consoleText:
            625: |
              [2016-04-22T10:59:28+00:00] INFO: GET /organizations/chef/nodes/ip-10-194-12-73.us-west-2.compute.internal
              [2016-04-22T10:59:28+00:00] INFO: #<ChefZero::RestErrorResponse: 404: Object not found: chefzero://localhost:8889/nodes/ip-10-194-12-73.us-west-2.compute.internal>
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:91:in `rescue in get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:83:in `get_data'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/endpoints/rest_object_endpoint.rb:18:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_base.rb:62:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/rest_router.rb:24:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:664:in `block in app'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `call'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/server.rb:336:in `handle_socketless_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:87:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-zero-4.6.1/lib/chef_zero/socketless_server_map.rb:33:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http/socketless_chef_zero_client.rb:154:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:305:in `block in send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:336:in `block in retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `loop'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:334:in `retrying_http_errors'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:299:in `send_http_request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:144:in `request'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/http.rb:111:in `get'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:604:in `load'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/node.rb:588:in `find_or_create'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/policy_builder/dynamic.rb:72:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:465:in `load_node'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/client.rb:267:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:267:in `run_with_graceful_exit_option'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:243:in `block in run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/local_mode.rb:44:in `with_server_connectivity'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:226:in `run_chef_client'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application/client.rb:419:in `run_application'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/lib/chef/application.rb:58:in `run'
              /opt/opscode/embedded/lib/ruby/gems/2.1.0/gems/chef-12.10.13/bin/chef-client:26:in `<top (required)>'
              /opt/opscode/embedded/bin/chef-client:23:in `load'
              /opt/opscode/embedded/bin/chef-client:23:in `<main>'
              [2016-04-22T10:59:28+00:00] INFO:
              --- RESPONSE (404) ---
            4455: |2

                        if attempt == 120
                            raise 'ERROR: Timeout waiting for DRBD mount to return'
                        end
                        print '.'
            5069: |2

                  if !connected
                    Chef::Log.fatal("HAProxy status socket never appeared properly!")
                    Chef::Log.fatal("See /var/log/opscode/haproxy/current for more information")
                    Kernel.exit! 1
                  end
            5120: |2

                  if !stable
                    Chef::Log.fatal("HAProxy still showing multiple active backends")
                    Chef::Log.fatal("Please check /var/log/opscode/haproxy/current locally for problems.")
                    Chef::Log.fatal("Please check your backend cluster's status for problems.")
                    Kernel.exit! 1
                  end
            5790: |
              if File.exists?("/etc/opscode/chef-server.json") &&
                  !(File.exist?("/etc/opscode/private-chef.rb") || File.exist?("/etc/opscode/chef-server.rb"))
                Chef::Log.fatal("Configuration via /etc/opscode/chef-server.json is not supported. Please use /etc/opscode/chef-server.rb")
                exit!(1)
              else
            6864: |2
                      `echo 'SELECT * FROM pg_database;' | su - #{node['private_chef']['postgresql']['username']} -c '/opt/opscode/embedded/bin/psql -p #{node['private_chef']['postgresql']['port']} -U #{node['private_chef']['postgresql']['db_superuser']} postgres -t -A'`
                if $?.exitstatus != 0
                        Chef::Log.fatal("Could not connect to database, retrying in 10 seconds.")
                        sleep 10
                      else
            6873: |2

                    unless connectable
                      Chef::Log.fatal <<-ERR

              Could not connect to the postgresql database.
            7196: |2
                  rescue Exception => e
                    message = <<-EOF
              ERROR:
              The /var/opt/opscode/upgrades/migration-level file is missing or corrupt!  Please read http://docs.chef.io/install_server_pre.html and correct this file before proceeding
            8468: |2
                    # use of exit! prevents exit handlers from running, ensuring the last thing
                    # the customer sees is the descriptive error we've provided.
                    Chef::Log.fatal("\n\n#{LINE_SEP}\n#{e.message}#{LINE_SEP}")
                    exit! 128
                  end
            9889: |2
                      elsif PrivateChef['backend_vips']['ipaddress'] =~ /\:/
                        # IPv6 addresses must have the mask
                        Chef::Log.fatal("backend_vip ipaddress field appears to be a IPv6 address without a netmask  (e.g /64, /48)")
                        exit 66
                      else
            9902: |2
                  def generate_hex_if_bootstrap(chars, ha_guard)
                    if ha_guard
                      Chef::Log.fatal("Attempt to create secrets on non-bootstrap node in an H/A topology, please copy /etc/opscode/* around instead.")
                      exit 44
                    end
            10291: |2
                  def assert_server_config(node_name)
                    unless PrivateChef["servers"].key?(node_name)
                      Chef::Log.fatal <<-EOF
              No server configuration found for "#{node_name}" in /etc/opscode/chef-server.rb.
              Server configuration exists for the following hostnames:
            10318: |2
                        gen_api_fqdn
                      else
                        Chef::Log.fatal("I do not understand topology #{PrivateChef.topology} - try standalone, manual, ha, or tier.")
                        exit 55
                      end
            14765: |2

                if [ ! -d "$OCF_ROOT" ]; then
                  ha_log "ERROR: OCF_ROOT points to non-directory $OCF_ROOT."
                  exit $OCF_ERR_GENERIC
                fi
            14785: |2

                if [ -z "$OCF_RESOURCE_INSTANCE" ]; then
                  ha_log "ERROR: Need to tell us our resource instance name."
                  exit $OCF_ERR_ARGS
                fi
            14822: |2
                        loglevel=notice
                        case "${*}" in
                          *ERROR*)    loglevel=err;;
                          *WARN*)   loglevel=warning;;
                          *INFO*|info)  loglevel=info;;
            14921: |2
                      case "${__OCF_PRIO}" in
                        crit) __OCF_PRIO="CRIT";;
                        err)  __OCF_PRIO="ERROR";;
                        warn) __OCF_PRIO="WARNING";;
                        info) __OCF_PRIO="INFO";;
            16574: |2

              #------------------------------------------------------------------------------
              # ERROR REPORTING AND LOGGING
              #------------------------------------------------------------------------------
            16645: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic
            16659: |2
                        #   error
                        #   log
                        #   fatal
                        #   panic (effectively off)
            16848: |2

              #------------------------------------------------------------------------------
              # ERROR HANDLING
              #------------------------------------------------------------------------------
            30404: |2

                if node['fqdn'].nil?
                  Chef::Log.fatal("This node's fqdn is set to nil, so a read token cannot be issued!" \
                                  "Please change your fqdn settings.")
                end
            31142: |
              [2016-04-22T10:59:38+00:00] INFO: runit_service[haproxy] enabled
              [2016-04-22T10:59:54+00:00] INFO: Processing ruby_block[wait for haproxy status socket] action run (private-chef::haproxy line 91)
              [2016-04-22T11:00:04+00:00] FATAL: HAProxy status socket never appeared properly!
              [2016-04-22T11:00:04+00:00] FATAL: See /var/log/opscode/haproxy/current for more information
              Build step 'Invoke XShell command' marked build as failure
              Performing Post build task...
              Match found for : : True
        steps:
          total: 11m10s
          before (setup time): 10m31s
          after (cleanup time): 36s
  chef-backend-build:
    result: SUCCESS
    url: http://wilson.ci.chef.co/job/chef-backend-build/211/
    duration: 18m25s
    runs:
      el-5:
        result: SUCCESS
        url: http://wilson.ci.chef.co/job/chef-backend-build/architecture=x86_64,platform=el-5,project=chef-backend,role=builder/211/
        duration: 18m18s
      el-6:
        result: SUCCESS
        url: http://wilson.ci.chef.co/job/chef-backend-build/architecture=x86_64,platform=el-6,project=chef-backend,role=builder/211/
        duration: 18m1s
      el-7:
        result: SUCCESS
        url: http://wilson.ci.chef.co/job/chef-backend-build/architecture=x86_64,platform=el-7,project=chef-backend,role=builder/211/
        duration: 13m56s
      ubuntu-10.04:
        result: SUCCESS
        url: http://wilson.ci.chef.co/job/chef-backend-build/architecture=x86_64,platform=ubuntu-10.04,project=chef-backend,role=builder/211/
        duration: 14m13s
  chef-backend-trigger-git_poll:
    result: SUCCESS
    url: http://wilson.ci.chef.co/job/chef-backend-trigger-git_poll/178/
    duration: 5s
